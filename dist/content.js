// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"../node_modules/@webcomponents/webcomponentsjs/webcomponents-bundle.js":[function(require,module,exports) {
var global = arguments[3];
/**
@license @nocompile
Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
(function(){/*

 Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at
 http://polymer.github.io/LICENSE.txt The complete set of authors may be found
 at http://polymer.github.io/AUTHORS.txt The complete set of contributors may
 be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by
 Google as part of the polymer project is also subject to an additional IP
 rights grant found at http://polymer.github.io/PATENTS.txt
*/
'use strict';var v;function ba(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}}var ca="function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){if(a==Array.prototype||a==Object.prototype)return a;a[b]=c.value;return a};
function da(a){a=["object"==typeof globalThis&&globalThis,a,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof global&&global];for(var b=0;b<a.length;++b){var c=a[b];if(c&&c.Math==Math)return c}throw Error("Cannot find global object");}var ea=da(this);function fa(a,b){if(b)a:{var c=ea;a=a.split(".");for(var d=0;d<a.length-1;d++){var e=a[d];if(!(e in c))break a;c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&ca(c,a,{configurable:!0,writable:!0,value:b})}}
fa("Symbol",function(a){function b(e){if(this instanceof b)throw new TypeError("Symbol is not a constructor");return new c("jscomp_symbol_"+(e||"")+"_"+d++,e)}function c(e,f){this.g=e;ca(this,"description",{configurable:!0,writable:!0,value:f})}if(a)return a;c.prototype.toString=function(){return this.g};var d=0;return b});
fa("Symbol.iterator",function(a){if(a)return a;a=Symbol("Symbol.iterator");for(var b="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),c=0;c<b.length;c++){var d=ea[b[c]];"function"===typeof d&&"function"!=typeof d.prototype[a]&&ca(d.prototype,a,{configurable:!0,writable:!0,value:function(){return ja(ba(this))}})}return a});function ja(a){a={next:a};a[Symbol.iterator]=function(){return this};return a}
function ka(a){var b="undefined"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):{next:ba(a)}}function w(a){if(!(a instanceof Array)){a=ka(a);for(var b,c=[];!(b=a.next()).done;)c.push(b.value);a=c}return a}var la;if("function"==typeof Object.setPrototypeOf)la=Object.setPrototypeOf;else{var na;a:{var oa={a:!0},pa={};try{pa.__proto__=oa;na=pa.a;break a}catch(a){}na=!1}la=na?function(a,b){a.__proto__=b;if(a.__proto__!==b)throw new TypeError(a+" is not extensible");return a}:null}
var qa=la;function ra(){this.u=!1;this.h=null;this.Oa=void 0;this.g=1;this.ea=0;this.i=null}function ua(a){if(a.u)throw new TypeError("Generator is already running");a.u=!0}ra.prototype.O=function(a){this.Oa=a};function wa(a,b){a.i={ab:b,fb:!0};a.g=a.ea}ra.prototype.return=function(a){this.i={return:a};this.g=this.ea};function ya(a,b){a.g=3;return{value:b}}function za(a){this.g=new ra;this.h=a}
function Aa(a,b){ua(a.g);var c=a.g.h;if(c)return Ba(a,"return"in c?c["return"]:function(d){return{value:d,done:!0}},b,a.g.return);a.g.return(b);return Ca(a)}function Ba(a,b,c,d){try{var e=b.call(a.g.h,c);if(!(e instanceof Object))throw new TypeError("Iterator result "+e+" is not an object");if(!e.done)return a.g.u=!1,e;var f=e.value}catch(g){return a.g.h=null,wa(a.g,g),Ca(a)}a.g.h=null;d.call(a.g,f);return Ca(a)}
function Ca(a){for(;a.g.g;)try{var b=a.h(a.g);if(b)return a.g.u=!1,{value:b.value,done:!1}}catch(c){a.g.Oa=void 0,wa(a.g,c)}a.g.u=!1;if(a.g.i){b=a.g.i;a.g.i=null;if(b.fb)throw b.ab;return{value:b.return,done:!0}}return{value:void 0,done:!0}}
function Da(a){this.next=function(b){ua(a.g);a.g.h?b=Ba(a,a.g.h.next,b,a.g.O):(a.g.O(b),b=Ca(a));return b};this.throw=function(b){ua(a.g);a.g.h?b=Ba(a,a.g.h["throw"],b,a.g.O):(wa(a.g,b),b=Ca(a));return b};this.return=function(b){return Aa(a,b)};this[Symbol.iterator]=function(){return this}}function Ea(a,b){b=new Da(new za(b));qa&&a.prototype&&qa(b,a.prototype);return b}Array.from||(Array.from=function(a){return[].slice.call(a)});
Object.assign||(Object.assign=function(a){for(var b=[].slice.call(arguments,1),c=0,d;c<b.length;c++)if(d=b[c])for(var e=a,f=Object.keys(d),g=0;g<f.length;g++){var h=f[g];e[h]=d[h]}return a});var Fa=setTimeout;function Ga(){}function Ha(a,b){return function(){a.apply(b,arguments)}}function A(a){if(!(this instanceof A))throw new TypeError("Promises must be constructed via new");if("function"!==typeof a)throw new TypeError("not a function");this.N=0;this.Ha=!1;this.I=void 0;this.ba=[];Ia(a,this)}
function Ja(a,b){for(;3===a.N;)a=a.I;0===a.N?a.ba.push(b):(a.Ha=!0,Ka(function(){var c=1===a.N?b.hb:b.ib;if(null===c)(1===a.N?La:Ma)(b.promise,a.I);else{try{var d=c(a.I)}catch(e){Ma(b.promise,e);return}La(b.promise,d)}}))}
function La(a,b){try{if(b===a)throw new TypeError("A promise cannot be resolved with itself.");if(b&&("object"===typeof b||"function"===typeof b)){var c=b.then;if(b instanceof A){a.N=3;a.I=b;Na(a);return}if("function"===typeof c){Ia(Ha(c,b),a);return}}a.N=1;a.I=b;Na(a)}catch(d){Ma(a,d)}}function Ma(a,b){a.N=2;a.I=b;Na(a)}
function Na(a){2===a.N&&0===a.ba.length&&Ka(function(){a.Ha||"undefined"!==typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",a.I)});for(var b=0,c=a.ba.length;b<c;b++)Ja(a,a.ba[b]);a.ba=null}function Oa(a,b,c){this.hb="function"===typeof a?a:null;this.ib="function"===typeof b?b:null;this.promise=c}function Ia(a,b){var c=!1;try{a(function(d){c||(c=!0,La(b,d))},function(d){c||(c=!0,Ma(b,d))})}catch(d){c||(c=!0,Ma(b,d))}}
A.prototype["catch"]=function(a){return this.then(null,a)};A.prototype.then=function(a,b){var c=new this.constructor(Ga);Ja(this,new Oa(a,b,c));return c};A.prototype["finally"]=function(a){var b=this.constructor;return this.then(function(c){return b.resolve(a()).then(function(){return c})},function(c){return b.resolve(a()).then(function(){return b.reject(c)})})};
function Pa(a){return new A(function(b,c){function d(h,k){try{if(k&&("object"===typeof k||"function"===typeof k)){var l=k.then;if("function"===typeof l){l.call(k,function(m){d(h,m)},c);return}}e[h]=k;0===--f&&b(e)}catch(m){c(m)}}if(!a||"undefined"===typeof a.length)return c(new TypeError("Promise.all accepts an array"));var e=Array.prototype.slice.call(a);if(0===e.length)return b([]);for(var f=e.length,g=0;g<e.length;g++)d(g,e[g])})}
function Qa(a){return a&&"object"===typeof a&&a.constructor===A?a:new A(function(b){b(a)})}function Ra(a){return new A(function(b,c){c(a)})}function Sa(a){return new A(function(b,c){if(!a||"undefined"===typeof a.length)return c(new TypeError("Promise.race accepts an array"));for(var d=0,e=a.length;d<e;d++)Qa(a[d]).then(b,c)})}var Ka="function"===typeof setImmediate&&function(a){setImmediate(a)}||function(a){Fa(a,0)};/*

Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
part of the polymer project is also subject to an additional IP rights grant
found at http://polymer.github.io/PATENTS.txt
*/
if(!window.Promise){window.Promise=A;A.prototype.then=A.prototype.then;A.all=Pa;A.race=Sa;A.resolve=Qa;A.reject=Ra;var Ta=document.createTextNode(""),Ua=[];(new MutationObserver(function(){for(var a=Ua.length,b=0;b<a;b++)Ua[b]();Ua.splice(0,a)})).observe(Ta,{characterData:!0});Ka=function(a){Ua.push(a);Ta.textContent=0<Ta.textContent.length?"":"a"}};/*
 Copyright (C) 2015 by WebReflection

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/
(function(a,b){if(!(b in a)){var c=typeof global===typeof c?window:global,d=0,e=String(Math.random()),f="__\u0001symbol@@"+e,g=a.getOwnPropertyNames,h=a.getOwnPropertyDescriptor,k=a.create,l=a.keys,m=a.freeze||a,q=a.defineProperty,H=a.defineProperties,C=h(a,"getOwnPropertyNames"),t=a.prototype,F=t.hasOwnProperty,E=t.propertyIsEnumerable,N=t.toString,y=function(I,u,G){F.call(I,f)||q(I,f,{enumerable:!1,configurable:!1,writable:!1,value:{}});I[f]["@@"+u]=G},X=function(I,u){var G=k(I);g(u).forEach(function(p){sa.call(u,
p)&&Va(G,p,u[p])});return G},x=function(){},ta=function(I){return I!=f&&!F.call(ha,I)},ia=function(I){return I!=f&&F.call(ha,I)},sa=function(I){var u=String(I);return ia(u)?F.call(this,u)&&!!this[f]&&this[f]["@@"+u]:E.call(this,I)},n=function(I){q(t,I,{enumerable:!1,configurable:!0,get:x,set:function(u){xa(this,I,{enumerable:!1,configurable:!0,writable:!0,value:u});y(this,I,!0)}});ha[I]=q(a(I),"constructor",jc);return m(ha[I])},J=function G(u){if(this instanceof G)throw new TypeError("Symbol is not a constructor");
return n("__\u0001symbol:".concat(u||"",e,++d))},ha=k(null),jc={value:J},ib=function(u){return ha[u]},Va=function(u,G,p){var r=String(G);if(ia(r)){G=xa;if(p.enumerable){var B=k(p);B.enumerable=!1}else B=p;G(u,r,B);y(u,r,!!p.enumerable)}else q(u,G,p);return u},jb=function(u){return g(u).filter(ia).map(ib)};C.value=Va;q(a,"defineProperty",C);C.value=jb;q(a,b,C);C.value=function(u){return g(u).filter(ta)};q(a,"getOwnPropertyNames",C);C.value=function(u,G){var p=jb(G);p.length?l(G).concat(p).forEach(function(r){sa.call(G,
r)&&Va(u,r,G[r])}):H(u,G);return u};q(a,"defineProperties",C);C.value=sa;q(t,"propertyIsEnumerable",C);C.value=J;q(c,"Symbol",C);C.value=function(u){u="__\u0001symbol:".concat("__\u0001symbol:",u,e);return u in t?ha[u]:n(u)};q(J,"for",C);C.value=function(u){if(ta(u))throw new TypeError(u+" is not a symbol");if(F.call(ha,u)&&(u=u.slice(10),"__\u0001symbol:"===u.slice(0,10)&&(u=u.slice(10),u!==e)))return u=u.slice(0,u.length-e.length),0<u.length?u:void 0};q(J,"keyFor",C);C.value=function(u,G){var p=
h(u,G);p&&ia(G)&&(p.enumerable=sa.call(u,G));return p};q(a,"getOwnPropertyDescriptor",C);C.value=function(u,G){return 1===arguments.length||"undefined"===typeof G?k(u):X(u,G)};q(a,"create",C);C.value=function(){var u=N.call(this);return"[object String]"===u&&ia(this)?"[object Symbol]":u};q(t,"toString",C);try{if(!0===k(q({},"__\u0001symbol:",{get:function(){return q(this,"__\u0001symbol:",{value:!0})["__\u0001symbol:"]}}))["__\u0001symbol:"])var xa=q;else throw"IE11";}catch(u){xa=function(G,p,r){var B=
h(t,p);delete t[p];q(G,p,r);q(t,p,B)}}}})(Object,"getOwnPropertySymbols");
(function(a,b){var c=a.defineProperty,d=a.prototype,e=d.toString,f;"iterator match replace search split hasInstance isConcatSpreadable unscopables species toPrimitive toStringTag".split(" ").forEach(function(g){g in b||(c(b,g,{value:b(g)}),"toStringTag"===g&&(f=a.getOwnPropertyDescriptor(d,"toString"),f.value=function(){var h=e.call(this),k=null==this?this:this[b.toStringTag];return null==k?h:"[object "+k+"]"},c(d,"toString",f)))})})(Object,Symbol);
(function(a,b,c){function d(){return this}b[a]||(b[a]=function(){var e=0,f=this,g={next:function(){var h=f.length<=e;return h?{done:h}:{done:h,value:f[e++]}}};g[a]=d;return g});c[a]||(c[a]=function(){var e=String.fromCodePoint,f=this,g=0,h=f.length,k={next:function(){var l=h<=g,m=l?"":e(f.codePointAt(g));g+=m.length;return l?{done:l}:{done:l,value:m}}};k[a]=d;return k})})(Symbol.iterator,Array.prototype,String.prototype);/*

Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
part of the polymer project is also subject to an additional IP rights grant
found at http://polymer.github.io/PATENTS.txt
*/
var Wa=Object.prototype.toString;Object.prototype.toString=function(){return void 0===this?"[object Undefined]":null===this?"[object Null]":Wa.call(this)};Object.keys=function(a){return Object.getOwnPropertyNames(a).filter(function(b){return(b=Object.getOwnPropertyDescriptor(a,b))&&b.enumerable})};
String.prototype[Symbol.iterator]&&String.prototype.codePointAt||(String.prototype[Symbol.iterator]=function Xa(){var b,c=this;return Ea(Xa,function(d){1==d.g&&(b=0);if(3!=d.g)return b<c.length?d=ya(d,c[b]):(d.g=0,d=void 0),d;b++;d.g=2})});Set.prototype[Symbol.iterator]||(Set.prototype[Symbol.iterator]=function Ya(){var b,c=this,d;return Ea(Ya,function(e){1==e.g&&(b=[],c.forEach(function(f){b.push(f)}),d=0);if(3!=e.g)return d<b.length?e=ya(e,b[d]):(e.g=0,e=void 0),e;d++;e.g=2})});
Map.prototype[Symbol.iterator]||(Map.prototype[Symbol.iterator]=function Za(){var b,c=this,d;return Ea(Za,function(e){1==e.g&&(b=[],c.forEach(function(f,g){b.push([g,f])}),d=0);if(3!=e.g)return d<b.length?e=ya(e,b[d]):(e.g=0,e=void 0),e;d++;e.g=2})});/*

Copyright (c) 2020 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
var $a=document.createEvent("Event");$a.initEvent("foo",!0,!0);$a.preventDefault();if(!$a.defaultPrevented){var ab=Event.prototype.preventDefault;Event.prototype.preventDefault=function(){this.cancelable&&(ab.call(this),Object.defineProperty(this,"defaultPrevented",{get:function(){return!0},configurable:!0}))}}var bb=/Trident/.test(navigator.userAgent);
if(!window.Event||bb&&"function"!==typeof window.Event){var cb=window.Event;window.Event=function(a,b){b=b||{};var c=document.createEvent("Event");c.initEvent(a,!!b.bubbles,!!b.cancelable);return c};if(cb){for(var db in cb)window.Event[db]=cb[db];window.Event.prototype=cb.prototype}}
if(!window.CustomEvent||bb&&"function"!==typeof window.CustomEvent)window.CustomEvent=function(a,b){b=b||{};var c=document.createEvent("CustomEvent");c.initCustomEvent(a,!!b.bubbles,!!b.cancelable,b.detail);return c},window.CustomEvent.prototype=window.Event.prototype;
if(!window.MouseEvent||bb&&"function"!==typeof window.MouseEvent){var eb=window.MouseEvent;window.MouseEvent=function(a,b){b=b||{};var c=document.createEvent("MouseEvent");c.initMouseEvent(a,!!b.bubbles,!!b.cancelable,b.view||window,b.detail,b.screenX,b.screenY,b.clientX,b.clientY,b.ctrlKey,b.altKey,b.shiftKey,b.metaKey,b.button,b.relatedTarget);return c};if(eb)for(var fb in eb)window.MouseEvent[fb]=eb[fb];window.MouseEvent.prototype=eb.prototype};var gb,hb=function(){function a(){e++}var b=!1,c=!1,d={get capture(){return b=!0},get once(){return c=!0}},e=0,f=document.createElement("div");f.addEventListener("click",a,d);var g=b&&c;g&&(f.dispatchEvent(new Event("click")),f.dispatchEvent(new Event("click")),g=1==e);f.removeEventListener("click",a,d);return g}(),kb=null!==(gb=window.EventTarget)&&void 0!==gb?gb:window.Node;
if(!hb&&"addEventListener"in kb.prototype){var lb=function(a){if(!a||"object"!==typeof a&&"function"!==typeof a){var b=!!a;a=!1}else b=!!a.capture,a=!!a.once;return{capture:b,once:a}},mb=kb.prototype.addEventListener,nb=kb.prototype.removeEventListener,qb=new WeakMap,rb=new WeakMap,sb=function(a,b,c){var d=c?qb:rb;c=d.get(a);void 0===c&&d.set(a,c=new Map);a=c.get(b);void 0===a&&c.set(b,a=new WeakMap);return a};kb.prototype.addEventListener=function(a,b,c){var d=this;if(null!=b){c=lb(c);var e=c.capture;
c=c.once;var f=sb(this,a,e);if(!f.has(b)){var g=c?function(h){f.delete(b);nb.call(d,a,g,e);if("function"===typeof b)return b.call(d,h);if("function"===typeof(null===b||void 0===b?void 0:b.handleEvent))return b.handleEvent(h)}:null;f.set(b,g);mb.call(this,a,null!==g&&void 0!==g?g:b,e)}}};kb.prototype.removeEventListener=function(a,b,c){if(null!=b){c=lb(c).capture;var d=sb(this,a,c),e=d.get(b);void 0!==e&&(d.delete(b),nb.call(this,a,null!==e&&void 0!==e?e:b,c))}}};Object.getOwnPropertyDescriptor(Node.prototype,"baseURI")||Object.defineProperty(Node.prototype,"baseURI",{get:function(){var a=(this.ownerDocument||this).querySelector("base[href]");return a&&a.href||window.location.href},configurable:!0,enumerable:!0});/*

Copyright (c) 2020 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
part of the polymer project is also subject to an additional IP rights grant
found at http://polymer.github.io/PATENTS.txt
*/
var tb,ub,vb=Element.prototype,wb=null!==(tb=Object.getOwnPropertyDescriptor(vb,"attributes"))&&void 0!==tb?tb:Object.getOwnPropertyDescriptor(Node.prototype,"attributes"),xb=null!==(ub=null===wb||void 0===wb?void 0:wb.get)&&void 0!==ub?ub:function(){return this.attributes},yb=Array.prototype.map;vb.hasOwnProperty("getAttributeNames")||(vb.getAttributeNames=function(){return yb.call(xb.call(this),function(a){return a.name})});var zb,Ab=Element.prototype;Ab.hasOwnProperty("matches")||(Ab.matches=null!==(zb=Ab.webkitMatchesSelector)&&void 0!==zb?zb:Ab.msMatchesSelector);var Bb=Node.prototype.appendChild;function Cb(a){a=a.prototype;a.hasOwnProperty("append")||Object.defineProperty(a,"append",{configurable:!0,enumerable:!0,writable:!0,value:function(b){for(var c=[],d=0;d<arguments.length;++d)c[d]=arguments[d];c=ka(c);for(d=c.next();!d.done;d=c.next())d=d.value,Bb.call(this,"string"===typeof d?document.createTextNode(d):d)}})}Cb(Document);Cb(DocumentFragment);Cb(Element);var Db,Eb,Fb=Node.prototype.insertBefore,Gb=null!==(Eb=null===(Db=Object.getOwnPropertyDescriptor(Node.prototype,"firstChild"))||void 0===Db?void 0:Db.get)&&void 0!==Eb?Eb:function(){return this.firstChild};
function Hb(a){a=a.prototype;a.hasOwnProperty("prepend")||Object.defineProperty(a,"prepend",{configurable:!0,enumerable:!0,writable:!0,value:function(b){for(var c=[],d=0;d<arguments.length;++d)c[d]=arguments[d];d=Gb.call(this);c=ka(c);for(var e=c.next();!e.done;e=c.next())e=e.value,Fb.call(this,"string"===typeof e?document.createTextNode(e):e,d)}})}Hb(Document);Hb(DocumentFragment);Hb(Element);var Ib,Jb,Kb=Node.prototype.appendChild,Lb=Node.prototype.removeChild,Mb=null!==(Jb=null===(Ib=Object.getOwnPropertyDescriptor(Node.prototype,"firstChild"))||void 0===Ib?void 0:Ib.get)&&void 0!==Jb?Jb:function(){return this.firstChild};
function Nb(a){a=a.prototype;a.hasOwnProperty("replaceChildren")||Object.defineProperty(a,"replaceChildren",{configurable:!0,enumerable:!0,writable:!0,value:function(b){for(var c=[],d=0;d<arguments.length;++d)c[d]=arguments[d];for(;null!==(d=Mb.call(this));)Lb.call(this,d);c=ka(c);for(d=c.next();!d.done;d=c.next())d=d.value,Kb.call(this,"string"===typeof d?document.createTextNode(d):d)}})}Nb(Document);Nb(DocumentFragment);Nb(Element);var Ob,Pb,Qb,Rb,Sb=Node.prototype.insertBefore,Tb=null!==(Pb=null===(Ob=Object.getOwnPropertyDescriptor(Node.prototype,"parentNode"))||void 0===Ob?void 0:Ob.get)&&void 0!==Pb?Pb:function(){return this.parentNode},Ub=null!==(Rb=null===(Qb=Object.getOwnPropertyDescriptor(Node.prototype,"nextSibling"))||void 0===Qb?void 0:Qb.get)&&void 0!==Rb?Rb:function(){return this.nextSibling};
function Vb(a){a=a.prototype;a.hasOwnProperty("after")||Object.defineProperty(a,"after",{configurable:!0,enumerable:!0,writable:!0,value:function(b){for(var c=[],d=0;d<arguments.length;++d)c[d]=arguments[d];d=Tb.call(this);if(null!==d){var e=Ub.call(this);c=ka(c);for(var f=c.next();!f.done;f=c.next())f=f.value,Sb.call(d,"string"===typeof f?document.createTextNode(f):f,e)}}})}Vb(CharacterData);Vb(Element);var Wb,Xb,Yb=Node.prototype.insertBefore,Zb=null!==(Xb=null===(Wb=Object.getOwnPropertyDescriptor(Node.prototype,"parentNode"))||void 0===Wb?void 0:Wb.get)&&void 0!==Xb?Xb:function(){return this.parentNode};
function $b(a){a=a.prototype;a.hasOwnProperty("before")||Object.defineProperty(a,"before",{configurable:!0,enumerable:!0,writable:!0,value:function(b){for(var c=[],d=0;d<arguments.length;++d)c[d]=arguments[d];d=Zb.call(this);if(null!==d){c=ka(c);for(var e=c.next();!e.done;e=c.next())e=e.value,Yb.call(d,"string"===typeof e?document.createTextNode(e):e,this)}}})}$b(CharacterData);$b(Element);var ac,bc,cc=Node.prototype.removeChild,dc=null!==(bc=null===(ac=Object.getOwnPropertyDescriptor(Node.prototype,"parentNode"))||void 0===ac?void 0:ac.get)&&void 0!==bc?bc:function(){return this.parentNode};function ec(a){a=a.prototype;a.hasOwnProperty("remove")||Object.defineProperty(a,"remove",{configurable:!0,enumerable:!0,writable:!0,value:function(){var b=dc.call(this);b&&cc.call(b,this)}})}ec(CharacterData);ec(Element);var fc,gc,hc=Node.prototype.insertBefore,ic=Node.prototype.removeChild,kc=null!==(gc=null===(fc=Object.getOwnPropertyDescriptor(Node.prototype,"parentNode"))||void 0===fc?void 0:fc.get)&&void 0!==gc?gc:function(){return this.parentNode};
function lc(a){a=a.prototype;a.hasOwnProperty("replaceWith")||Object.defineProperty(a,"replaceWith",{configurable:!0,enumerable:!0,writable:!0,value:function(b){for(var c=[],d=0;d<arguments.length;++d)c[d]=arguments[d];d=kc.call(this);if(null!==d){c=ka(c);for(var e=c.next();!e.done;e=c.next())e=e.value,hc.call(d,"string"===typeof e?document.createTextNode(e):e,this);ic.call(d,this)}}})}lc(CharacterData);lc(Element);var mc=window.Element.prototype,nc=window.HTMLElement.prototype,oc=window.SVGElement.prototype;!nc.hasOwnProperty("classList")||mc.hasOwnProperty("classList")||oc.hasOwnProperty("classList")||Object.defineProperty(mc,"classList",Object.getOwnPropertyDescriptor(nc,"classList"));/*

 Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at
 http://polymer.github.io/LICENSE.txt The complete set of authors may be found
 at http://polymer.github.io/AUTHORS.txt The complete set of contributors may
 be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by
 Google as part of the polymer project is also subject to an additional IP
 rights grant found at http://polymer.github.io/PATENTS.txt
*/
var pc=document.createElement("style");pc.textContent="body {transition: opacity ease-in 0.2s; } \nbody[unresolved] {opacity: 0; display: block; overflow: hidden; position: relative; } \n";var qc=document.querySelector("head");qc.insertBefore(pc,qc.firstChild);var rc=window;rc.WebComponents=rc.WebComponents||{flags:{}};var sc=document.querySelector('script[src*="webcomponents-bundle"]'),tc=/wc-(.+)/,uc={};if(!uc.noOpts){location.search.slice(1).split("&").forEach(function(a){a=a.split("=");var b;a[0]&&(b=a[0].match(tc))&&(uc[b[1]]=a[1]||!0)});if(sc)for(var vc=0,wc=void 0;wc=sc.attributes[vc];vc++)"src"!==wc.name&&(uc[wc.name]=wc.value||!0);var xc={};uc.log&&uc.log.split&&uc.log.split(",").forEach(function(a){xc[a]=!0});uc.log=xc}
rc.WebComponents.flags=uc;var yc=uc.shadydom;if(yc){rc.ShadyDOM=rc.ShadyDOM||{};rc.ShadyDOM.force=yc;var zc=uc.noPatch;rc.ShadyDOM.noPatch="true"===zc?!0:zc}var Ac=uc.register||uc.ce;Ac&&window.customElements&&(rc.customElements.forcePolyfill=Ac);/*

 Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
(function(){function a(){}function b(p,r){if(!p.childNodes.length)return[];switch(p.nodeType){case Node.DOCUMENT_NODE:return F.call(p,r);case Node.DOCUMENT_FRAGMENT_NODE:return E.call(p,r);default:return t.call(p,r)}}var c="undefined"===typeof HTMLTemplateElement,d=!(document.createDocumentFragment().cloneNode()instanceof DocumentFragment),e=!1;/Trident/.test(navigator.userAgent)&&function(){function p(z,R){if(z instanceof DocumentFragment)for(var ob;ob=z.firstChild;)B.call(this,ob,R);else B.call(this,
z,R);return z}e=!0;var r=Node.prototype.cloneNode;Node.prototype.cloneNode=function(z){z=r.call(this,z);this instanceof DocumentFragment&&(z.__proto__=DocumentFragment.prototype);return z};DocumentFragment.prototype.querySelectorAll=HTMLElement.prototype.querySelectorAll;DocumentFragment.prototype.querySelector=HTMLElement.prototype.querySelector;Object.defineProperties(DocumentFragment.prototype,{nodeType:{get:function(){return Node.DOCUMENT_FRAGMENT_NODE},configurable:!0},localName:{get:function(){},
configurable:!0},nodeName:{get:function(){return"#document-fragment"},configurable:!0}});var B=Node.prototype.insertBefore;Node.prototype.insertBefore=p;var K=Node.prototype.appendChild;Node.prototype.appendChild=function(z){z instanceof DocumentFragment?p.call(this,z,null):K.call(this,z);return z};var aa=Node.prototype.removeChild,ma=Node.prototype.replaceChild;Node.prototype.replaceChild=function(z,R){z instanceof DocumentFragment?(p.call(this,z,R),aa.call(this,R)):ma.call(this,z,R);return R};Document.prototype.createDocumentFragment=
function(){var z=this.createElement("df");z.__proto__=DocumentFragment.prototype;return z};var va=Document.prototype.importNode;Document.prototype.importNode=function(z,R){R=va.call(this,z,R||!1);z instanceof DocumentFragment&&(R.__proto__=DocumentFragment.prototype);return R}}();var f=Node.prototype.cloneNode,g=Document.prototype.createElement,h=Document.prototype.importNode,k=Node.prototype.removeChild,l=Node.prototype.appendChild,m=Node.prototype.replaceChild,q=DOMParser.prototype.parseFromString,
H=Object.getOwnPropertyDescriptor(window.HTMLElement.prototype,"innerHTML")||{get:function(){return this.innerHTML},set:function(p){this.innerHTML=p}},C=Object.getOwnPropertyDescriptor(window.Node.prototype,"childNodes")||{get:function(){return this.childNodes}},t=Element.prototype.querySelectorAll,F=Document.prototype.querySelectorAll,E=DocumentFragment.prototype.querySelectorAll,N=function(){if(!c){var p=document.createElement("template"),r=document.createElement("template");r.content.appendChild(document.createElement("div"));
p.content.appendChild(r);p=p.cloneNode(!0);return 0===p.content.childNodes.length||0===p.content.firstChild.content.childNodes.length||d}}();if(c){var y=document.implementation.createHTMLDocument("template"),X=!0,x=document.createElement("style");x.textContent="template{display:none;}";var ta=document.head;ta.insertBefore(x,ta.firstElementChild);a.prototype=Object.create(HTMLElement.prototype);var ia=!document.createElement("div").hasOwnProperty("innerHTML");a.Z=function(p){if(!p.content&&p.namespaceURI===
document.documentElement.namespaceURI){p.content=y.createDocumentFragment();for(var r;r=p.firstChild;)l.call(p.content,r);if(ia)p.__proto__=a.prototype;else if(p.cloneNode=function(B){return a.va(this,B)},X)try{n(p),J(p)}catch(B){X=!1}a.bootstrap(p.content)}};var sa={option:["select"],thead:["table"],col:["colgroup","table"],tr:["tbody","table"],th:["tr","tbody","table"],td:["tr","tbody","table"]},n=function(p){Object.defineProperty(p,"innerHTML",{get:function(){return xa(this)},set:function(r){var B=
sa[(/<([a-z][^/\0>\x20\t\r\n\f]+)/i.exec(r)||["",""])[1].toLowerCase()];if(B)for(var K=0;K<B.length;K++)r="<"+B[K]+">"+r+"</"+B[K]+">";y.body.innerHTML=r;for(a.bootstrap(y);this.content.firstChild;)k.call(this.content,this.content.firstChild);r=y.body;if(B)for(K=0;K<B.length;K++)r=r.lastChild;for(;r.firstChild;)l.call(this.content,r.firstChild)},configurable:!0})},J=function(p){Object.defineProperty(p,"outerHTML",{get:function(){return"<template>"+this.innerHTML+"</template>"},set:function(r){if(this.parentNode){y.body.innerHTML=
r;for(r=this.ownerDocument.createDocumentFragment();y.body.firstChild;)l.call(r,y.body.firstChild);m.call(this.parentNode,r,this)}else throw Error("Failed to set the 'outerHTML' property on 'Element': This element has no parent node.");},configurable:!0})};n(a.prototype);J(a.prototype);a.bootstrap=function(p){p=b(p,"template");for(var r=0,B=p.length,K;r<B&&(K=p[r]);r++)a.Z(K)};document.addEventListener("DOMContentLoaded",function(){a.bootstrap(document)});Document.prototype.createElement=function(){var p=
g.apply(this,arguments);"template"===p.localName&&a.Z(p);return p};DOMParser.prototype.parseFromString=function(){var p=q.apply(this,arguments);a.bootstrap(p);return p};Object.defineProperty(HTMLElement.prototype,"innerHTML",{get:function(){return xa(this)},set:function(p){H.set.call(this,p);a.bootstrap(this)},configurable:!0,enumerable:!0});var ha=/[&\u00A0"]/g,jc=/[&\u00A0<>]/g,ib=function(p){switch(p){case "&":return"&amp;";case "<":return"&lt;";case ">":return"&gt;";case '"':return"&quot;";case "\u00a0":return"&nbsp;"}};
x=function(p){for(var r={},B=0;B<p.length;B++)r[p[B]]=!0;return r};var Va=x("area base br col command embed hr img input keygen link meta param source track wbr".split(" ")),jb=x("style script xmp iframe noembed noframes plaintext noscript".split(" ")),xa=function(p,r){"template"===p.localName&&(p=p.content);for(var B="",K=r?r(p):C.get.call(p),aa=0,ma=K.length,va;aa<ma&&(va=K[aa]);aa++){a:{var z=va;var R=p;var ob=r;switch(z.nodeType){case Node.ELEMENT_NODE:for(var Jc=z.localName,pb="<"+Jc,Uh=z.attributes,
ze=0;R=Uh[ze];ze++)pb+=" "+R.name+'="'+R.value.replace(ha,ib)+'"';pb+=">";z=Va[Jc]?pb:pb+xa(z,ob)+"</"+Jc+">";break a;case Node.TEXT_NODE:z=z.data;z=R&&jb[R.localName]?z:z.replace(jc,ib);break a;case Node.COMMENT_NODE:z="\x3c!--"+z.data+"--\x3e";break a;default:throw window.console.error(z),Error("not implemented");}}B+=z}return B}}if(c||N){a.va=function(p,r){var B=f.call(p,!1);this.Z&&this.Z(B);r&&(l.call(B.content,f.call(p.content,!0)),I(B.content,p.content));return B};var I=function(p,r){if(r.querySelectorAll&&
(r=b(r,"template"),0!==r.length)){p=b(p,"template");for(var B=0,K=p.length,aa,ma;B<K;B++)ma=r[B],aa=p[B],a&&a.Z&&a.Z(ma),m.call(aa.parentNode,u.call(ma,!0),aa)}},u=Node.prototype.cloneNode=function(p){if(!e&&d&&this instanceof DocumentFragment)if(p)var r=G.call(this.ownerDocument,this,!0);else return this.ownerDocument.createDocumentFragment();else this.nodeType===Node.ELEMENT_NODE&&"template"===this.localName&&this.namespaceURI==document.documentElement.namespaceURI?r=a.va(this,p):r=f.call(this,
p);p&&I(r,this);return r},G=Document.prototype.importNode=function(p,r){r=r||!1;if("template"===p.localName)return a.va(p,r);var B=h.call(this,p,r);if(r){I(B,p);p=b(B,'script:not([type]),script[type="application/javascript"],script[type="text/javascript"]');for(var K,aa=0;aa<p.length;aa++){K=p[aa];r=g.call(document,"script");r.textContent=K.textContent;for(var ma=K.attributes,va=0,z;va<ma.length;va++)z=ma[va],r.setAttribute(z.name,z.value);m.call(K.parentNode,r,K)}}return B}}c&&(window.HTMLTemplateElement=
a)})();/*

Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
function Bc(){}Bc.prototype.toJSON=function(){return{}};function D(a){a.__shady||(a.__shady=new Bc);return a.__shady}function L(a){return a&&a.__shady};var M=window.ShadyDOM||{};M.cb=!(!Element.prototype.attachShadow||!Node.prototype.getRootNode);var Cc=Object.getOwnPropertyDescriptor(Node.prototype,"firstChild");M.D=!!(Cc&&Cc.configurable&&Cc.get);M.Ba=M.force||!M.cb;M.J=M.noPatch||!1;M.ha=M.preferPerformance;M.Da="on-demand"===M.J;var Dc;var Ec=M.querySelectorImplementation;Dc=-1<["native","selectorEngine"].indexOf(Ec)?Ec:void 0;M.wb=Dc;M.Ra=navigator.userAgent.match("Trident");
function Fc(){return Document.prototype.msElementsFromPoint?"msElementsFromPoint":"elementsFromPoint"}function Gc(a){return(a=L(a))&&void 0!==a.firstChild}function O(a){return a instanceof ShadowRoot}function Hc(a){return(a=(a=L(a))&&a.root)&&Ic(a)}var Kc=Element.prototype,Lc=Kc.matches||Kc.matchesSelector||Kc.mozMatchesSelector||Kc.msMatchesSelector||Kc.oMatchesSelector||Kc.webkitMatchesSelector,Mc=document.createTextNode(""),Nc=0,Oc=[];
(new MutationObserver(function(){for(;Oc.length;)try{Oc.shift()()}catch(a){throw Mc.textContent=Nc++,a;}})).observe(Mc,{characterData:!0});function Pc(a){Oc.push(a);Mc.textContent=Nc++}var Qc=document.contains?function(a,b){return a.__shady_native_contains(b)}:function(a,b){return a===b||a.documentElement&&a.documentElement.__shady_native_contains(b)};function Rc(a,b){for(;b;){if(b==a)return!0;b=b.__shady_parentNode}return!1}
function Sc(a){for(var b=a.length-1;0<=b;b--){var c=a[b],d=c.getAttribute("id")||c.getAttribute("name");d&&"length"!==d&&isNaN(d)&&(a[d]=c)}a.item=function(e){return a[e]};a.namedItem=function(e){if("length"!==e&&isNaN(e)&&a[e])return a[e];for(var f=ka(a),g=f.next();!g.done;g=f.next())if(g=g.value,(g.getAttribute("id")||g.getAttribute("name"))==e)return g;return null};return a}function Tc(a){var b=[];for(a=a.__shady_native_firstChild;a;a=a.__shady_native_nextSibling)b.push(a);return b}
function Uc(a){var b=[];for(a=a.__shady_firstChild;a;a=a.__shady_nextSibling)b.push(a);return b}function Vc(a,b,c){c.configurable=!0;if(c.value)a[b]=c.value;else try{Object.defineProperty(a,b,c)}catch(d){}}function P(a,b,c,d){c=void 0===c?"":c;for(var e in b)d&&0<=d.indexOf(e)||Vc(a,c+e,b[e])}function Wc(a,b){for(var c in b)c in a&&Vc(a,c,b[c])}function Q(a){var b={};Object.getOwnPropertyNames(a).forEach(function(c){b[c]=Object.getOwnPropertyDescriptor(a,c)});return b}
function Xc(a,b){for(var c=Object.getOwnPropertyNames(b),d=0,e;d<c.length;d++)e=c[d],a[e]=b[e]}function Yc(a){return a instanceof Node?a:document.createTextNode(""+a)}function Zc(a){for(var b=[],c=0;c<arguments.length;++c)b[c]=arguments[c];if(1===b.length)return Yc(b[0]);c=document.createDocumentFragment();b=ka(b);for(var d=b.next();!d.done;d=b.next())c.appendChild(Yc(d.value));return c}
function $c(a){var b;for(b=void 0===b?1:b;0<b;b--)a=a.reduce(function(c,d){Array.isArray(d)?c.push.apply(c,w(d)):c.push(d);return c},[]);return a}function ad(a){var b=[],c=new Set;a=ka(a);for(var d=a.next();!d.done;d=a.next())d=d.value,c.has(d)||(b.push(d),c.add(d));return b};var bd=[],cd;function dd(a){cd||(cd=!0,Pc(ed));bd.push(a)}function ed(){cd=!1;for(var a=!!bd.length;bd.length;)bd.shift()();return a}ed.list=bd;function fd(){this.g=!1;this.addedNodes=[];this.removedNodes=[];this.qa=new Set}function gd(a){a.g||(a.g=!0,Pc(function(){a.flush()}))}fd.prototype.flush=function(){if(this.g){this.g=!1;var a=this.takeRecords();a.length&&this.qa.forEach(function(b){b(a)})}};fd.prototype.takeRecords=function(){if(this.addedNodes.length||this.removedNodes.length){var a=[{addedNodes:this.addedNodes,removedNodes:this.removedNodes}];this.addedNodes=[];this.removedNodes=[];return a}return[]};
function hd(a,b){var c=D(a);c.ga||(c.ga=new fd);c.ga.qa.add(b);var d=c.ga;return{Va:b,X:d,Wa:a,takeRecords:function(){return d.takeRecords()}}}function id(a){var b=a&&a.X;b&&(b.qa.delete(a.Va),b.qa.size||(D(a.Wa).ga=null))}
function jd(a,b){var c=b.getRootNode();return a.map(function(d){var e=c===d.target.getRootNode();if(e&&d.addedNodes){if(e=[].slice.call(d.addedNodes).filter(function(f){return c===f.getRootNode()}),e.length)return d=Object.create(d),Object.defineProperty(d,"addedNodes",{value:e,configurable:!0}),d}else if(e)return d}).filter(function(d){return d})};var kd=/[&\u00A0"]/g,ld=/[&\u00A0<>]/g;function md(a){switch(a){case "&":return"&amp;";case "<":return"&lt;";case ">":return"&gt;";case '"':return"&quot;";case "\u00a0":return"&nbsp;"}}function nd(a){for(var b={},c=0;c<a.length;c++)b[a[c]]=!0;return b}var od=nd("area base br col command embed hr img input keygen link meta param source track wbr".split(" ")),pd=nd("style script xmp iframe noembed noframes plaintext noscript".split(" "));
function qd(a,b){"template"===a.localName&&(a=a.content);for(var c="",d=b?b(a):a.childNodes,e=0,f=d.length,g=void 0;e<f&&(g=d[e]);e++){a:{var h=g;var k=a,l=b;switch(h.nodeType){case Node.ELEMENT_NODE:k=h.localName;for(var m="<"+k,q=h.attributes,H=0,C;C=q[H];H++)m+=" "+C.name+'="'+C.value.replace(kd,md)+'"';m+=">";h=od[k]?m:m+qd(h,l)+"</"+k+">";break a;case Node.TEXT_NODE:h=h.data;h=k&&pd[k.localName]?h:h.replace(ld,md);break a;case Node.COMMENT_NODE:h="\x3c!--"+h.data+"--\x3e";break a;default:throw window.console.error(h),
Error("not implemented");}}c+=h}return c};var rd=M.D,sd={querySelector:function(a){return this.__shady_native_querySelector(a)},querySelectorAll:function(a){return this.__shady_native_querySelectorAll(a)}},td={};function ud(a){td[a]=function(b){return b["__shady_native_"+a]}}function vd(a,b){P(a,b,"__shady_native_");for(var c in b)ud(c)}function S(a,b){b=void 0===b?[]:b;for(var c=0;c<b.length;c++){var d=b[c],e=Object.getOwnPropertyDescriptor(a,d);e&&(Object.defineProperty(a,"__shady_native_"+d,e),e.value?sd[d]||(sd[d]=e.value):ud(d))}}
var wd=document.createTreeWalker(document,NodeFilter.SHOW_ALL,null,!1),xd=document.createTreeWalker(document,NodeFilter.SHOW_ELEMENT,null,!1),yd=document.implementation.createHTMLDocument("inert");function zd(a){for(var b;b=a.__shady_native_firstChild;)a.__shady_native_removeChild(b)}var Ad=["firstElementChild","lastElementChild","children","childElementCount"],Bd=["querySelector","querySelectorAll","append","prepend","replaceChildren"];
function Cd(){var a=["dispatchEvent","addEventListener","removeEventListener"];window.EventTarget?(S(window.EventTarget.prototype,a),void 0===window.__shady_native_addEventListener&&S(Window.prototype,a)):(S(Node.prototype,a),S(Window.prototype,a),S(XMLHttpRequest.prototype,a));rd?S(Node.prototype,"parentNode firstChild lastChild previousSibling nextSibling childNodes parentElement textContent".split(" ")):vd(Node.prototype,{parentNode:{get:function(){wd.currentNode=this;return wd.parentNode()}},
firstChild:{get:function(){wd.currentNode=this;return wd.firstChild()}},lastChild:{get:function(){wd.currentNode=this;return wd.lastChild()}},previousSibling:{get:function(){wd.currentNode=this;return wd.previousSibling()}},nextSibling:{get:function(){wd.currentNode=this;return wd.nextSibling()}},childNodes:{get:function(){var b=[];wd.currentNode=this;for(var c=wd.firstChild();c;)b.push(c),c=wd.nextSibling();return b}},parentElement:{get:function(){xd.currentNode=this;return xd.parentNode()}},textContent:{get:function(){switch(this.nodeType){case Node.ELEMENT_NODE:case Node.DOCUMENT_FRAGMENT_NODE:for(var b=
document.createTreeWalker(this,NodeFilter.SHOW_TEXT,null,!1),c="",d;d=b.nextNode();)c+=d.nodeValue;return c;default:return this.nodeValue}},set:function(b){if("undefined"===typeof b||null===b)b="";switch(this.nodeType){case Node.ELEMENT_NODE:case Node.DOCUMENT_FRAGMENT_NODE:zd(this);(0<b.length||this.nodeType===Node.ELEMENT_NODE)&&this.__shady_native_insertBefore(document.createTextNode(b),void 0);break;default:this.nodeValue=b}}}});S(Node.prototype,"appendChild insertBefore removeChild replaceChild cloneNode contains".split(" "));
S(HTMLElement.prototype,["parentElement","contains"]);a={firstElementChild:{get:function(){xd.currentNode=this;return xd.firstChild()}},lastElementChild:{get:function(){xd.currentNode=this;return xd.lastChild()}},children:{get:function(){var b=[];xd.currentNode=this;for(var c=xd.firstChild();c;)b.push(c),c=xd.nextSibling();return Sc(b)}},childElementCount:{get:function(){return this.children?this.children.length:0}}};rd?(S(Element.prototype,Ad),S(Element.prototype,["previousElementSibling","nextElementSibling",
"innerHTML","className"]),S(HTMLElement.prototype,["children","innerHTML","className"])):(vd(Element.prototype,a),vd(Element.prototype,{previousElementSibling:{get:function(){xd.currentNode=this;return xd.previousSibling()}},nextElementSibling:{get:function(){xd.currentNode=this;return xd.nextSibling()}},innerHTML:{get:function(){return qd(this,Tc)},set:function(b){var c="template"===this.localName?this.content:this;zd(c);var d=this.localName||"div";d=this.namespaceURI&&this.namespaceURI!==yd.namespaceURI?
yd.createElementNS(this.namespaceURI,d):yd.createElement(d);d.innerHTML=b;for(b="template"===this.localName?d.content:d;d=b.__shady_native_firstChild;)c.__shady_native_insertBefore(d,void 0)}},className:{get:function(){return this.getAttribute("class")||""},set:function(b){this.setAttribute("class",b)}}}));S(Element.prototype,"setAttribute getAttribute hasAttribute removeAttribute focus blur".split(" "));S(Element.prototype,Bd);S(HTMLElement.prototype,["focus","blur"]);window.HTMLTemplateElement&&
S(window.HTMLTemplateElement.prototype,["innerHTML"]);rd?S(DocumentFragment.prototype,Ad):vd(DocumentFragment.prototype,a);S(DocumentFragment.prototype,Bd);rd?(S(Document.prototype,Ad),S(Document.prototype,["activeElement"])):vd(Document.prototype,a);S(Document.prototype,["importNode","getElementById","elementFromPoint",Fc()]);S(Document.prototype,Bd)};var Dd=Q({get childNodes(){return this.__shady_childNodes},get firstChild(){return this.__shady_firstChild},get lastChild(){return this.__shady_lastChild},get childElementCount(){return this.__shady_childElementCount},get children(){return this.__shady_children},get firstElementChild(){return this.__shady_firstElementChild},get lastElementChild(){return this.__shady_lastElementChild},get shadowRoot(){return this.__shady_shadowRoot}}),Ed=Q({get textContent(){return this.__shady_textContent},set textContent(a){this.__shady_textContent=
a},get innerHTML(){return this.__shady_innerHTML},set innerHTML(a){this.__shady_innerHTML=a}}),Fd=Q({get parentElement(){return this.__shady_parentElement},get parentNode(){return this.__shady_parentNode},get nextSibling(){return this.__shady_nextSibling},get previousSibling(){return this.__shady_previousSibling},get nextElementSibling(){return this.__shady_nextElementSibling},get previousElementSibling(){return this.__shady_previousElementSibling},get className(){return this.__shady_className},set className(a){this.__shady_className=
a}});function Gd(a){for(var b in a){var c=a[b];c&&(c.enumerable=!1)}}Gd(Dd);Gd(Ed);Gd(Fd);var Hd=M.D||!0===M.J,Id=Hd?function(){}:function(a){var b=D(a);b.Ta||(b.Ta=!0,Wc(a,Fd))},Jd=Hd?function(){}:function(a){var b=D(a);b.Sa||(b.Sa=!0,Wc(a,Dd),window.customElements&&window.customElements.polyfillWrapFlushCallback&&!M.J||Wc(a,Ed))};var Kd="__eventWrappers"+Date.now(),Ld=function(){var a=Object.getOwnPropertyDescriptor(Event.prototype,"composed");return a?function(b){return a.get.call(b)}:null}(),Md=function(){function a(){}var b=!1,c={get capture(){b=!0;return!1}};window.addEventListener("test",a,c);window.removeEventListener("test",a,c);return b}();function Nd(a){if(null===a||"object"!==typeof a&&"function"!==typeof a){var b=!!a;var c=!1}else{b=!!a.capture;c=!!a.once;var d=a.U}return{Pa:d,capture:b,once:c,Na:Md?a:b}}
var Od={blur:!0,focus:!0,focusin:!0,focusout:!0,click:!0,dblclick:!0,mousedown:!0,mouseenter:!0,mouseleave:!0,mousemove:!0,mouseout:!0,mouseover:!0,mouseup:!0,wheel:!0,beforeinput:!0,input:!0,keydown:!0,keyup:!0,compositionstart:!0,compositionupdate:!0,compositionend:!0,touchstart:!0,touchend:!0,touchmove:!0,touchcancel:!0,pointerover:!0,pointerenter:!0,pointerdown:!0,pointermove:!0,pointerup:!0,pointercancel:!0,pointerout:!0,pointerleave:!0,gotpointercapture:!0,lostpointercapture:!0,dragstart:!0,
drag:!0,dragenter:!0,dragleave:!0,dragover:!0,drop:!0,dragend:!0,DOMActivate:!0,DOMFocusIn:!0,DOMFocusOut:!0,keypress:!0},Pd={DOMAttrModified:!0,DOMAttributeNameChanged:!0,DOMCharacterDataModified:!0,DOMElementNameChanged:!0,DOMNodeInserted:!0,DOMNodeInsertedIntoDocument:!0,DOMNodeRemoved:!0,DOMNodeRemovedFromDocument:!0,DOMSubtreeModified:!0};function Qd(a){return a instanceof Node?a.__shady_getRootNode():a}
function Rd(a,b){var c=[],d=a;for(a=Qd(a);d;)c.push(d),d=d.__shady_assignedSlot?d.__shady_assignedSlot:d.nodeType===Node.DOCUMENT_FRAGMENT_NODE&&d.host&&(b||d!==a)?d.host:d.__shady_parentNode;c[c.length-1]===document&&c.push(window);return c}function Sd(a){a.__composedPath||(a.__composedPath=Rd(a.target,!0));return a.__composedPath}function Td(a,b){if(!O)return a;a=Rd(a,!0);for(var c=0,d,e=void 0,f,g=void 0;c<b.length;c++)if(d=b[c],f=Qd(d),f!==e&&(g=a.indexOf(f),e=f),!O(f)||-1<g)return d}
var Ud={get composed(){void 0===this.__composed&&(Ld?this.__composed="focusin"===this.type||"focusout"===this.type||Ld(this):!1!==this.isTrusted&&(this.__composed=Od[this.type]));return this.__composed||!1},composedPath:function(){this.__composedPath||(this.__composedPath=Rd(this.__target,this.composed));return this.__composedPath},get target(){return Td(this.currentTarget||this.__previousCurrentTarget,this.composedPath())},get relatedTarget(){if(!this.__relatedTarget)return null;this.__relatedTargetComposedPath||
(this.__relatedTargetComposedPath=Rd(this.__relatedTarget,!0));return Td(this.currentTarget||this.__previousCurrentTarget,this.__relatedTargetComposedPath)},stopPropagation:function(){Event.prototype.stopPropagation.call(this);this.ua=!0},stopImmediatePropagation:function(){Event.prototype.stopImmediatePropagation.call(this);this.ua=this.__immediatePropagationStopped=!0}},Vd=M.D&&Object.getOwnPropertyDescriptor(Event.prototype,"eventPhase");
Vd&&(Object.defineProperty(Ud,"eventPhase",{get:function(){return this.currentTarget===this.target?Event.AT_TARGET:this.__shady_native_eventPhase},enumerable:!0,configurable:!0}),Object.defineProperty(Ud,"__shady_native_eventPhase",Vd));function Wd(a){function b(c,d){c=new a(c,d);c.__composed=d&&!!d.composed;return c}b.__proto__=a;b.prototype=a.prototype;return b}var Xd={focus:!0,blur:!0};function Yd(a){return a.__target!==a.target||a.__relatedTarget!==a.relatedTarget}
function Zd(a,b,c){if(c=b.__handlers&&b.__handlers[a.type]&&b.__handlers[a.type][c])for(var d=0,e;(e=c[d])&&(!Yd(a)||a.target!==a.relatedTarget)&&(e.call(b,a),!a.__immediatePropagationStopped);d++);}var $d=(new Event("e")).hasOwnProperty("currentTarget");
function ae(a){a=$d?Object.create(a):a;var b=a.composedPath(),c=b.map(function(m){return Td(m,b)}),d=a.bubbles,e=Object.getOwnPropertyDescriptor(a,"currentTarget");Object.defineProperty(a,"currentTarget",{configurable:!0,enumerable:!0,get:function(){return k}});var f=Event.CAPTURING_PHASE,g=Object.getOwnPropertyDescriptor(a,"eventPhase");Object.defineProperty(a,"eventPhase",{configurable:!0,enumerable:!0,get:function(){return f}});try{for(var h=b.length-1;0<=h;h--){var k=b[h];f=k===c[h]?Event.AT_TARGET:
Event.CAPTURING_PHASE;Zd(a,k,"capture");if(a.ua)return}for(h=0;h<b.length;h++){k=b[h];var l=k===c[h];if(l||d)if(f=l?Event.AT_TARGET:Event.BUBBLING_PHASE,Zd(a,k,"bubble"),a.ua)break}}finally{$d||(e?Object.defineProperty(a,"currentTarget",e):delete a.currentTarget,g?Object.defineProperty(a,"eventPhase",g):delete a.eventPhase)}}function be(a,b,c,d){for(var e=0;e<a.length;e++){var f=a[e],g=f.type,h=f.capture;if(b===f.node&&c===g&&d===h)return e}return-1}
function ce(a){ed();return!M.ha&&this instanceof Node&&!Qc(document,this)?(a.__target||de(a,this),ae(a)):this.__shady_native_dispatchEvent(a)}
function ee(a,b,c){var d=this,e=Nd(c),f=e.capture,g=e.once,h=e.Pa;e=e.Na;if(b){var k=typeof b;if("function"===k||"object"===k)if("object"!==k||b.handleEvent&&"function"===typeof b.handleEvent){if(Pd[a])return this.__shady_native_addEventListener(a,b,e);var l=h||this;if(h=b[Kd]){if(-1<be(h,l,a,f))return}else b[Kd]=[];h=function(m){g&&d.__shady_removeEventListener(a,b,c);m.__target||de(m);if(l!==d){var q=Object.getOwnPropertyDescriptor(m,"currentTarget");Object.defineProperty(m,"currentTarget",{get:function(){return l},
configurable:!0});var H=Object.getOwnPropertyDescriptor(m,"eventPhase");Object.defineProperty(m,"eventPhase",{configurable:!0,enumerable:!0,get:function(){return f?Event.CAPTURING_PHASE:Event.BUBBLING_PHASE}})}m.__previousCurrentTarget=m.currentTarget;if(!O(l)&&"slot"!==l.localName||-1!=m.composedPath().indexOf(l))if(m.composed||-1<m.composedPath().indexOf(l))if(Yd(m)&&m.target===m.relatedTarget)m.eventPhase===Event.BUBBLING_PHASE&&m.stopImmediatePropagation();else if(m.eventPhase===Event.CAPTURING_PHASE||
m.bubbles||m.target===l||l instanceof Window){var C="function"===k?b.call(l,m):b.handleEvent&&b.handleEvent(m);l!==d&&(q?(Object.defineProperty(m,"currentTarget",q),q=null):delete m.currentTarget,H?(Object.defineProperty(m,"eventPhase",H),H=null):delete m.eventPhase);return C}};b[Kd].push({node:l,type:a,capture:f,ub:h});this.__handlers=this.__handlers||{};this.__handlers[a]=this.__handlers[a]||{capture:[],bubble:[]};this.__handlers[a][f?"capture":"bubble"].push(h);Xd[a]||this.__shady_native_addEventListener(a,
h,e)}}}function fe(a,b,c){if(b){var d=Nd(c);c=d.capture;var e=d.Pa;d=d.Na;if(Pd[a])return this.__shady_native_removeEventListener(a,b,d);var f=e||this;e=void 0;var g=null;try{g=b[Kd]}catch(h){}g&&(f=be(g,f,a,c),-1<f&&(e=g.splice(f,1)[0].ub,g.length||(b[Kd]=void 0)));this.__shady_native_removeEventListener(a,e||b,d);e&&this.__handlers&&this.__handlers[a]&&(a=this.__handlers[a][c?"capture":"bubble"],b=a.indexOf(e),-1<b&&a.splice(b,1))}}
function ge(){for(var a in Xd)window.__shady_native_addEventListener(a,function(b){b.__target||(de(b),ae(b))},!0)}var he=Q(Ud);function de(a,b){b=void 0===b?a.target:b;a.__target=b;a.__relatedTarget=a.relatedTarget;if(M.D){b=Object.getPrototypeOf(a);if(!b.hasOwnProperty("__shady_patchedProto")){var c=Object.create(b);c.__shady_sourceProto=b;P(c,he);b.__shady_patchedProto=c}a.__proto__=b.__shady_patchedProto}else P(a,he)}var ie=Wd(Event),je=Wd(CustomEvent),ke=Wd(MouseEvent);
function le(){if(!Ld&&Object.getOwnPropertyDescriptor(Event.prototype,"isTrusted")){var a=function(){var b=new MouseEvent("click",{bubbles:!0,cancelable:!0,composed:!0});this.__shady_dispatchEvent(b)};Element.prototype.click?Element.prototype.click=a:HTMLElement.prototype.click&&(HTMLElement.prototype.click=a)}}
var me=Object.getOwnPropertyNames(Element.prototype).filter(function(a){return"on"===a.substring(0,2)}),ne=Object.getOwnPropertyNames(HTMLElement.prototype).filter(function(a){return"on"===a.substring(0,2)});function oe(a){return{set:function(b){var c=D(this),d=a.substring(2);c.T||(c.T={});c.T[a]&&this.removeEventListener(d,c.T[a]);this.__shady_addEventListener(d,b);c.T[a]=b},get:function(){var b=L(this);return b&&b.T&&b.T[a]},configurable:!0}};function pe(a,b){return{index:a,ia:[],pa:b}}
function qe(a,b,c,d){var e=0,f=0,g=0,h=0,k=Math.min(b-e,d-f);if(0==e&&0==f)a:{for(g=0;g<k;g++)if(a[g]!==c[g])break a;g=k}if(b==a.length&&d==c.length){h=a.length;for(var l=c.length,m=0;m<k-g&&re(a[--h],c[--l]);)m++;h=m}e+=g;f+=g;b-=h;d-=h;if(0==b-e&&0==d-f)return[];if(e==b){for(b=pe(e,0);f<d;)b.ia.push(c[f++]);return[b]}if(f==d)return[pe(e,b-e)];k=e;g=f;d=d-g+1;h=b-k+1;b=Array(d);for(l=0;l<d;l++)b[l]=Array(h),b[l][0]=l;for(l=0;l<h;l++)b[0][l]=l;for(l=1;l<d;l++)for(m=1;m<h;m++)if(a[k+m-1]===c[g+l-1])b[l][m]=
b[l-1][m-1];else{var q=b[l-1][m]+1,H=b[l][m-1]+1;b[l][m]=q<H?q:H}k=b.length-1;g=b[0].length-1;d=b[k][g];for(a=[];0<k||0<g;)0==k?(a.push(2),g--):0==g?(a.push(3),k--):(h=b[k-1][g-1],l=b[k-1][g],m=b[k][g-1],q=l<m?l<h?l:h:m<h?m:h,q==h?(h==d?a.push(0):(a.push(1),d=h),k--,g--):q==l?(a.push(3),k--,d=l):(a.push(2),g--,d=m));a.reverse();b=void 0;k=[];for(g=0;g<a.length;g++)switch(a[g]){case 0:b&&(k.push(b),b=void 0);e++;f++;break;case 1:b||(b=pe(e,0));b.pa++;e++;b.ia.push(c[f]);f++;break;case 2:b||(b=pe(e,
0));b.pa++;e++;break;case 3:b||(b=pe(e,0)),b.ia.push(c[f]),f++}b&&k.push(b);return k}function re(a,b){return a===b};var se=Q({dispatchEvent:ce,addEventListener:ee,removeEventListener:fe});var te=null;function ue(){te||(te=window.ShadyCSS&&window.ShadyCSS.ScopingShim);return te||null}function ve(a,b,c){var d=ue();return d&&"class"===b?(d.setElementClass(a,c),!0):!1}function we(a,b){var c=ue();c&&c.unscopeNode(a,b)}function xe(a,b){var c=ue();if(!c)return!0;if(a.nodeType===Node.DOCUMENT_FRAGMENT_NODE){c=!0;for(a=a.__shady_firstChild;a;a=a.__shady_nextSibling)c=c&&xe(a,b);return c}return a.nodeType!==Node.ELEMENT_NODE?!0:c.currentScopeForNode(a)===b}
function ye(a){if(a.nodeType!==Node.ELEMENT_NODE)return"";var b=ue();return b?b.currentScopeForNode(a):""}function Ae(a,b){if(a)for(a.nodeType===Node.ELEMENT_NODE&&b(a),a=a.__shady_firstChild;a;a=a.__shady_nextSibling)a.nodeType===Node.ELEMENT_NODE&&Ae(a,b)};var Be=window.document,Ce=M.ha,De=Object.getOwnPropertyDescriptor(Node.prototype,"isConnected"),Ee=De&&De.get;function Fe(a){for(var b;b=a.__shady_firstChild;)a.__shady_removeChild(b)}function Ge(a){var b=L(a);if(b&&void 0!==b.ta)for(b=a.__shady_firstChild;b;b=b.__shady_nextSibling)Ge(b);if(a=L(a))a.ta=void 0}function He(a){var b=a;if(a&&"slot"===a.localName){var c=L(a);(c=c&&c.aa)&&(b=c.length?c[0]:He(a.__shady_nextSibling))}return b}
function Ie(a,b,c){if(a=(a=L(a))&&a.ga){if(b)if(b.nodeType===Node.DOCUMENT_FRAGMENT_NODE)for(var d=0,e=b.childNodes.length;d<e;d++)a.addedNodes.push(b.childNodes[d]);else a.addedNodes.push(b);c&&a.removedNodes.push(c);gd(a)}}
var Pe=Q({get parentNode(){var a=L(this);a=a&&a.parentNode;return void 0!==a?a:this.__shady_native_parentNode},get firstChild(){var a=L(this);a=a&&a.firstChild;return void 0!==a?a:this.__shady_native_firstChild},get lastChild(){var a=L(this);a=a&&a.lastChild;return void 0!==a?a:this.__shady_native_lastChild},get nextSibling(){var a=L(this);a=a&&a.nextSibling;return void 0!==a?a:this.__shady_native_nextSibling},get previousSibling(){var a=L(this);a=a&&a.previousSibling;return void 0!==a?a:this.__shady_native_previousSibling},
get childNodes(){if(Gc(this)){var a=L(this);if(!a.childNodes){a.childNodes=[];for(var b=this.__shady_firstChild;b;b=b.__shady_nextSibling)a.childNodes.push(b)}var c=a.childNodes}else c=this.__shady_native_childNodes;c.item=function(d){return c[d]};return c},get parentElement(){var a=L(this);(a=a&&a.parentNode)&&a.nodeType!==Node.ELEMENT_NODE&&(a=null);return void 0!==a?a:this.__shady_native_parentElement},get isConnected(){if(Ee&&Ee.call(this))return!0;if(this.nodeType==Node.DOCUMENT_FRAGMENT_NODE)return!1;
var a=this.ownerDocument;if(null===a||Qc(a,this))return!0;for(a=this;a&&!(a instanceof Document);)a=a.__shady_parentNode||(O(a)?a.host:void 0);return!!(a&&a instanceof Document)},get textContent(){if(Gc(this)){for(var a=[],b=this.__shady_firstChild;b;b=b.__shady_nextSibling)b.nodeType!==Node.COMMENT_NODE&&a.push(b.__shady_textContent);return a.join("")}return this.__shady_native_textContent},set textContent(a){if("undefined"===typeof a||null===a)a="";switch(this.nodeType){case Node.ELEMENT_NODE:case Node.DOCUMENT_FRAGMENT_NODE:if(!Gc(this)&&
M.D){var b=this.__shady_firstChild;(b!=this.__shady_lastChild||b&&b.nodeType!=Node.TEXT_NODE)&&Fe(this);this.__shady_native_textContent=a}else Fe(this),(0<a.length||this.nodeType===Node.ELEMENT_NODE)&&this.__shady_insertBefore(document.createTextNode(a));break;default:this.nodeValue=a}},insertBefore:function(a,b){if(this.ownerDocument!==Be&&a.ownerDocument!==Be)return this.__shady_native_insertBefore(a,b),a;if(a===this)throw Error("Failed to execute 'appendChild' on 'Node': The new child element contains the parent.");
if(b){var c=L(b);c=c&&c.parentNode;if(void 0!==c&&c!==this||void 0===c&&b.__shady_native_parentNode!==this)throw Error("Failed to execute 'insertBefore' on 'Node': The node before which the new node is to be inserted is not a child of this node.");}if(b===a)return a;Ie(this,a);var d=[],e=(c=Je(this))?c.host.localName:ye(this),f=a.__shady_parentNode;if(f){var g=ye(a);var h=!!c||!Je(a)||Ce&&void 0!==this.__noInsertionPoint;f.__shady_removeChild(a,h)}f=!0;var k=(!Ce||void 0===a.__noInsertionPoint&&void 0===
this.__noInsertionPoint)&&!xe(a,e),l=c&&!a.__noInsertionPoint&&(!Ce||a.nodeType===Node.DOCUMENT_FRAGMENT_NODE);if(l||k)k&&(g=g||ye(a)),Ae(a,function(m){l&&"slot"===m.localName&&d.push(m);if(k){var q=g;ue()&&(q&&we(m,q),(q=ue())&&q.scopeNode(m,e))}});d.length&&(Ke(c),c.i.push.apply(c.i,w(d)),Le(c));Gc(this)&&(Me(a,this,b),h=L(this),h.root?(f=!1,Hc(this)&&Le(h.root)):c&&"slot"===this.localName&&(f=!1,Le(c)));f?(c=O(this)?this.host:this,b?(b=He(b),c.__shady_native_insertBefore(a,b)):c.__shady_native_appendChild(a)):
a.ownerDocument!==this.ownerDocument&&this.ownerDocument.adoptNode(a);return a},appendChild:function(a){if(this!=a||!O(a))return this.__shady_insertBefore(a)},removeChild:function(a,b){b=void 0===b?!1:b;if(this.ownerDocument!==Be)return this.__shady_native_removeChild(a);if(a.__shady_parentNode!==this)throw Error("The node to be removed is not a child of this node: "+a);Ie(this,null,a);var c=Je(a),d=c&&Ne(c,a),e=L(this);if(Gc(this)&&(Oe(a,this),Hc(this))){Le(e.root);var f=!0}if(ue()&&!b&&c&&a.nodeType!==
Node.TEXT_NODE){var g=ye(a);Ae(a,function(h){we(h,g)})}Ge(a);c&&((b="slot"===this.localName)&&(f=!0),(d||b)&&Le(c));f||(f=O(this)?this.host:this,(!e.root&&"slot"!==a.localName||f===a.__shady_native_parentNode)&&f.__shady_native_removeChild(a));return a},replaceChild:function(a,b){this.__shady_insertBefore(a,b);this.__shady_removeChild(b);return a},cloneNode:function(a){if("template"==this.localName)return this.__shady_native_cloneNode(a);var b=this.__shady_native_cloneNode(!1);if(a&&b.nodeType!==
Node.ATTRIBUTE_NODE){a=this.__shady_firstChild;for(var c;a;a=a.__shady_nextSibling)c=a.__shady_cloneNode(!0),b.__shady_appendChild(c)}return b},getRootNode:function(a){if(this&&this.nodeType){var b=D(this),c=b.ta;void 0===c&&(O(this)?(c=this,b.ta=c):(c=(c=this.__shady_parentNode)?c.__shady_getRootNode(a):this,document.documentElement.__shady_native_contains(this)&&(b.ta=c)));return c}},contains:function(a){return Rc(this,a)}});var Re=Q({get assignedSlot(){var a=this.__shady_parentNode;(a=a&&a.__shady_shadowRoot)&&Qe(a);return(a=L(this))&&a.assignedSlot||null}});/*

 Copyright (c) 2022 The Polymer Project Authors
 SPDX-License-Identifier: BSD-3-Clause
*/
var Se=new Map;[["(",{end:")",sa:!0}],["[",{end:"]",sa:!0}],['"',{end:'"',sa:!1}],["'",{end:"'",sa:!1}]].forEach(function(a){var b=ka(a);a=b.next().value;b=b.next().value;Se.set(a,b)});function Te(a,b,c,d){for(d=void 0===d?!0:d;b<a.length;b++)if("\\"===a[b]&&b<a.length-1&&"\n"!==a[b+1])b++;else{if(-1!==c.indexOf(a[b]))return b;if(d&&Se.has(a[b])){var e=Se.get(a[b]);b=Te(a,b+1,[e.end],e.sa)}}return a.length}
function Ue(a){function b(){if(0<d.length){for(;" "===d[d.length-1];)d.pop();c.push({La:d.filter(function(k,l){return 0===l%2}),Za:d.filter(function(k,l){return 1===l%2})});d.length=0}}for(var c=[],d=[],e=0;e<a.length;){var f=d[d.length-1],g=Te(a,e,[","," ",">","+","~"]),h=g===e?a[e]:a.substring(e,g);if(","===h)b();else if(-1===[void 0," ",">","+","~"].indexOf(f)||" "!==h)" "===f&&-1!==[">","+","~"].indexOf(h)?d[d.length-1]=h:d.push(h);e=g+(g===e?1:0)}b();return c};function Ve(a,b,c){var d=[];We(a,b,c,d);return d}function We(a,b,c,d){for(a=a.__shady_firstChild;a;a=a.__shady_nextSibling){var e;if(e=a.nodeType===Node.ELEMENT_NODE){e=a;var f=b,g=c,h=d,k=f(e);k&&h.push(e);g&&g(k)?e=k:(We(e,f,g,h),e=void 0)}if(e)break}}
var Xe={get firstElementChild(){var a=L(this);if(a&&void 0!==a.firstChild){for(a=this.__shady_firstChild;a&&a.nodeType!==Node.ELEMENT_NODE;)a=a.__shady_nextSibling;return a}return this.__shady_native_firstElementChild},get lastElementChild(){var a=L(this);if(a&&void 0!==a.lastChild){for(a=this.__shady_lastChild;a&&a.nodeType!==Node.ELEMENT_NODE;)a=a.__shady_previousSibling;return a}return this.__shady_native_lastElementChild},get children(){return Gc(this)?Sc(Array.prototype.filter.call(Uc(this),
function(a){return a.nodeType===Node.ELEMENT_NODE})):this.__shady_native_children},get childElementCount(){var a=this.__shady_children;return a?a.length:0}},Ye=Q((Xe.append=function(a){for(var b=[],c=0;c<arguments.length;++c)b[c]=arguments[c];this.__shady_insertBefore(Zc.apply(null,w(b)),null)},Xe.prepend=function(a){for(var b=[],c=0;c<arguments.length;++c)b[c]=arguments[c];this.__shady_insertBefore(Zc.apply(null,w(b)),this.__shady_firstChild)},Xe.replaceChildren=function(a){for(var b=[],c=0;c<arguments.length;++c)b[c]=
arguments[c];for(;null!==(c=this.__shady_firstChild);)this.__shady_removeChild(c);this.__shady_insertBefore(Zc.apply(null,w(b)),null)},Xe));
function Ze(a,b){function c(e,f){return(e===a||-1===f.indexOf(":scope"))&&Lc.call(e,f)}var d=Ue(b);if(1>d.length)return[];for(b=$c(Ve(a,function(){return!0}).map(function(e){return $c(d.map(function(f){var g=f.La,h=g.length-1;return c(e,g[h])?{target:e,da:f,fa:e,index:h}:[]}))}));b.some(function(e){return 0<e.index});)b=$c(b.map(function(e){if(0>=e.index)return e;var f=e.target,g=e.fa,h=e.da;e=e.index-1;var k=h.Za[e],l=h.La[e];if(" "===k){k=[];for(g=g.__shady_parentElement;g;g=g.__shady_parentElement)c(g,
l)&&k.push({target:f,da:h,fa:g,index:e});return k}if(">"===k)return g=g.__shady_parentElement,c(g,l)?{target:f,da:h,fa:g,index:e}:[];if("+"===k)return(g=g.__shady_previousElementSibling)&&c(g,l)?{target:f,da:h,fa:g,index:e}:[];if("~"===k){k=[];for(g=g.__shady_previousElementSibling;g;g=g.__shady_previousElementSibling)c(g,l)&&k.push({target:f,da:h,fa:g,index:e});return k}throw Error("Unrecognized combinator: '"+k+"'.");}));return ad(b.map(function(e){return e.target}))}
var $e=M.querySelectorImplementation,af=Q({querySelector:function(a){if("native"===$e){var b=Array.prototype.slice.call((this instanceof ShadowRoot?this.host:this).__shady_native_querySelectorAll(a)),c=this.__shady_getRootNode();b=ka(b);for(var d=b.next();!d.done;d=b.next())if(d=d.value,d.__shady_getRootNode()==c)return d;return null}if("selectorEngine"===$e)return Ze(this,a)[0]||null;if(void 0===$e)return Ve(this,function(e){return Lc.call(e,a)},function(e){return!!e})[0]||null;throw Error("Unrecognized value of ShadyDOM.querySelectorImplementation: '"+
($e+"'"));},querySelectorAll:function(a,b){if(b||"native"===$e){b=Array.prototype.slice.call((this instanceof ShadowRoot?this.host:this).__shady_native_querySelectorAll(a));var c=this.__shady_getRootNode();return Sc(b.filter(function(d){return d.__shady_getRootNode()==c}))}if("selectorEngine"===$e)return Sc(Ze(this,a));if(void 0===$e)return Sc(Ve(this,function(d){return Lc.call(d,a)}));throw Error("Unrecognized value of ShadyDOM.querySelectorImplementation: '"+($e+"'"));}}),bf=M.ha&&!M.J?Xc({},Ye):
Ye;Xc(Ye,af);var cf=Q({after:function(a){for(var b=[],c=0;c<arguments.length;++c)b[c]=arguments[c];c=this.__shady_parentNode;if(null!==c){var d=this.__shady_nextSibling;c.__shady_insertBefore(Zc.apply(null,w(b)),d)}},before:function(a){for(var b=[],c=0;c<arguments.length;++c)b[c]=arguments[c];c=this.__shady_parentNode;null!==c&&c.__shady_insertBefore(Zc.apply(null,w(b)),this)},remove:function(){var a=this.__shady_parentNode;null!==a&&a.__shady_removeChild(this)},replaceWith:function(a){for(var b=[],c=0;c<arguments.length;++c)b[c]=
arguments[c];c=this.__shady_parentNode;if(null!==c){var d=this.__shady_nextSibling;c.__shady_removeChild(this);c.__shady_insertBefore(Zc.apply(null,w(b)),d)}}});var df=window.document;function ef(a,b){if("slot"===b)a=a.__shady_parentNode,Hc(a)&&Le(L(a).root);else if("slot"===a.localName&&"name"===b&&(b=Je(a))){if(b.g){ff(b);var c=a.Ua,d=gf(a);if(d!==c){c=b.h[c];var e=c.indexOf(a);0<=e&&c.splice(e,1);c=b.h[d]||(b.h[d]=[]);c.push(a);1<c.length&&(b.h[d]=hf(c))}}Le(b)}}
var jf=Q({get previousElementSibling(){var a=L(this);if(a&&void 0!==a.previousSibling){for(a=this.__shady_previousSibling;a&&a.nodeType!==Node.ELEMENT_NODE;)a=a.__shady_previousSibling;return a}return this.__shady_native_previousElementSibling},get nextElementSibling(){var a=L(this);if(a&&void 0!==a.nextSibling){for(a=this.__shady_nextSibling;a&&a.nodeType!==Node.ELEMENT_NODE;)a=a.__shady_nextSibling;return a}return this.__shady_native_nextElementSibling},get slot(){return this.getAttribute("slot")},
set slot(a){this.__shady_setAttribute("slot",a)},get className(){return this.getAttribute("class")||""},set className(a){this.__shady_setAttribute("class",a)},setAttribute:function(a,b){this.ownerDocument!==df?this.__shady_native_setAttribute(a,b):ve(this,a,b)||(this.__shady_native_setAttribute(a,b),ef(this,a))},removeAttribute:function(a){this.ownerDocument!==df?this.__shady_native_removeAttribute(a):ve(this,a,"")?""===this.getAttribute(a)&&this.__shady_native_removeAttribute(a):(this.__shady_native_removeAttribute(a),
ef(this,a))}});M.ha||me.forEach(function(a){jf[a]=oe(a)});
var of=Q({attachShadow:function(a){if(!this)throw Error("Must provide a host.");if(!a)throw Error("Not enough arguments.");if(a.shadyUpgradeFragment&&!M.Ra){var b=a.shadyUpgradeFragment;b.__proto__=ShadowRoot.prototype;kf(b,this,a);lf(b,b);a=b.__noInsertionPoint?null:b.querySelectorAll("slot");b.__noInsertionPoint=void 0;if(a&&a.length){var c=b;Ke(c);c.i.push.apply(c.i,w(a));Le(b)}b.host.__shady_native_appendChild(b)}else b=new mf(nf,this,a);return this.__CE_shadowRoot=b},get shadowRoot(){var a=L(this);
return a&&a.lb||null}});Xc(jf,of);var pf=document.implementation.createHTMLDocument("inert"),qf=Q({get innerHTML(){return Gc(this)?qd("template"===this.localName?this.content:this,Uc):this.__shady_native_innerHTML},set innerHTML(a){if("template"===this.localName)this.__shady_native_innerHTML=a;else{Fe(this);var b=this.localName||"div";b=this.namespaceURI&&this.namespaceURI!==pf.namespaceURI?pf.createElementNS(this.namespaceURI,b):pf.createElement(b);for(M.D?b.__shady_native_innerHTML=a:b.innerHTML=a;a=b.__shady_firstChild;)this.__shady_insertBefore(a)}}});var rf=Q({blur:function(){var a=L(this);(a=(a=a&&a.root)&&a.activeElement)?a.__shady_blur():this.__shady_native_blur()}});M.ha||ne.forEach(function(a){rf[a]=oe(a)});var sf=Q({assignedNodes:function(a){if("slot"===this.localName){var b=this.__shady_getRootNode();b&&O(b)&&Qe(b);return(b=L(this))?(a&&a.flatten?b.aa:b.assignedNodes)||[]:[]}},addEventListener:function(a,b,c){if("slot"!==this.localName||"slotchange"===a)ee.call(this,a,b,c);else{"object"!==typeof c&&(c={capture:!!c});var d=this.__shady_parentNode;if(!d)throw Error("ShadyDOM cannot attach event to slot unless it has a `parentNode`");c.U=this;d.__shady_addEventListener(a,b,c)}},removeEventListener:function(a,
b,c){if("slot"!==this.localName||"slotchange"===a)fe.call(this,a,b,c);else{"object"!==typeof c&&(c={capture:!!c});var d=this.__shady_parentNode;if(!d)throw Error("ShadyDOM cannot attach event to slot unless it has a `parentNode`");c.U=this;d.__shady_removeEventListener(a,b,c)}}});var tf=Q({getElementById:function(a){return""===a?null:Ve(this,function(b){return b.id==a},function(b){return!!b})[0]||null}});function uf(a,b){for(var c;b&&!a.has(c=b.__shady_getRootNode());)b=c.host;return b}function vf(a){var b=new Set;for(b.add(a);O(a)&&a.host;)a=a.host.__shady_getRootNode(),b.add(a);return b}
var wf="__shady_native_"+Fc(),xf=Q({get activeElement(){var a=M.D?document.__shady_native_activeElement:document.activeElement;if(!a||!a.nodeType)return null;var b=!!O(this);if(!(this===document||b&&this.host!==a&&this.host.__shady_native_contains(a)))return null;for(b=Je(a);b&&b!==this;)a=b.host,b=Je(a);return this===document?b?null:a:b===this?a:null},elementsFromPoint:function(a,b){a=document[wf](a,b);if(this===document&&M.useNativeDocumentEFP)return a;a=[].slice.call(a);b=vf(this);for(var c=new Set,
d=0;d<a.length;d++)c.add(uf(b,a[d]));var e=[];c.forEach(function(f){return e.push(f)});return e},elementFromPoint:function(a,b){return this===document&&M.useNativeDocumentEFP?this.__shady_native_elementFromPoint(a,b):this.__shady_elementsFromPoint(a,b)[0]||null}});var yf=window.document,zf=Q({importNode:function(a,b){if(a.ownerDocument!==yf||"template"===a.localName)return this.__shady_native_importNode(a,b);var c=this.__shady_native_importNode(a,!1);if(b)for(a=a.__shady_firstChild;a;a=a.__shady_nextSibling)b=this.__shady_importNode(a,!0),c.__shady_appendChild(b);return c}});var Af=Q({dispatchEvent:ce,addEventListener:ee.bind(window),removeEventListener:fe.bind(window)});var Bf={};Object.getOwnPropertyDescriptor(HTMLElement.prototype,"parentElement")&&(Bf.parentElement=Pe.parentElement);Object.getOwnPropertyDescriptor(HTMLElement.prototype,"contains")&&(Bf.contains=Pe.contains);Object.getOwnPropertyDescriptor(HTMLElement.prototype,"children")&&(Bf.children=Ye.children);Object.getOwnPropertyDescriptor(HTMLElement.prototype,"innerHTML")&&(Bf.innerHTML=qf.innerHTML);Object.getOwnPropertyDescriptor(HTMLElement.prototype,"className")&&(Bf.className=jf.className);
var Cf={EventTarget:[se],Node:[Pe,window.EventTarget?null:se],Text:[Re],Comment:[Re],CDATASection:[Re],ProcessingInstruction:[Re],Element:[jf,Ye,cf,Re,!M.D||"innerHTML"in Element.prototype?qf:null,window.HTMLSlotElement?null:sf],HTMLElement:[rf,Bf],HTMLSlotElement:[sf],DocumentFragment:[bf,tf],Document:[zf,bf,tf,xf],Window:[Af],CharacterData:[cf],XMLHttpRequest:[window.EventTarget?null:se]},Df=M.D?null:["innerHTML","textContent"];
function Ef(a,b,c,d){b.forEach(function(e){return a&&e&&P(a,e,c,d)})}function Ff(a){var b=a?null:Df,c;for(c in Cf)Ef(window[c]&&window[c].prototype,Cf[c],a,b)}["Text","Comment","CDATASection","ProcessingInstruction"].forEach(function(a){var b=window[a],c=Object.create(b.prototype);c.__shady_protoIsPatched=!0;Ef(c,Cf.EventTarget);Ef(c,Cf.Node);Cf[a]&&Ef(c,Cf[a]);b.prototype.__shady_patchedProto=c});
function Gf(a){a.__shady_protoIsPatched=!0;Ef(a,Cf.EventTarget);Ef(a,Cf.Node);Ef(a,Cf.Element);Ef(a,Cf.HTMLElement);Ef(a,Cf.HTMLSlotElement);return a};var Hf=M.Da,If=M.D;function Jf(a,b){if(Hf&&!a.__shady_protoIsPatched&&!O(a)){var c=Object.getPrototypeOf(a),d=c.hasOwnProperty("__shady_patchedProto")&&c.__shady_patchedProto;d||(d=Object.create(c),Gf(d),c.__shady_patchedProto=d);Object.setPrototypeOf(a,d)}If||(1===b?Id(a):2===b&&Jd(a))}
function Kf(a,b,c,d){Jf(a,1);d=d||null;var e=D(a),f=d?D(d):null;e.previousSibling=d?f.previousSibling:b.__shady_lastChild;if(f=L(e.previousSibling))f.nextSibling=a;if(f=L(e.nextSibling=d))f.previousSibling=a;e.parentNode=b;d?d===c.firstChild&&(c.firstChild=a):(c.lastChild=a,c.firstChild||(c.firstChild=a));c.childNodes=null}
function Me(a,b,c){Jf(b,2);var d=D(b);void 0!==d.firstChild&&(d.childNodes=null);if(a.nodeType===Node.DOCUMENT_FRAGMENT_NODE)for(a=a.__shady_native_firstChild;a;a=a.__shady_native_nextSibling)Kf(a,b,d,c);else Kf(a,b,d,c)}
function Oe(a,b){var c=D(a);b=D(b);a===b.firstChild&&(b.firstChild=c.nextSibling);a===b.lastChild&&(b.lastChild=c.previousSibling);a=c.previousSibling;var d=c.nextSibling;a&&(D(a).nextSibling=d);d&&(D(d).previousSibling=a);c.parentNode=c.previousSibling=c.nextSibling=void 0;void 0!==b.childNodes&&(b.childNodes=null)}
function lf(a,b){var c=D(a);if(b||void 0===c.firstChild){c.childNodes=null;var d=c.firstChild=a.__shady_native_firstChild;c.lastChild=a.__shady_native_lastChild;Jf(a,2);c=d;for(d=void 0;c;c=c.__shady_native_nextSibling){var e=D(c);e.parentNode=b||a;e.nextSibling=c.__shady_native_nextSibling;e.previousSibling=d||null;d=c;Jf(c,1)}}};var Lf=Q({addEventListener:function(a,b,c){"object"!==typeof c&&(c={capture:!!c});c.U=c.U||this;this.host.__shady_addEventListener(a,b,c)},removeEventListener:function(a,b,c){"object"!==typeof c&&(c={capture:!!c});c.U=c.U||this;this.host.__shady_removeEventListener(a,b,c)}});function Mf(a,b){P(a,Lf,b);P(a,xf,b);P(a,qf,b);P(a,Ye,b);M.J&&!b?(P(a,Pe,b),P(a,tf,b)):M.D||(P(a,Fd),P(a,Dd),P(a,Ed))};var nf={},Nf=M.deferConnectionCallbacks&&"loading"===document.readyState,Of;function Pf(a){var b=[];do b.unshift(a);while(a=a.__shady_parentNode);return b}function mf(a,b,c){if(a!==nf)throw new TypeError("Illegal constructor");this.g=null;kf(this,b,c)}
function kf(a,b,c){a.host=b;a.mode=c&&c.mode;lf(a.host);b=D(a.host);b.root=a;b.lb="closed"!==a.mode?a:null;b=D(a);b.firstChild=b.lastChild=b.parentNode=b.nextSibling=b.previousSibling=null;if(M.preferPerformance)for(;b=a.host.__shady_native_firstChild;)a.host.__shady_native_removeChild(b);else Le(a)}function Le(a){a.Y||(a.Y=!0,dd(function(){return Qe(a)}))}
function Qe(a){var b;if(b=a.Y){for(var c;a;)a:{a.Y&&(c=a),b=a;a=b.host.__shady_getRootNode();if(O(a)&&(b=L(b.host))&&0<b.ka)break a;a=void 0}b=c}(c=b)&&c._renderSelf()}
mf.prototype._renderSelf=function(){var a=Nf;Nf=!0;this.Y=!1;if(this.g){ff(this);for(var b=0,c;b<this.g.length;b++){c=this.g[b];var d=L(c),e=d.assignedNodes;d.assignedNodes=[];d.aa=[];if(d.Ja=e)for(d=0;d<e.length;d++){var f=L(e[d]);f.xa=f.assignedSlot;f.assignedSlot===c&&(f.assignedSlot=null)}}for(b=this.host.__shady_firstChild;b;b=b.__shady_nextSibling)Qf(this,b);for(b=0;b<this.g.length;b++){c=this.g[b];e=L(c);if(!e.assignedNodes.length)for(d=c.__shady_firstChild;d;d=d.__shady_nextSibling)Qf(this,
d,c);(d=(d=L(c.__shady_parentNode))&&d.root)&&(Ic(d)||d.Y)&&d._renderSelf();Rf(this,e.aa,e.assignedNodes);if(d=e.Ja){for(f=0;f<d.length;f++)L(d[f]).xa=null;e.Ja=null;d.length>e.assignedNodes.length&&(e.Aa=!0)}e.Aa&&(e.Aa=!1,Sf(this,c))}c=this.g;b=[];for(e=0;e<c.length;e++)d=c[e].__shady_parentNode,(f=L(d))&&f.root||!(0>b.indexOf(d))||b.push(d);for(c=0;c<b.length;c++){f=b[c];e=f===this?this.host:f;d=[];for(f=f.__shady_firstChild;f;f=f.__shady_nextSibling)if("slot"==f.localName)for(var g=L(f).aa,h=
0;h<g.length;h++)d.push(g[h]);else d.push(f);f=Tc(e);g=qe(d,d.length,f,f.length);for(var k=h=0,l=void 0;h<g.length&&(l=g[h]);h++){for(var m=0,q=void 0;m<l.ia.length&&(q=l.ia[m]);m++)q.__shady_native_parentNode===e&&e.__shady_native_removeChild(q),f.splice(l.index+k,1);k-=l.pa}k=0;for(l=void 0;k<g.length&&(l=g[k]);k++)for(h=f[l.index],m=l.index;m<l.index+l.pa;m++)q=d[m],e.__shady_native_insertBefore(q,h),f.splice(m,0,q)}}if(!M.preferPerformance&&!this.Ia)for(b=this.host.__shady_firstChild;b;b=b.__shady_nextSibling)c=
L(b),b.__shady_native_parentNode!==this.host||"slot"!==b.localName&&c.assignedSlot||this.host.__shady_native_removeChild(b);this.Ia=!0;Nf=a;Of&&Of()};function Qf(a,b,c){var d=D(b),e=d.xa;d.xa=null;c||(c=(a=a.h[b.__shady_slot||"__catchall"])&&a[0]);c?(D(c).assignedNodes.push(b),d.assignedSlot=c):d.assignedSlot=void 0;e!==d.assignedSlot&&d.assignedSlot&&(D(d.assignedSlot).Aa=!0)}
function Rf(a,b,c){for(var d=0,e=void 0;d<c.length&&(e=c[d]);d++)if("slot"==e.localName){var f=L(e).assignedNodes;f&&f.length&&Rf(a,b,f)}else b.push(c[d])}function Sf(a,b){b.__shady_native_dispatchEvent(new Event("slotchange"));b=L(b);b.assignedSlot&&Sf(a,b.assignedSlot)}function Ke(a){a.i=a.i||[];a.g=a.g||[];a.h=a.h||{}}
function ff(a){if(a.i&&a.i.length){for(var b=a.i,c,d=0;d<b.length;d++){var e=b[d];lf(e);var f=e.__shady_parentNode;lf(f);f=L(f);f.ka=(f.ka||0)+1;f=gf(e);a.h[f]?(c=c||{},c[f]=!0,a.h[f].push(e)):a.h[f]=[e];a.g.push(e)}if(c)for(var g in c)a.h[g]=hf(a.h[g]);a.i=[]}}function gf(a){var b=a.name||a.getAttribute("name")||"__catchall";return a.Ua=b}
function hf(a){return a.sort(function(b,c){b=Pf(b);for(var d=Pf(c),e=0;e<b.length;e++){c=b[e];var f=d[e];if(c!==f)return b=Uc(c.__shady_parentNode),b.indexOf(c)-b.indexOf(f)}})}
function Ne(a,b){if(a.g){ff(a);var c=a.h,d;for(d in c)for(var e=c[d],f=0;f<e.length;f++){var g=e[f];if(Rc(b,g)){e.splice(f,1);var h=a.g.indexOf(g);0<=h&&(a.g.splice(h,1),(h=L(g.__shady_parentNode))&&h.ka&&h.ka--);f--;g=L(g);if(h=g.aa)for(var k=0;k<h.length;k++){var l=h[k],m=l.__shady_native_parentNode;m&&m.__shady_native_removeChild(l)}g.aa=[];g.assignedNodes=[];h=!0}}return h}}function Ic(a){ff(a);return!(!a.g||!a.g.length)}
(function(a){a.__proto__=DocumentFragment.prototype;Mf(a,"__shady_");Mf(a);Object.defineProperties(a,{nodeType:{value:Node.DOCUMENT_FRAGMENT_NODE,configurable:!0},nodeName:{value:"#document-fragment",configurable:!0},nodeValue:{value:null,configurable:!0}});["localName","namespaceURI","prefix"].forEach(function(b){Object.defineProperty(a,b,{value:void 0,configurable:!0})});["ownerDocument","baseURI","isConnected"].forEach(function(b){Object.defineProperty(a,b,{get:function(){return this.host[b]},
configurable:!0})})})(mf.prototype);
if(window.customElements&&window.customElements.define&&M.Ba&&!M.preferPerformance){var Tf=new Map;Of=function(){var a=[];Tf.forEach(function(d,e){a.push([e,d])});Tf.clear();for(var b=0;b<a.length;b++){var c=a[b][0];a[b][1]?c.__shadydom_connectedCallback():c.__shadydom_disconnectedCallback()}};Nf&&document.addEventListener("readystatechange",function(){Nf=!1;Of()},{once:!0});var Uf=function(a,b,c){var d=0,e="__isConnected"+d++;if(b||c)a.prototype.connectedCallback=a.prototype.__shadydom_connectedCallback=
function(){Nf?Tf.set(this,!0):this[e]||(this[e]=!0,b&&b.call(this))},a.prototype.disconnectedCallback=a.prototype.__shadydom_disconnectedCallback=function(){Nf?this.isConnected||Tf.set(this,!1):this[e]&&(this[e]=!1,c&&c.call(this))};return a},Vf=window.customElements.define,Wf=function(a,b){var c=b.prototype.connectedCallback,d=b.prototype.disconnectedCallback;Vf.call(window.customElements,a,Uf(b,c,d));b.prototype.connectedCallback=c;b.prototype.disconnectedCallback=d};window.customElements.define=
Wf;Object.defineProperty(window.CustomElementRegistry.prototype,"define",{value:Wf,configurable:!0})}function Je(a){a=a.__shady_getRootNode();if(O(a))return a};function Xf(a){this.node=a}v=Xf.prototype;v.addEventListener=function(a,b,c){return this.node.__shady_addEventListener(a,b,c)};v.removeEventListener=function(a,b,c){return this.node.__shady_removeEventListener(a,b,c)};v.appendChild=function(a){return this.node.__shady_appendChild(a)};v.insertBefore=function(a,b){return this.node.__shady_insertBefore(a,b)};v.removeChild=function(a){return this.node.__shady_removeChild(a)};v.replaceChild=function(a,b){return this.node.__shady_replaceChild(a,b)};
v.cloneNode=function(a){return this.node.__shady_cloneNode(a)};v.getRootNode=function(a){return this.node.__shady_getRootNode(a)};v.contains=function(a){return this.node.__shady_contains(a)};v.dispatchEvent=function(a){return this.node.__shady_dispatchEvent(a)};v.setAttribute=function(a,b){this.node.__shady_setAttribute(a,b)};v.getAttribute=function(a){return this.node.__shady_native_getAttribute(a)};v.hasAttribute=function(a){return this.node.__shady_native_hasAttribute(a)};v.removeAttribute=function(a){this.node.__shady_removeAttribute(a)};
v.attachShadow=function(a){return this.node.__shady_attachShadow(a)};v.focus=function(){this.node.__shady_native_focus()};v.blur=function(){this.node.__shady_blur()};v.importNode=function(a,b){if(this.node.nodeType===Node.DOCUMENT_NODE)return this.node.__shady_importNode(a,b)};v.getElementById=function(a){if(this.node.nodeType===Node.DOCUMENT_NODE)return this.node.__shady_getElementById(a)};v.elementsFromPoint=function(a,b){return this.node.__shady_elementsFromPoint(a,b)};
v.elementFromPoint=function(a,b){return this.node.__shady_elementFromPoint(a,b)};v.querySelector=function(a){return this.node.__shady_querySelector(a)};v.querySelectorAll=function(a,b){return this.node.__shady_querySelectorAll(a,b)};v.assignedNodes=function(a){if("slot"===this.node.localName)return this.node.__shady_assignedNodes(a)};v.append=function(a){for(var b=[],c=0;c<arguments.length;++c)b[c]=arguments[c];return this.node.__shady_append.apply(this.node,w(b))};
v.prepend=function(a){for(var b=[],c=0;c<arguments.length;++c)b[c]=arguments[c];return this.node.__shady_prepend.apply(this.node,w(b))};v.after=function(a){for(var b=[],c=0;c<arguments.length;++c)b[c]=arguments[c];return this.node.__shady_after.apply(this.node,w(b))};v.before=function(a){for(var b=[],c=0;c<arguments.length;++c)b[c]=arguments[c];return this.node.__shady_before.apply(this.node,w(b))};v.remove=function(){return this.node.__shady_remove()};
v.replaceWith=function(a){for(var b=[],c=0;c<arguments.length;++c)b[c]=arguments[c];return this.node.__shady_replaceWith.apply(this.node,w(b))};
ea.Object.defineProperties(Xf.prototype,{activeElement:{configurable:!0,enumerable:!0,get:function(){if(O(this.node)||this.node.nodeType===Node.DOCUMENT_NODE)return this.node.__shady_activeElement}},_activeElement:{configurable:!0,enumerable:!0,get:function(){return this.activeElement}},host:{configurable:!0,enumerable:!0,get:function(){if(O(this.node))return this.node.host}},parentNode:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_parentNode}},firstChild:{configurable:!0,
enumerable:!0,get:function(){return this.node.__shady_firstChild}},lastChild:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_lastChild}},nextSibling:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_nextSibling}},previousSibling:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_previousSibling}},childNodes:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_childNodes}},parentElement:{configurable:!0,enumerable:!0,
get:function(){return this.node.__shady_parentElement}},firstElementChild:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_firstElementChild}},lastElementChild:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_lastElementChild}},nextElementSibling:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_nextElementSibling}},previousElementSibling:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_previousElementSibling}},
children:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_children}},childElementCount:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_childElementCount}},shadowRoot:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_shadowRoot}},assignedSlot:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_assignedSlot}},isConnected:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_isConnected}},innerHTML:{configurable:!0,
enumerable:!0,get:function(){return this.node.__shady_innerHTML},set:function(a){this.node.__shady_innerHTML=a}},textContent:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_textContent},set:function(a){this.node.__shady_textContent=a}},slot:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_slot},set:function(a){this.node.__shady_slot=a}},className:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_className},set:function(a){this.node.__shady_className=
a}}});function Yf(a){Object.defineProperty(Xf.prototype,a,{get:function(){return this.node["__shady_"+a]},set:function(b){this.node["__shady_"+a]=b},configurable:!0})}me.forEach(function(a){return Yf(a)});ne.forEach(function(a){return Yf(a)});var Zf=new WeakMap;function $f(a){if(O(a)||a instanceof Xf)return a;var b=Zf.get(a);b||(b=new Xf(a),Zf.set(a,b));return b};if(M.Ba){var ag=M.D?function(a){return a}:function(a){Jd(a);Id(a);return a},ShadyDOM={inUse:M.Ba,patch:ag,isShadyRoot:O,enqueue:dd,flush:ed,flushInitial:function(a){!a.Ia&&a.Y&&Qe(a)},settings:M,filterMutations:jd,observeChildren:hd,unobserveChildren:id,deferConnectionCallbacks:M.deferConnectionCallbacks,preferPerformance:M.preferPerformance,handlesDynamicScoping:!0,wrap:M.J?$f:ag,wrapIfNeeded:!0===M.J?$f:function(a){return a},Wrapper:Xf,composedPath:Sd,noPatch:M.J,patchOnDemand:M.Da,nativeMethods:sd,
nativeTree:td,patchElementProto:Gf,querySelectorImplementation:M.querySelectorImplementation};window.ShadyDOM=ShadyDOM;Cd();Ff("__shady_");Object.defineProperty(document,"_activeElement",xf.activeElement);P(Window.prototype,Af,"__shady_");M.J?M.Da&&P(Element.prototype,of):(Ff(),le());ge();window.Event=ie;window.CustomEvent=je;window.MouseEvent=ke;window.ShadowRoot=mf};var bg=window.Document.prototype.createElement,cg=window.Document.prototype.createElementNS,dg=window.Document.prototype.importNode,eg=window.Document.prototype.prepend,fg=window.Document.prototype.append,gg=window.DocumentFragment.prototype.prepend,hg=window.DocumentFragment.prototype.append,ig=window.Node.prototype.cloneNode,jg=window.Node.prototype.appendChild,kg=window.Node.prototype.insertBefore,lg=window.Node.prototype.removeChild,mg=window.Node.prototype.replaceChild,ng=Object.getOwnPropertyDescriptor(window.Node.prototype,
"textContent"),og=window.Element.prototype.attachShadow,pg=Object.getOwnPropertyDescriptor(window.Element.prototype,"innerHTML"),qg=window.Element.prototype.getAttribute,rg=window.Element.prototype.setAttribute,sg=window.Element.prototype.removeAttribute,tg=window.Element.prototype.getAttributeNS,ug=window.Element.prototype.setAttributeNS,vg=window.Element.prototype.removeAttributeNS,wg=window.Element.prototype.insertAdjacentElement,xg=window.Element.prototype.insertAdjacentHTML,yg=window.Element.prototype.prepend,
zg=window.Element.prototype.append,Ag=window.Element.prototype.before,Bg=window.Element.prototype.after,Cg=window.Element.prototype.replaceWith,Dg=window.Element.prototype.remove,Eg=window.HTMLElement,Fg=Object.getOwnPropertyDescriptor(window.HTMLElement.prototype,"innerHTML"),Gg=window.HTMLElement.prototype.insertAdjacentElement,Hg=window.HTMLElement.prototype.insertAdjacentHTML;var Ig=new Set;"annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph".split(" ").forEach(function(a){return Ig.add(a)});function Jg(a){var b=Ig.has(a);a=/^[a-z][.0-9_a-z]*-[-.0-9_a-z]*$/.test(a);return!b&&a}var Kg=document.contains?document.contains.bind(document):document.documentElement.contains.bind(document.documentElement);
function T(a){var b=a.isConnected;if(void 0!==b)return b;if(Kg(a))return!0;for(;a&&!(a.__CE_isImportDocument||a instanceof Document);)a=a.parentNode||(window.ShadowRoot&&a instanceof ShadowRoot?a.host:void 0);return!(!a||!(a.__CE_isImportDocument||a instanceof Document))}function Lg(a){var b=a.children;if(b)return Array.prototype.slice.call(b);b=[];for(a=a.firstChild;a;a=a.nextSibling)a.nodeType===Node.ELEMENT_NODE&&b.push(a);return b}
function Mg(a,b){for(;b&&b!==a&&!b.nextSibling;)b=b.parentNode;return b&&b!==a?b.nextSibling:null}
function Ng(a,b,c){for(var d=a;d;){if(d.nodeType===Node.ELEMENT_NODE){var e=d;b(e);var f=e.localName;if("link"===f&&"import"===e.getAttribute("rel")){d=e.import;void 0===c&&(c=new Set);if(d instanceof Node&&!c.has(d))for(c.add(d),d=d.firstChild;d;d=d.nextSibling)Ng(d,b,c);d=Mg(a,e);continue}else if("template"===f){d=Mg(a,e);continue}if(e=e.__CE_shadowRoot)for(e=e.firstChild;e;e=e.nextSibling)Ng(e,b,c)}d=d.firstChild?d.firstChild:Mg(a,d)}};function Og(){var a=!(null===Pg||void 0===Pg||!Pg.noDocumentConstructionObserver),b=!(null===Pg||void 0===Pg||!Pg.shadyDomFastWalk);this.ca=[];this.g=[];this.W=!1;this.shadyDomFastWalk=b;this.sb=!a}function Qg(a,b,c,d){var e=window.ShadyDOM;if(a.shadyDomFastWalk&&e&&e.inUse){if(b.nodeType===Node.ELEMENT_NODE&&c(b),b.querySelectorAll)for(a=e.nativeMethods.querySelectorAll.call(b,"*"),b=0;b<a.length;b++)c(a[b])}else Ng(b,c,d)}function Rg(a,b){a.W=!0;a.ca.push(b)}
function Sg(a,b){a.W=!0;a.g.push(b)}function Tg(a,b){a.W&&Qg(a,b,function(c){return Ug(a,c)})}function Ug(a,b){if(a.W&&!b.__CE_patched){b.__CE_patched=!0;for(var c=0;c<a.ca.length;c++)a.ca[c](b);for(c=0;c<a.g.length;c++)a.g[c](b)}}function Vg(a,b){var c=[];Qg(a,b,function(e){return c.push(e)});for(b=0;b<c.length;b++){var d=c[b];1===d.__CE_state?a.connectedCallback(d):Wg(a,d)}}
function Xg(a,b){var c=[];Qg(a,b,function(e){return c.push(e)});for(b=0;b<c.length;b++){var d=c[b];1===d.__CE_state&&a.disconnectedCallback(d)}}
function Yg(a,b,c){c=void 0===c?{}:c;var d=c.tb,e=c.upgrade||function(g){return Wg(a,g)},f=[];Qg(a,b,function(g){a.W&&Ug(a,g);if("link"===g.localName&&"import"===g.getAttribute("rel")){var h=g.import;h instanceof Node&&(h.__CE_isImportDocument=!0,h.__CE_registry=document.__CE_registry);h&&"complete"===h.readyState?h.__CE_documentLoadHandled=!0:g.addEventListener("load",function(){var k=g.import;if(!k.__CE_documentLoadHandled){k.__CE_documentLoadHandled=!0;var l=new Set;d&&(d.forEach(function(m){return l.add(m)}),
l.delete(k));Yg(a,k,{tb:l,upgrade:e})}})}else f.push(g)},d);for(b=0;b<f.length;b++)e(f[b])}
function Wg(a,b){try{var c=b.ownerDocument,d=c.__CE_registry;var e=d&&(c.defaultView||c.__CE_isImportDocument)?Zg(d,b.localName):void 0;if(e&&void 0===b.__CE_state){e.constructionStack.push(b);try{try{if(new e.constructorFunction!==b)throw Error("The custom element constructor did not produce the element being upgraded.");}finally{e.constructionStack.pop()}}catch(k){throw b.__CE_state=2,k;}b.__CE_state=1;b.__CE_definition=e;if(e.attributeChangedCallback&&b.hasAttributes()){var f=e.observedAttributes;
for(e=0;e<f.length;e++){var g=f[e],h=b.getAttribute(g);null!==h&&a.attributeChangedCallback(b,g,null,h,null)}}T(b)&&a.connectedCallback(b)}}catch(k){$g(k)}}Og.prototype.connectedCallback=function(a){var b=a.__CE_definition;if(b.connectedCallback)try{b.connectedCallback.call(a)}catch(c){$g(c)}};Og.prototype.disconnectedCallback=function(a){var b=a.__CE_definition;if(b.disconnectedCallback)try{b.disconnectedCallback.call(a)}catch(c){$g(c)}};
Og.prototype.attributeChangedCallback=function(a,b,c,d,e){var f=a.__CE_definition;if(f.attributeChangedCallback&&-1<f.observedAttributes.indexOf(b))try{f.attributeChangedCallback.call(a,b,c,d,e)}catch(g){$g(g)}};
function ah(a,b,c,d){var e=b.__CE_registry;if(e&&(null===d||"http://www.w3.org/1999/xhtml"===d)&&(e=Zg(e,c)))try{var f=new e.constructorFunction;if(void 0===f.__CE_state||void 0===f.__CE_definition)throw Error("Failed to construct '"+c+"': The returned value was not constructed with the HTMLElement constructor.");if("http://www.w3.org/1999/xhtml"!==f.namespaceURI)throw Error("Failed to construct '"+c+"': The constructed element's namespace must be the HTML namespace.");if(f.hasAttributes())throw Error("Failed to construct '"+
c+"': The constructed element must not have any attributes.");if(null!==f.firstChild)throw Error("Failed to construct '"+c+"': The constructed element must not have any children.");if(null!==f.parentNode)throw Error("Failed to construct '"+c+"': The constructed element must not have a parent node.");if(f.ownerDocument!==b)throw Error("Failed to construct '"+c+"': The constructed element's owner document is incorrect.");if(f.localName!==c)throw Error("Failed to construct '"+c+"': The constructed element's local name is incorrect.");
return f}catch(g){return $g(g),b=null===d?bg.call(b,c):cg.call(b,d,c),Object.setPrototypeOf(b,HTMLUnknownElement.prototype),b.__CE_state=2,b.__CE_definition=void 0,Ug(a,b),b}b=null===d?bg.call(b,c):cg.call(b,d,c);Ug(a,b);return b}
function $g(a){var b="",c="",d=0,e=0;a instanceof Error?(b=a.message,c=a.sourceURL||a.fileName||"",d=a.line||a.lineNumber||0,e=a.column||a.columnNumber||0):b="Uncaught "+String(a);var f=void 0;void 0===ErrorEvent.prototype.initErrorEvent?f=new ErrorEvent("error",{cancelable:!0,message:b,filename:c,lineno:d,colno:e,error:a}):(f=document.createEvent("ErrorEvent"),f.initErrorEvent("error",!1,!0,b,c,d),f.preventDefault=function(){Object.defineProperty(this,"defaultPrevented",{configurable:!0,get:function(){return!0}})});
void 0===f.error&&Object.defineProperty(f,"error",{configurable:!0,enumerable:!0,get:function(){return a}});window.dispatchEvent(f);f.defaultPrevented||console.error(a)};function bh(){var a=this;this.I=void 0;this.Ka=new Promise(function(b){a.g=b})}bh.prototype.resolve=function(a){if(this.I)throw Error("Already resolved.");this.I=a;this.g(a)};function ch(a){var b=document;this.X=void 0;this.S=a;this.g=b;Yg(this.S,this.g);"loading"===this.g.readyState&&(this.X=new MutationObserver(this.h.bind(this)),this.X.observe(this.g,{childList:!0,subtree:!0}))}function dh(a){a.X&&a.X.disconnect()}ch.prototype.h=function(a){var b=this.g.readyState;"interactive"!==b&&"complete"!==b||dh(this);for(b=0;b<a.length;b++)for(var c=a[b].addedNodes,d=0;d<c.length;d++)Yg(this.S,c[d])};function U(a){this.ma=new Map;this.na=new Map;this.Fa=new Map;this.wa=!1;this.za=new Map;this.la=function(b){return b()};this.V=!1;this.oa=[];this.S=a;this.Ga=a.sb?new ch(a):void 0}v=U.prototype;v.jb=function(a,b){var c=this;if(!(b instanceof Function))throw new TypeError("Custom element constructor getters must be functions.");eh(this,a);this.ma.set(a,b);this.oa.push(a);this.V||(this.V=!0,this.la(function(){return fh(c)}))};
v.define=function(a,b){var c=this;if(!(b instanceof Function))throw new TypeError("Custom element constructors must be functions.");eh(this,a);gh(this,a,b);this.oa.push(a);this.V||(this.V=!0,this.la(function(){return fh(c)}))};function eh(a,b){if(!Jg(b))throw new SyntaxError("The element name '"+b+"' is not valid.");if(Zg(a,b))throw Error("A custom element with name '"+(b+"' has already been defined."));if(a.wa)throw Error("A custom element is already being defined.");}
function gh(a,b,c){a.wa=!0;var d;try{var e=c.prototype;if(!(e instanceof Object))throw new TypeError("The custom element constructor's prototype is not an object.");var f=function(m){var q=e[m];if(void 0!==q&&!(q instanceof Function))throw Error("The '"+m+"' callback must be a function.");return q};var g=f("connectedCallback");var h=f("disconnectedCallback");var k=f("adoptedCallback");var l=(d=f("attributeChangedCallback"))&&c.observedAttributes||[]}catch(m){throw m;}finally{a.wa=!1}c={localName:b,
constructorFunction:c,connectedCallback:g,disconnectedCallback:h,adoptedCallback:k,attributeChangedCallback:d,observedAttributes:l,constructionStack:[]};a.na.set(b,c);a.Fa.set(c.constructorFunction,c);return c}v.upgrade=function(a){Yg(this.S,a)};
function fh(a){if(!1!==a.V){a.V=!1;for(var b=[],c=a.oa,d=new Map,e=0;e<c.length;e++)d.set(c[e],[]);Yg(a.S,document,{upgrade:function(k){if(void 0===k.__CE_state){var l=k.localName,m=d.get(l);m?m.push(k):a.na.has(l)&&b.push(k)}}});for(e=0;e<b.length;e++)Wg(a.S,b[e]);for(e=0;e<c.length;e++){for(var f=c[e],g=d.get(f),h=0;h<g.length;h++)Wg(a.S,g[h]);(f=a.za.get(f))&&f.resolve(void 0)}c.length=0}}v.get=function(a){if(a=Zg(this,a))return a.constructorFunction};
v.whenDefined=function(a){if(!Jg(a))return Promise.reject(new SyntaxError("'"+a+"' is not a valid custom element name."));var b=this.za.get(a);if(b)return b.Ka;b=new bh;this.za.set(a,b);var c=this.na.has(a)||this.ma.has(a);a=-1===this.oa.indexOf(a);c&&a&&b.resolve(void 0);return b.Ka};v.polyfillWrapFlushCallback=function(a){this.Ga&&dh(this.Ga);var b=this.la;this.la=function(c){return a(function(){return b(c)})}};
function Zg(a,b){var c=a.na.get(b);if(c)return c;if(c=a.ma.get(b)){a.ma.delete(b);try{return gh(a,b,c())}catch(d){$g(d)}}}U.prototype.define=U.prototype.define;U.prototype.upgrade=U.prototype.upgrade;U.prototype.get=U.prototype.get;U.prototype.whenDefined=U.prototype.whenDefined;U.prototype.polyfillDefineLazy=U.prototype.jb;U.prototype.polyfillWrapFlushCallback=U.prototype.polyfillWrapFlushCallback;function hh(a,b,c){function d(e){return function(f){for(var g=[],h=0;h<arguments.length;++h)g[h]=arguments[h];h=[];for(var k=[],l=0;l<g.length;l++){var m=g[l];m instanceof Element&&T(m)&&k.push(m);if(m instanceof DocumentFragment)for(m=m.firstChild;m;m=m.nextSibling)h.push(m);else h.push(m)}e.apply(this,g);for(g=0;g<k.length;g++)Xg(a,k[g]);if(T(this))for(g=0;g<h.length;g++)k=h[g],k instanceof Element&&Vg(a,k)}}void 0!==c.prepend&&(b.prepend=d(c.prepend));void 0!==c.append&&(b.append=d(c.append))}
;function ih(a){Document.prototype.createElement=function(b){return ah(a,this,b,null)};Document.prototype.importNode=function(b,c){b=dg.call(this,b,!!c);this.__CE_registry?Yg(a,b):Tg(a,b);return b};Document.prototype.createElementNS=function(b,c){return ah(a,this,c,b)};hh(a,Document.prototype,{prepend:eg,append:fg})};function jh(a){function b(d){return function(e){for(var f=[],g=0;g<arguments.length;++g)f[g]=arguments[g];g=[];for(var h=[],k=0;k<f.length;k++){var l=f[k];l instanceof Element&&T(l)&&h.push(l);if(l instanceof DocumentFragment)for(l=l.firstChild;l;l=l.nextSibling)g.push(l);else g.push(l)}d.apply(this,f);for(f=0;f<h.length;f++)Xg(a,h[f]);if(T(this))for(f=0;f<g.length;f++)h=g[f],h instanceof Element&&Vg(a,h)}}var c=Element.prototype;void 0!==Ag&&(c.before=b(Ag));void 0!==Bg&&(c.after=b(Bg));void 0!==
Cg&&(c.replaceWith=function(d){for(var e=[],f=0;f<arguments.length;++f)e[f]=arguments[f];f=[];for(var g=[],h=0;h<e.length;h++){var k=e[h];k instanceof Element&&T(k)&&g.push(k);if(k instanceof DocumentFragment)for(k=k.firstChild;k;k=k.nextSibling)f.push(k);else f.push(k)}h=T(this);Cg.apply(this,e);for(e=0;e<g.length;e++)Xg(a,g[e]);if(h)for(Xg(a,this),e=0;e<f.length;e++)g=f[e],g instanceof Element&&Vg(a,g)});void 0!==Dg&&(c.remove=function(){var d=T(this);Dg.call(this);d&&Xg(a,this)})};function kh(a){function b(e,f){Object.defineProperty(e,"innerHTML",{enumerable:f.enumerable,configurable:!0,get:f.get,set:function(g){var h=this,k=void 0;T(this)&&(k=[],Qg(a,this,function(q){q!==h&&k.push(q)}));f.set.call(this,g);if(k)for(var l=0;l<k.length;l++){var m=k[l];1===m.__CE_state&&a.disconnectedCallback(m)}this.ownerDocument.__CE_registry?Yg(a,this):Tg(a,this);return g}})}function c(e,f){e.insertAdjacentElement=function(g,h){var k=T(h);g=f.call(this,g,h);k&&Xg(a,h);T(g)&&Vg(a,h);return g}}
function d(e,f){function g(h,k){for(var l=[];h!==k;h=h.nextSibling)l.push(h);for(k=0;k<l.length;k++)Yg(a,l[k])}e.insertAdjacentHTML=function(h,k){h=h.toLowerCase();if("beforebegin"===h){var l=this.previousSibling;f.call(this,h,k);g(l||this.parentNode.firstChild,this)}else if("afterbegin"===h)l=this.firstChild,f.call(this,h,k),g(this.firstChild,l);else if("beforeend"===h)l=this.lastChild,f.call(this,h,k),g(l||this.firstChild,null);else if("afterend"===h)l=this.nextSibling,f.call(this,h,k),g(this.nextSibling,
l);else throw new SyntaxError("The value provided ("+String(h)+") is not one of 'beforebegin', 'afterbegin', 'beforeend', or 'afterend'.");}}og&&(Element.prototype.attachShadow=function(e){e=og.call(this,e);if(a.W&&!e.__CE_patched){e.__CE_patched=!0;for(var f=0;f<a.ca.length;f++)a.ca[f](e)}return this.__CE_shadowRoot=e});pg&&pg.get?b(Element.prototype,pg):Fg&&Fg.get?b(HTMLElement.prototype,Fg):Sg(a,function(e){b(e,{enumerable:!0,configurable:!0,get:function(){return ig.call(this,!0).innerHTML},set:function(f){var g=
"template"===this.localName,h=g?this.content:this,k=cg.call(document,this.namespaceURI,this.localName);for(k.innerHTML=f;0<h.childNodes.length;)lg.call(h,h.childNodes[0]);for(f=g?k.content:k;0<f.childNodes.length;)jg.call(h,f.childNodes[0])}})});Element.prototype.setAttribute=function(e,f){if(1!==this.__CE_state)return rg.call(this,e,f);var g=qg.call(this,e);rg.call(this,e,f);f=qg.call(this,e);a.attributeChangedCallback(this,e,g,f,null)};Element.prototype.setAttributeNS=function(e,f,g){if(1!==this.__CE_state)return ug.call(this,
e,f,g);var h=tg.call(this,e,f);ug.call(this,e,f,g);g=tg.call(this,e,f);a.attributeChangedCallback(this,f,h,g,e)};Element.prototype.removeAttribute=function(e){if(1!==this.__CE_state)return sg.call(this,e);var f=qg.call(this,e);sg.call(this,e);null!==f&&a.attributeChangedCallback(this,e,f,null,null)};Element.prototype.removeAttributeNS=function(e,f){if(1!==this.__CE_state)return vg.call(this,e,f);var g=tg.call(this,e,f);vg.call(this,e,f);var h=tg.call(this,e,f);g!==h&&a.attributeChangedCallback(this,
f,g,h,e)};Gg?c(HTMLElement.prototype,Gg):wg&&c(Element.prototype,wg);Hg?d(HTMLElement.prototype,Hg):xg&&d(Element.prototype,xg);hh(a,Element.prototype,{prepend:yg,append:zg});jh(a)};var lh={};function mh(a){function b(){var c=this.constructor;var d=document.__CE_registry.Fa.get(c);if(!d)throw Error("Failed to construct a custom element: The constructor was not registered with `customElements`.");var e=d.constructionStack;if(0===e.length)return e=bg.call(document,d.localName),Object.setPrototypeOf(e,c.prototype),e.__CE_state=1,e.__CE_definition=d,Ug(a,e),e;var f=e.length-1,g=e[f];if(g===lh)throw Error("Failed to construct '"+d.localName+"': This element was already constructed.");e[f]=
lh;Object.setPrototypeOf(g,c.prototype);Ug(a,g);return g}b.prototype=Eg.prototype;Object.defineProperty(HTMLElement.prototype,"constructor",{writable:!0,configurable:!0,enumerable:!1,value:b});window.HTMLElement=b};function nh(a){function b(c,d){Object.defineProperty(c,"textContent",{enumerable:d.enumerable,configurable:!0,get:d.get,set:function(e){if(this.nodeType===Node.TEXT_NODE)d.set.call(this,e);else{var f=void 0;if(this.firstChild){var g=this.childNodes,h=g.length;if(0<h&&T(this)){f=Array(h);for(var k=0;k<h;k++)f[k]=g[k]}}d.set.call(this,e);if(f)for(e=0;e<f.length;e++)Xg(a,f[e])}}})}Node.prototype.insertBefore=function(c,d){if(c instanceof DocumentFragment){var e=Lg(c);c=kg.call(this,c,d);if(T(this))for(d=
0;d<e.length;d++)Vg(a,e[d]);return c}e=c instanceof Element&&T(c);d=kg.call(this,c,d);e&&Xg(a,c);T(this)&&Vg(a,c);return d};Node.prototype.appendChild=function(c){if(c instanceof DocumentFragment){var d=Lg(c);c=jg.call(this,c);if(T(this))for(var e=0;e<d.length;e++)Vg(a,d[e]);return c}d=c instanceof Element&&T(c);e=jg.call(this,c);d&&Xg(a,c);T(this)&&Vg(a,c);return e};Node.prototype.cloneNode=function(c){c=ig.call(this,!!c);this.ownerDocument.__CE_registry?Yg(a,c):Tg(a,c);return c};Node.prototype.removeChild=
function(c){var d=c instanceof Element&&T(c),e=lg.call(this,c);d&&Xg(a,c);return e};Node.prototype.replaceChild=function(c,d){if(c instanceof DocumentFragment){var e=Lg(c);c=mg.call(this,c,d);if(T(this))for(Xg(a,d),d=0;d<e.length;d++)Vg(a,e[d]);return c}e=c instanceof Element&&T(c);var f=mg.call(this,c,d),g=T(this);g&&Xg(a,d);e&&Xg(a,c);g&&Vg(a,c);return f};ng&&ng.get?b(Node.prototype,ng):Rg(a,function(c){b(c,{enumerable:!0,configurable:!0,get:function(){for(var d=[],e=this.firstChild;e;e=e.nextSibling)e.nodeType!==
Node.COMMENT_NODE&&d.push(e.textContent);return d.join("")},set:function(d){for(;this.firstChild;)lg.call(this,this.firstChild);null!=d&&""!==d&&jg.call(this,document.createTextNode(d))}})})};var Pg=window.customElements;function oh(){var a=new Og;mh(a);ih(a);hh(a,DocumentFragment.prototype,{prepend:gg,append:hg});nh(a);kh(a);window.CustomElementRegistry=U;a=new U(a);document.__CE_registry=a;Object.defineProperty(window,"customElements",{configurable:!0,enumerable:!0,value:a})}Pg&&!Pg.forcePolyfill&&"function"==typeof Pg.define&&"function"==typeof Pg.get||oh();window.__CE_installPolyfill=oh;/*

Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
function ph(){this.end=this.start=0;this.rules=this.parent=this.previous=null;this.cssText=this.parsedCssText="";this.atRule=!1;this.type=0;this.parsedSelector=this.selector=this.keyframesName=""}
function qh(a){var b=a=a.replace(rh,"").replace(sh,""),c=new ph;c.start=0;c.end=b.length;for(var d=c,e=0,f=b.length;e<f;e++)if("{"===b[e]){d.rules||(d.rules=[]);var g=d,h=g.rules[g.rules.length-1]||null;d=new ph;d.start=e+1;d.parent=g;d.previous=h;g.rules.push(d)}else"}"===b[e]&&(d.end=e+1,d=d.parent||c);return th(c,a)}
function th(a,b){var c=b.substring(a.start,a.end-1);a.parsedCssText=a.cssText=c.trim();a.parent&&(c=b.substring(a.previous?a.previous.end:a.parent.start,a.start-1),c=uh(c),c=c.replace(vh," "),c=c.substring(c.lastIndexOf(";")+1),c=a.parsedSelector=a.selector=c.trim(),a.atRule=0===c.indexOf("@"),a.atRule?0===c.indexOf("@media")?a.type=wh:c.match(xh)&&(a.type=yh,a.keyframesName=a.selector.split(vh).pop()):a.type=0===c.indexOf("--")?zh:Ah);if(c=a.rules)for(var d=0,e=c.length,f=void 0;d<e&&(f=c[d]);d++)th(f,
b);return a}function uh(a){return a.replace(/\\([0-9a-f]{1,6})\s/gi,function(b,c){b=c;for(c=6-b.length;c--;)b="0"+b;return"\\"+b})}
function Bh(a,b,c){c=void 0===c?"":c;var d="";if(a.cssText||a.rules){var e=a.rules,f;if(f=e)f=e[0],f=!(f&&f.selector&&0===f.selector.indexOf("--"));if(f){f=0;for(var g=e.length,h=void 0;f<g&&(h=e[f]);f++)d=Bh(h,b,d)}else b?b=a.cssText:(b=a.cssText,b=b.replace(Ch,"").replace(Dh,""),b=b.replace(Eh,"").replace(Fh,"")),(d=b.trim())&&(d="  "+d+"\n")}d&&(a.selector&&(c+=a.selector+" {\n"),c+=d,a.selector&&(c+="}\n\n"));return c}
var Ah=1,yh=7,wh=4,zh=1E3,rh=/\/\*[^*]*\*+([^/*][^*]*\*+)*\//gim,sh=/@import[^;]*;/gim,Ch=/(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\n]|$)/gim,Dh=/(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\n]|$)?/gim,Eh=/@apply\s*\(?[^);]*\)?\s*(?:[;\n]|$)?/gim,Fh=/[^;:]*?:[^;]*?var\([^;]*\)(?:[;\n]|$)?/gim,xh=/^@[^\s]*keyframes/,vh=/\s+/g;var V=!(window.ShadyDOM&&window.ShadyDOM.inUse),Gh;function Hh(a){Gh=a&&a.shimcssproperties?!1:V||!(navigator.userAgent.match(/AppleWebKit\/601|Edge\/15/)||!window.CSS||!CSS.supports||!CSS.supports("box-shadow","0 0 0 var(--foo)"))}var Ih;window.ShadyCSS&&void 0!==window.ShadyCSS.cssBuild&&(Ih=window.ShadyCSS.cssBuild);var Jh=!(!window.ShadyCSS||!window.ShadyCSS.disableRuntime);
window.ShadyCSS&&void 0!==window.ShadyCSS.nativeCss?Gh=window.ShadyCSS.nativeCss:window.ShadyCSS?(Hh(window.ShadyCSS),window.ShadyCSS=void 0):Hh(window.WebComponents&&window.WebComponents.flags);var W=Gh;var Kh=/(?:^|[;\s{]\s*)(--[\w-]*?)\s*:\s*(?:((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};{])+)|\{([^}]*)\}(?:(?=[;\s}])|$))/gi,Lh=/(?:^|\W+)@apply\s*\(?([^);\n]*)\)?/gi,Mh=/(--[\w-]+)\s*([:,;)]|$)/gi,Nh=/(animation\s*:)|(animation-name\s*:)/,Oh=/@media\s(.*)/,Ph=/\{[^}]*\}/g;var Qh=new Set;function Rh(a,b){if(!a)return"";"string"===typeof a&&(a=qh(a));b&&Sh(a,b);return Bh(a,W)}function Th(a){!a.__cssRules&&a.textContent&&(a.__cssRules=qh(a.textContent));return a.__cssRules||null}function Vh(a){return!!a.parent&&a.parent.type===yh}function Sh(a,b,c,d){if(a){var e=!1,f=a.type;if(d&&f===wh){var g=a.selector.match(Oh);g&&(window.matchMedia(g[1]).matches||(e=!0))}f===Ah?b(a):c&&f===yh?c(a):f===zh&&(e=!0);if((a=a.rules)&&!e)for(e=0,f=a.length,g=void 0;e<f&&(g=a[e]);e++)Sh(g,b,c,d)}}
function Wh(a,b,c,d){var e=document.createElement("style");b&&e.setAttribute("scope",b);e.textContent=a;Xh(e,c,d);return e}var Yh=null;function Zh(a){a=document.createComment(" Shady DOM styles for "+a+" ");var b=document.head;b.insertBefore(a,(Yh?Yh.nextSibling:null)||b.firstChild);return Yh=a}function Xh(a,b,c){b=b||document.head;b.insertBefore(a,c&&c.nextSibling||b.firstChild);Yh?a.compareDocumentPosition(Yh)===Node.DOCUMENT_POSITION_PRECEDING&&(Yh=a):Yh=a}
function $h(a,b){for(var c=0,d=a.length;b<d;b++)if("("===a[b])c++;else if(")"===a[b]&&0===--c)return b;return-1}function ai(a,b){var c=a.indexOf("var(");if(-1===c)return b(a,"","","");var d=$h(a,c+3),e=a.substring(c+4,d);c=a.substring(0,c);a=ai(a.substring(d+1),b);d=e.indexOf(",");return-1===d?b(c,e.trim(),"",a):b(c,e.substring(0,d).trim(),e.substring(d+1).trim(),a)}function bi(a,b){V?a.setAttribute("class",b):window.ShadyDOM.nativeMethods.setAttribute.call(a,"class",b)}
var ci=window.ShadyDOM&&window.ShadyDOM.wrap||function(a){return a};function di(a){var b=a.localName,c="";b?-1<b.indexOf("-")||(c=b,b=a.getAttribute&&a.getAttribute("is")||""):(b=a.is,c=a.extends);return{is:b,ja:c}}function ei(a){for(var b=[],c="",d=0;0<=d&&d<a.length;d++)if("("===a[d]){var e=$h(a,d);c+=a.slice(d,e+1);d=e}else","===a[d]?(b.push(c),c=""):c+=a[d];c&&b.push(c);return b}
function fi(a){if(void 0!==Ih)return Ih;if(void 0===a.__cssBuild){var b=a.getAttribute("css-build");if(b)a.__cssBuild=b;else{a:{b="template"===a.localName?a.content.firstChild:a.firstChild;if(b instanceof Comment&&(b=b.textContent.trim().split(":"),"css-build"===b[0])){b=b[1];break a}b=""}if(""!==b){var c="template"===a.localName?a.content.firstChild:a.firstChild;c.parentNode.removeChild(c)}a.__cssBuild=b}}return a.__cssBuild||""}
function gi(a){a=void 0===a?"":a;return""!==a&&W?V?"shadow"===a:"shady"===a:!1};function hi(){}function ii(a,b){ji(ki,a,function(c){li(c,b||"")})}function ji(a,b,c){b.nodeType===Node.ELEMENT_NODE&&c(b);var d;"template"===b.localName?d=(b.content||b._content||b).childNodes:d=b.children||b.childNodes;if(d)for(b=0;b<d.length;b++)ji(a,d[b],c)}
function li(a,b,c){if(b)if(a.classList)c?(a.classList.remove("style-scope"),a.classList.remove(b)):(a.classList.add("style-scope"),a.classList.add(b));else if(a.getAttribute){var d=a.getAttribute("class");c?d&&(b=d.replace("style-scope","").replace(b,""),bi(a,b)):bi(a,(d?d+" ":"")+"style-scope "+b)}}function mi(a,b,c){ji(ki,a,function(d){li(d,b,!0);li(d,c)})}function ni(a,b){ji(ki,a,function(c){li(c,b||"",!0)})}
function oi(a,b,c,d,e){var f=ki;e=void 0===e?"":e;""===e&&(V||"shady"===(void 0===d?"":d)?e=Rh(b,c):(a=di(a),e=pi(f,b,a.is,a.ja,c)+"\n\n"));return e.trim()}function pi(a,b,c,d,e){var f=qi(c,d);c=c?"."+c:"";return Rh(b,function(g){g.i||(g.selector=g.G=ri(a,g,a.h,c,f),g.i=!0);e&&e(g,c,f)})}function qi(a,b){return b?"[is="+a+"]":a}
function ri(a,b,c,d,e){var f=ei(b.selector);if(!Vh(b)){b=0;for(var g=f.length,h=void 0;b<g&&(h=f[b]);b++)f[b]=c.call(a,h,d,e)}return f.filter(function(k){return!!k}).join(",")}function si(a){return a.replace(ti,function(b,c,d){-1<d.indexOf("+")?d=d.replace(/\+/g,"___"):-1<d.indexOf("___")&&(d=d.replace(/___/g,"+"));return":"+c+"("+d+")"})}
function ui(a){for(var b=[],c;c=a.match(vi);){var d=c.index,e=$h(a,d);if(-1===e)throw Error(c.input+" selector missing ')'");c=a.slice(d,e+1);a=a.replace(c,"\ue000");b.push(c)}return{Ea:a,matches:b}}function wi(a,b){var c=a.split("\ue000");return b.reduce(function(d,e,f){return d+e+c[f+1]},c[0])}
hi.prototype.h=function(a,b,c){var d=!1;a=a.trim();var e=ti.test(a);e&&(a=a.replace(ti,function(h,k,l){return":"+k+"("+l.replace(/\s/g,"")+")"}),a=si(a));var f=vi.test(a);if(f){var g=ui(a);a=g.Ea;g=g.matches}a=a.replace(xi,":host $1");a=a.replace(yi,function(h,k,l){d||(h=zi(l,k,b,c),d=d||h.stop,k=h.Ya,l=h.value);return k+l});f&&(a=wi(a,g));e&&(a=si(a));return a=a.replace(Ai,function(h,k,l,m){return'[dir="'+l+'"] '+k+m+", "+k+'[dir="'+l+'"]'+m})};
function zi(a,b,c,d){var e=a.indexOf("::slotted");0<=a.indexOf(":host")?a=Bi(a,d):0!==e&&(a=c?Ci(a,c):a);c=!1;0<=e&&(b="",c=!0);if(c){var f=!0;c&&(a=a.replace(Di,function(g,h){return" > "+h}))}return{value:a,Ya:b,stop:f}}function Ci(a,b){a=a.split(/(\[.+?\])/);for(var c=[],d=0;d<a.length;d++)if(1===d%2)c.push(a[d]);else{var e=a[d];if(""!==e||d!==a.length-1)e=e.split(":"),e[0]+=b,c.push(e.join(":"))}return c.join("")}
function Bi(a,b){var c=a.match(Ei);return(c=c&&c[2].trim()||"")?c[0].match(Fi)?a.replace(Ei,function(d,e,f){return b+f}):c.split(Fi)[0]===b?c:"should_not_match":a.replace(":host",b)}function Gi(a){":root"===a.selector&&(a.selector="html")}hi.prototype.i=function(a){return a.match(":host")?"":a.match("::slotted")?this.h(a,":not(.style-scope)"):Ci(a.trim(),":not(.style-scope)")};ea.Object.defineProperties(hi.prototype,{g:{configurable:!0,enumerable:!0,get:function(){return"style-scope"}}});
var ti=/:(nth[-\w]+)\(([^)]+)\)/,yi=/(^|[\s>+~]+)((?:\[.+?\]|[^\s>+~=[])+)/g,Fi=/[[.:#*]/,xi=/^(::slotted)/,Ei=/(:host)(?:\(((?:\([^)(]*\)|[^)(]*)+?)\))/,Di=/(?:::slotted)(?:\(((?:\([^)(]*\)|[^)(]*)+?)\))/,Ai=/(.*):dir\((?:(ltr|rtl))\)(.*)/,vi=/:(?:matches|any|-(?:webkit|moz)-any)/,ki=new hi;function Hi(a,b,c,d,e){this.M=a||null;this.h=b||null;this.Ca=c||[];this.K=null;this.cssBuild=e||"";this.ja=d||"";this.g=this.L=this.R=null}function Ii(a){return a?a.__styleInfo:null}function Ji(a,b){return a.__styleInfo=b}Hi.prototype.i=function(){return this.M};Hi.prototype._getStyleRules=Hi.prototype.i;function Ki(a){var b=this.matches||this.matchesSelector||this.mozMatchesSelector||this.msMatchesSelector||this.oMatchesSelector||this.webkitMatchesSelector;return b&&b.call(this,a)}var Li=/:host\s*>\s*/,Mi=navigator.userAgent.match("Trident");function Ni(){}function Oi(a){var b={},c=[],d=0;Sh(a,function(f){Pi(f);f.index=d++;f=f.F.cssText;for(var g;g=Mh.exec(f);){var h=g[1];":"!==g[2]&&(b[h]=!0)}},function(f){c.push(f)});a.h=c;a=[];for(var e in b)a.push(e);return a}
function Pi(a){if(!a.F){var b={},c={};Qi(a,c)&&(b.P=c,a.rules=null);b.cssText=a.parsedCssText.replace(Ph,"").replace(Kh,"");a.F=b}}function Qi(a,b){var c=a.F;if(c){if(c.P)return Object.assign(b,c.P),!0}else{c=a.parsedCssText;for(var d;a=Kh.exec(c);){d=(a[2]||a[3]).trim();if("inherit"!==d||"unset"!==d)b[a[1].trim()]=d;d=!0}return d}}
function Ri(a,b,c){b&&(b=0<=b.indexOf(";")?Si(a,b,c):ai(b,function(d,e,f,g){if(!e)return d+g;(e=Ri(a,c[e],c))&&"initial"!==e?"apply-shim-inherit"===e&&(e="inherit"):e=Ri(a,c[f]||f,c)||f;return d+(e||"")+g}));return b&&b.trim()||""}
function Si(a,b,c){b=b.split(";");for(var d=0,e,f;d<b.length;d++)if(e=b[d]){Lh.lastIndex=0;if(f=Lh.exec(e))e=Ri(a,c[f[1]],c);else if(f=e.indexOf(":"),-1!==f){var g=e.substring(f);g=g.trim();g=Ri(a,g,c)||g;e=e.substring(0,f)+g}b[d]=e&&e.lastIndexOf(";")===e.length-1?e.slice(0,-1):e||""}return b.join(";")}
function Ti(a,b){var c={},d=[];Sh(a,function(e){e.F||Pi(e);var f=e.G||e.parsedSelector;b&&e.F.P&&f&&Ki.call(b,f)&&(Qi(e,c),e=e.index,f=parseInt(e/32,10),d[f]=(d[f]||0)|1<<e%32)},null,!0);return{P:c,key:d}}
function Ui(a,b,c,d){b.F||Pi(b);if(b.F.P){var e=di(a);a=e.is;e=e.ja;e=a?qi(a,e):"html";var f=b.parsedSelector;var g=!!f.match(Li)||"html"===e&&-1<f.indexOf("html");var h=0===f.indexOf(":host")&&!g;"shady"===c&&(g=f===e+" > *."+e||-1!==f.indexOf("html"),h=!g&&0===f.indexOf(e));if(g||h)c=e,h&&(b.G||(b.G=ri(ki,b,ki.h,a?"."+a:"",e)),c=b.G||e),g&&"html"===e&&(c=b.G||b.O),d({Ea:c,gb:h,vb:g})}}
function Vi(a,b,c){var d={},e={};Sh(b,function(f){Ui(a,f,c,function(g){Ki.call(a._element||a,g.Ea)&&(g.gb?Qi(f,d):Qi(f,e))})},null,!0);return{mb:e,eb:d}}
function Wi(a,b,c,d){var e=di(b),f=qi(e.is,e.ja),g=new RegExp("(?:^|[^.#[:])"+(b.extends?"\\"+f.slice(0,-1)+"\\]":f)+"($|[.:[\\s>+~])"),h=Ii(b);e=h.M;h=h.cssBuild;var k=Xi(e,d);return oi(b,e,function(l){var m="";l.F||Pi(l);l.F.cssText&&(m=Si(a,l.F.cssText,c));l.cssText=m;if(!V&&!Vh(l)&&l.cssText){var q=m=l.cssText;null==l.Ma&&(l.Ma=Nh.test(m));if(l.Ma)if(null==l.ra){l.ra=[];for(var H in k)q=k[H],q=q(m),m!==q&&(m=q,l.ra.push(H))}else{for(H=0;H<l.ra.length;++H)q=k[l.ra[H]],m=q(m);q=m}l.cssText=q;l.G=
l.G||l.selector;m="."+d;H=ei(l.G);q=0;for(var C=H.length,t=void 0;q<C&&(t=H[q]);q++)H[q]=t.match(g)?t.replace(f,m):m+" "+t;l.selector=H.join(",")}},h)}function Xi(a,b){a=a.h;var c={};if(!V&&a)for(var d=0,e=a[d];d<a.length;e=a[++d]){var f=e,g=b;f.u=new RegExp("\\b"+f.keyframesName+"(?!\\B|-)","g");f.g=f.keyframesName+"-"+g;f.G=f.G||f.selector;f.selector=f.G.replace(f.keyframesName,f.g);c[e.keyframesName]=Yi(e)}return c}function Yi(a){return function(b){return b.replace(a.u,a.g)}}
function Zi(a,b){var c=$i,d=Th(a);a.textContent=Rh(d,function(e){var f=e.cssText=e.parsedCssText;e.F&&e.F.cssText&&(f=f.replace(Ch,"").replace(Dh,""),e.cssText=Si(c,f,b))})}ea.Object.defineProperties(Ni.prototype,{g:{configurable:!0,enumerable:!0,get:function(){return"x-scope"}}});var $i=new Ni;var aj={},bj=window.customElements;if(bj&&!V&&!Jh){var cj=bj.define;bj.define=function(a,b,c){aj[a]||(aj[a]=Zh(a));cj.call(bj,a,b,c)}};function dj(){this.cache={}}dj.prototype.store=function(a,b,c,d){var e=this.cache[a]||[];e.push({P:b,styleElement:c,L:d});100<e.length&&e.shift();this.cache[a]=e};function ej(){}var fj=new RegExp(ki.g+"\\s*([^\\s]*)");function gj(a){return(a=(a.classList&&a.classList.value?a.classList.value:a.getAttribute("class")||"").match(fj))?a[1]:""}function hj(a){var b=ci(a).getRootNode();return b===a||b===a.ownerDocument?"":(a=b.host)?di(a).is:""}
function ij(a){for(var b=0;b<a.length;b++){var c=a[b];if(c.target!==document.documentElement&&c.target!==document.head)for(var d=0;d<c.addedNodes.length;d++){var e=c.addedNodes[d];if(e.nodeType===Node.ELEMENT_NODE){var f=e.getRootNode(),g=gj(e);if(g&&f===e.ownerDocument&&("style"!==e.localName&&"template"!==e.localName||""===fi(e)))ni(e,g);else if(f instanceof ShadowRoot)for(f=hj(e),f!==g&&mi(e,g,f),e=window.ShadyDOM.nativeMethods.querySelectorAll.call(e,":not(."+ki.g+")"),g=0;g<e.length;g++){f=e[g];
var h=hj(f);h&&li(f,h)}}}}}
if(!(V||window.ShadyDOM&&window.ShadyDOM.handlesDynamicScoping)){var jj=new MutationObserver(ij),kj=function(a){jj.observe(a,{childList:!0,subtree:!0})};if(window.customElements&&!window.customElements.polyfillWrapFlushCallback)kj(document);else{var lj=function(){kj(document.body)};window.HTMLImports?window.HTMLImports.whenReady(lj):requestAnimationFrame(function(){if("loading"===document.readyState){var a=function(){lj();document.removeEventListener("readystatechange",a)};document.addEventListener("readystatechange",
a)}else lj()})}ej=function(){ij(jj.takeRecords())}};var mj={};var nj=Promise.resolve();function oj(a){if(a=mj[a])a._applyShimCurrentVersion=a._applyShimCurrentVersion||0,a._applyShimValidatingVersion=a._applyShimValidatingVersion||0,a._applyShimNextVersion=(a._applyShimNextVersion||0)+1}function pj(a){return a._applyShimCurrentVersion===a._applyShimNextVersion}function qj(a){a._applyShimValidatingVersion=a._applyShimNextVersion;a._validating||(a._validating=!0,nj.then(function(){a._applyShimCurrentVersion=a._applyShimNextVersion;a._validating=!1}))};var rj={},sj=new dj;function Y(){this.ea={};this.i=document.documentElement;var a=new ph;a.rules=[];this.u=Ji(this.i,new Hi(a));this.O=!1;this.g=this.h=null}v=Y.prototype;v.flush=function(){ej()};v.bb=function(a){return Th(a)};v.qb=function(a){return Rh(a)};v.prepareTemplate=function(a,b,c){this.prepareTemplateDom(a,b);this.prepareTemplateStyles(a,b,c)};
v.prepareTemplateStyles=function(a,b,c){if(!a._prepared&&!Jh){V||aj[b]||(aj[b]=Zh(b));a._prepared=!0;a.name=b;a.extends=c;mj[b]=a;var d=fi(a),e=gi(d);c={is:b,extends:c};for(var f=[],g=a.content.querySelectorAll("style"),h=0;h<g.length;h++){var k=g[h];if(k.hasAttribute("shady-unscoped")){if(!V){var l=k.textContent;if(!Qh.has(l)){Qh.add(l);var m=document.createElement("style");m.setAttribute("shady-unscoped","");m.textContent=l;document.head.appendChild(m)}k.parentNode.removeChild(k)}}else f.push(k.textContent),
k.parentNode.removeChild(k)}f=f.join("").trim()+(rj[b]||"");tj(this);if(!e){if(g=!d)g=Lh.test(f)||Kh.test(f),Lh.lastIndex=0,Kh.lastIndex=0;h=qh(f);g&&W&&this.h&&this.h.transformRules(h,b);a._styleAst=h}g=[];W||(g=Oi(a._styleAst));if(!g.length||W)h=V?a.content:null,b=aj[b]||null,d=oi(c,a._styleAst,null,d,e?f:""),d=d.length?Wh(d,c.is,h,b):null,a._style=d;a.g=g}};v.kb=function(a,b){rj[b]=a.join(" ")};
v.prepareTemplateDom=function(a,b){if(!Jh){var c=fi(a);V||"shady"===c||a._domPrepared||(a._domPrepared=!0,ii(a.content,b))}};function uj(a){var b=di(a),c=b.is;b=b.ja;var d=aj[c]||null,e=mj[c];if(e){c=e._styleAst;var f=e.g;e=fi(e);b=new Hi(c,d,f,b,e);Ji(a,b);return b}}
function vj(a){!a.g&&window.ShadyCSS&&window.ShadyCSS.CustomStyleInterface&&(a.g=window.ShadyCSS.CustomStyleInterface,a.g.transformCallback=function(b){a.Qa(b)},a.g.validateCallback=function(){requestAnimationFrame(function(){(a.g.enqueued||a.O)&&a.flushCustomStyles()})})}function tj(a){if(!a.h&&window.ShadyCSS&&window.ShadyCSS.ApplyShim){a.h=window.ShadyCSS.ApplyShim;a.h.invalidCallback=oj;var b=!0}else b=!1;vj(a);return b}
v.flushCustomStyles=function(){if(!Jh){var a=tj(this);if(this.g){var b=this.g.processStyles();if((a||this.g.enqueued)&&!gi(this.u.cssBuild)){if(W){if(!this.u.cssBuild)for(a=0;a<b.length;a++){var c=this.g.getStyleForCustomStyle(b[a]);if(c&&W&&this.h){var d=Th(c);tj(this);this.h.transformRules(d);c.textContent=Rh(d)}}}else{wj(this,b);xj(this,this.i,this.u);for(a=0;a<b.length;a++)(c=this.g.getStyleForCustomStyle(b[a]))&&Zi(c,this.u.R);this.O&&this.styleDocument()}this.g.enqueued=!1}}}};
function wj(a,b){b=b.map(function(c){return a.g.getStyleForCustomStyle(c)}).filter(function(c){return!!c});b.sort(function(c,d){c=d.compareDocumentPosition(c);return c&Node.DOCUMENT_POSITION_FOLLOWING?1:c&Node.DOCUMENT_POSITION_PRECEDING?-1:0});a.u.M.rules=b.map(function(c){return Th(c)})}
v.styleElement=function(a,b){if(Jh){if(b){Ii(a)||Ji(a,new Hi(null));var c=Ii(a);c.K=c.K||{};Object.assign(c.K,b);yj(this,a,c)}}else if(c=Ii(a)||uj(a))if(a!==this.i&&(this.O=!0),b&&(c.K=c.K||{},Object.assign(c.K,b)),W)yj(this,a,c);else if(this.flush(),xj(this,a,c),c.Ca&&c.Ca.length){b=di(a).is;var d;a:{if(d=sj.cache[b])for(var e=d.length-1;0<=e;e--){var f=d[e];b:{var g=c.Ca;for(var h=0;h<g.length;h++){var k=g[h];if(f.P[k]!==c.R[k]){g=!1;break b}}g=!0}if(g){d=f;break a}}d=void 0}g=d?d.styleElement:
null;e=c.L;(f=d&&d.L)||(f=this.ea[b]=(this.ea[b]||0)+1,f=b+"-"+f);c.L=f;f=c.L;h=$i;h=g?g.textContent||"":Wi(h,a,c.R,f);k=Ii(a);var l=k.g;l&&!V&&l!==g&&(l._useCount--,0>=l._useCount&&l.parentNode&&l.parentNode.removeChild(l));V?k.g?(k.g.textContent=h,g=k.g):h&&(g=Wh(h,f,a.shadowRoot,k.h)):g?g.parentNode||(Mi&&-1<h.indexOf("@media")&&(g.textContent=h),Xh(g,null,k.h)):h&&(g=Wh(h,f,null,k.h));g&&(g._useCount=g._useCount||0,k.g!=g&&g._useCount++,k.g=g);f=g;V||(g=c.L,k=h=a.getAttribute("class")||"",e&&
(k=h.replace(new RegExp("\\s*x-scope\\s*"+e+"\\s*","g")," ")),k+=(k?" ":"")+"x-scope "+g,h!==k&&bi(a,k));d||sj.store(b,c.R,f,c.L)}};
function yj(a,b,c){var d=di(b).is;if(c.K){var e=c.K,f;for(f in e)null===f?b.style.removeProperty(f):b.style.setProperty(f,e[f])}e=mj[d];if(!(!e&&b!==a.i||e&&""!==fi(e))&&e&&e._style&&!pj(e)){if(pj(e)||e._applyShimValidatingVersion!==e._applyShimNextVersion)tj(a),a.h&&a.h.transformRules(e._styleAst,d),e._style.textContent=oi(b,c.M),qj(e);V&&(a=b.shadowRoot)&&(a=a.querySelector("style"))&&(a.textContent=oi(b,c.M));c.M=e._styleAst}}
function zj(a,b){return(b=ci(b).getRootNode().host)?Ii(b)||uj(b)?b:zj(a,b):a.i}function xj(a,b,c){var d=zj(a,b),e=Ii(d),f=e.R;d===a.i||f||(xj(a,d,e),f=e.R);a=Object.create(f||null);d=Vi(b,c.M,c.cssBuild);b=Ti(e.M,b).P;Object.assign(a,d.eb,b,d.mb);b=c.K;for(var g in b)if((e=b[g])||0===e)a[g]=e;g=$i;b=Object.getOwnPropertyNames(a);for(e=0;e<b.length;e++)d=b[e],a[d]=Ri(g,a[d],a);c.R=a}v.styleDocument=function(a){this.styleSubtree(this.i,a)};
v.styleSubtree=function(a,b){var c=ci(a),d=c.shadowRoot,e=a===this.i;(d||e)&&this.styleElement(a,b);if(a=e?c:d)for(a=Array.from(a.querySelectorAll("*")).filter(function(f){return ci(f).shadowRoot}),b=0;b<a.length;b++)this.styleSubtree(a[b])};
v.Qa=function(a){var b=this,c=fi(a);c!==this.u.cssBuild&&(this.u.cssBuild=c);if(!gi(c)){var d=Th(a);Sh(d,function(e){if(V)Gi(e);else{var f=ki;e.selector=e.parsedSelector;Gi(e);e.selector=e.G=ri(f,e,f.i,void 0,void 0)}W&&""===c&&(tj(b),b.h&&b.h.transformRule(e))});W?a.textContent=Rh(d):this.u.M.rules.push(d)}};v.getComputedStyleValue=function(a,b){var c;W||(c=(Ii(a)||Ii(zj(this,a))).R[b]);return(c=c||window.getComputedStyle(a).getPropertyValue(b))?c.trim():""};
v.pb=function(a,b){var c=ci(a).getRootNode();b=b?("string"===typeof b?b:String(b)).split(/\s/):[];c=c.host&&c.host.localName;if(!c){var d=a.getAttribute("class");if(d){d=d.split(/\s/);for(var e=0;e<d.length;e++)if(d[e]===ki.g){c=d[e+1];break}}}c&&b.push(ki.g,c);W||(c=Ii(a))&&c.L&&b.push($i.g,c.L);bi(a,b.join(" "))};v.Xa=function(a){return Ii(a)};v.ob=function(a,b){li(a,b)};v.rb=function(a,b){li(a,b,!0)};v.nb=function(a){return hj(a)};v.$a=function(a){return gj(a)};Y.prototype.flush=Y.prototype.flush;
Y.prototype.prepareTemplate=Y.prototype.prepareTemplate;Y.prototype.styleElement=Y.prototype.styleElement;Y.prototype.styleDocument=Y.prototype.styleDocument;Y.prototype.styleSubtree=Y.prototype.styleSubtree;Y.prototype.getComputedStyleValue=Y.prototype.getComputedStyleValue;Y.prototype.setElementClass=Y.prototype.pb;Y.prototype._styleInfoForNode=Y.prototype.Xa;Y.prototype.transformCustomStyleForDocument=Y.prototype.Qa;Y.prototype.getStyleAst=Y.prototype.bb;Y.prototype.styleAstToString=Y.prototype.qb;
Y.prototype.flushCustomStyles=Y.prototype.flushCustomStyles;Y.prototype.scopeNode=Y.prototype.ob;Y.prototype.unscopeNode=Y.prototype.rb;Y.prototype.scopeForNode=Y.prototype.nb;Y.prototype.currentScopeForNode=Y.prototype.$a;Y.prototype.prepareAdoptedCssText=Y.prototype.kb;Object.defineProperties(Y.prototype,{nativeShadow:{get:function(){return V}},nativeCss:{get:function(){return W}}});var Z=new Y,Aj,Bj;window.ShadyCSS&&(Aj=window.ShadyCSS.ApplyShim,Bj=window.ShadyCSS.CustomStyleInterface);
window.ShadyCSS={ScopingShim:Z,prepareTemplate:function(a,b,c){Z.flushCustomStyles();Z.prepareTemplate(a,b,c)},prepareTemplateDom:function(a,b){Z.prepareTemplateDom(a,b)},prepareTemplateStyles:function(a,b,c){Z.flushCustomStyles();Z.prepareTemplateStyles(a,b,c)},styleSubtree:function(a,b){Z.flushCustomStyles();Z.styleSubtree(a,b)},styleElement:function(a){Z.flushCustomStyles();Z.styleElement(a)},styleDocument:function(a){Z.flushCustomStyles();Z.styleDocument(a)},flushCustomStyles:function(){Z.flushCustomStyles()},
getComputedStyleValue:function(a,b){return Z.getComputedStyleValue(a,b)},nativeCss:W,nativeShadow:V,cssBuild:Ih,disableRuntime:Jh};Aj&&(window.ShadyCSS.ApplyShim=Aj);Bj&&(window.ShadyCSS.CustomStyleInterface=Bj);(function(a){function b(t){""==t&&(f.call(this),this.m=!0);return t.toLowerCase()}function c(t){var F=t.charCodeAt(0);return 32<F&&127>F&&-1==[34,35,60,62,63,96].indexOf(F)?t:encodeURIComponent(t)}function d(t){var F=t.charCodeAt(0);return 32<F&&127>F&&-1==[34,35,60,62,96].indexOf(F)?t:encodeURIComponent(t)}function e(t,F,E){function N(ha){sa.push(ha)}var y=F||"scheme start",X=0,x="",ta=!1,ia=!1,sa=[];a:for(;(void 0!=t[X-1]||0==X)&&!this.m;){var n=t[X];switch(y){case "scheme start":if(n&&q.test(n))x+=
n.toLowerCase(),y="scheme";else if(F){N("Invalid scheme.");break a}else{x="";y="no scheme";continue}break;case "scheme":if(n&&H.test(n))x+=n.toLowerCase();else if(":"==n){this.l=x;x="";if(F)break a;void 0!==l[this.l]&&(this.H=!0);y="file"==this.l?"relative":this.H&&E&&E.l==this.l?"relative or authority":this.H?"authority first slash":"scheme data"}else if(F){void 0!=n&&N("Code point not allowed in scheme: "+n);break a}else{x="";X=0;y="no scheme";continue}break;case "scheme data":"?"==n?(this.A="?",
y="query"):"#"==n?(this.C="#",y="fragment"):void 0!=n&&"\t"!=n&&"\n"!=n&&"\r"!=n&&(this.ya+=c(n));break;case "no scheme":if(E&&void 0!==l[E.l]){y="relative";continue}else N("Missing scheme."),f.call(this),this.m=!0;break;case "relative or authority":if("/"==n&&"/"==t[X+1])y="authority ignore slashes";else{N("Expected /, got: "+n);y="relative";continue}break;case "relative":this.H=!0;"file"!=this.l&&(this.l=E.l);if(void 0==n){this.o=E.o;this.v=E.v;this.s=E.s.slice();this.A=E.A;this.B=E.B;this.j=E.j;
break a}else if("/"==n||"\\"==n)"\\"==n&&N("\\ is an invalid code point."),y="relative slash";else if("?"==n)this.o=E.o,this.v=E.v,this.s=E.s.slice(),this.A="?",this.B=E.B,this.j=E.j,y="query";else if("#"==n)this.o=E.o,this.v=E.v,this.s=E.s.slice(),this.A=E.A,this.C="#",this.B=E.B,this.j=E.j,y="fragment";else{y=t[X+1];var J=t[X+2];if("file"!=this.l||!q.test(n)||":"!=y&&"|"!=y||void 0!=J&&"/"!=J&&"\\"!=J&&"?"!=J&&"#"!=J)this.o=E.o,this.v=E.v,this.B=E.B,this.j=E.j,this.s=E.s.slice(),this.s.pop();y=
"relative path";continue}break;case "relative slash":if("/"==n||"\\"==n)"\\"==n&&N("\\ is an invalid code point."),y="file"==this.l?"file host":"authority ignore slashes";else{"file"!=this.l&&(this.o=E.o,this.v=E.v,this.B=E.B,this.j=E.j);y="relative path";continue}break;case "authority first slash":if("/"==n)y="authority second slash";else{N("Expected '/', got: "+n);y="authority ignore slashes";continue}break;case "authority second slash":y="authority ignore slashes";if("/"!=n){N("Expected '/', got: "+
n);continue}break;case "authority ignore slashes":if("/"!=n&&"\\"!=n){y="authority";continue}else N("Expected authority, got: "+n);break;case "authority":if("@"==n){ta&&(N("@ already seen."),x+="%40");ta=!0;for(n=0;n<x.length;n++)J=x[n],"\t"==J||"\n"==J||"\r"==J?N("Invalid whitespace in authority."):":"==J&&null===this.j?this.j="":(J=c(J),null!==this.j?this.j+=J:this.B+=J);x=""}else if(void 0==n||"/"==n||"\\"==n||"?"==n||"#"==n){X-=x.length;x="";y="host";continue}else x+=n;break;case "file host":if(void 0==
n||"/"==n||"\\"==n||"?"==n||"#"==n){2!=x.length||!q.test(x[0])||":"!=x[1]&&"|"!=x[1]?(0!=x.length&&(this.o=b.call(this,x),x=""),y="relative path start"):y="relative path";continue}else"\t"==n||"\n"==n||"\r"==n?N("Invalid whitespace in file host."):x+=n;break;case "host":case "hostname":if(":"!=n||ia)if(void 0==n||"/"==n||"\\"==n||"?"==n||"#"==n){this.o=b.call(this,x);x="";y="relative path start";if(F)break a;continue}else"\t"!=n&&"\n"!=n&&"\r"!=n?("["==n?ia=!0:"]"==n&&(ia=!1),x+=n):N("Invalid code point in host/hostname: "+
n);else if(this.o=b.call(this,x),x="",y="port","hostname"==F)break a;break;case "port":if(/[0-9]/.test(n))x+=n;else if(void 0==n||"/"==n||"\\"==n||"?"==n||"#"==n||F){""!=x&&(x=parseInt(x,10),x!=l[this.l]&&(this.v=x+""),x="");if(F)break a;y="relative path start";continue}else"\t"==n||"\n"==n||"\r"==n?N("Invalid code point in port: "+n):(f.call(this),this.m=!0);break;case "relative path start":"\\"==n&&N("'\\' not allowed in path.");y="relative path";if("/"!=n&&"\\"!=n)continue;break;case "relative path":if(void 0!=
n&&"/"!=n&&"\\"!=n&&(F||"?"!=n&&"#"!=n))"\t"!=n&&"\n"!=n&&"\r"!=n&&(x+=c(n));else{"\\"==n&&N("\\ not allowed in relative path.");if(J=m[x.toLowerCase()])x=J;".."==x?(this.s.pop(),"/"!=n&&"\\"!=n&&this.s.push("")):"."==x&&"/"!=n&&"\\"!=n?this.s.push(""):"."!=x&&("file"==this.l&&0==this.s.length&&2==x.length&&q.test(x[0])&&"|"==x[1]&&(x=x[0]+":"),this.s.push(x));x="";"?"==n?(this.A="?",y="query"):"#"==n&&(this.C="#",y="fragment")}break;case "query":F||"#"!=n?void 0!=n&&"\t"!=n&&"\n"!=n&&"\r"!=n&&(this.A+=
d(n)):(this.C="#",y="fragment");break;case "fragment":void 0!=n&&"\t"!=n&&"\n"!=n&&"\r"!=n&&(this.C+=n)}X++}}function f(){this.B=this.ya=this.l="";this.j=null;this.v=this.o="";this.s=[];this.C=this.A="";this.H=this.m=!1}function g(t,F){void 0===F||F instanceof g||(F=new g(String(F)));this.g=t;f.call(this);e.call(this,this.g.replace(/^[ \t\r\n\f]+|[ \t\r\n\f]+$/g,""),null,F)}var h=!1;try{var k=new URL("b","http://a");k.pathname="c%20d";h="http://a/c%20d"===k.href}catch(t){}if(!h){var l=Object.create(null);
l.ftp=21;l.file=0;l.gopher=70;l.http=80;l.https=443;l.ws=80;l.wss=443;var m=Object.create(null);m["%2e"]=".";m[".%2e"]="..";m["%2e."]="..";m["%2e%2e"]="..";var q=/[a-zA-Z]/,H=/[a-zA-Z0-9+\-.]/;g.prototype={toString:function(){return this.href},get href(){if(this.m)return this.g;var t="";if(""!=this.B||null!=this.j)t=this.B+(null!=this.j?":"+this.j:"")+"@";return this.protocol+(this.H?"//"+t+this.host:"")+this.pathname+this.A+this.C},set href(t){f.call(this);e.call(this,t)},get protocol(){return this.l+
":"},set protocol(t){this.m||e.call(this,t+":","scheme start")},get host(){return this.m?"":this.v?this.o+":"+this.v:this.o},set host(t){!this.m&&this.H&&e.call(this,t,"host")},get hostname(){return this.o},set hostname(t){!this.m&&this.H&&e.call(this,t,"hostname")},get port(){return this.v},set port(t){!this.m&&this.H&&e.call(this,t,"port")},get pathname(){return this.m?"":this.H?"/"+this.s.join("/"):this.ya},set pathname(t){!this.m&&this.H&&(this.s=[],e.call(this,t,"relative path start"))},get search(){return this.m||
!this.A||"?"==this.A?"":this.A},set search(t){!this.m&&this.H&&(this.A="?","?"==t[0]&&(t=t.slice(1)),e.call(this,t,"query"))},get hash(){return this.m||!this.C||"#"==this.C?"":this.C},set hash(t){this.m||(t?(this.C="#","#"==t[0]&&(t=t.slice(1)),e.call(this,t,"fragment")):this.C="")},get origin(){var t;if(this.m||!this.l)return"";switch(this.l){case "data":case "file":case "javascript":case "mailto":return"null"}return(t=this.host)?this.l+"://"+t:""}};var C=a.URL;C&&(g.createObjectURL=function(t){return C.createObjectURL.apply(C,
arguments)},g.revokeObjectURL=function(t){C.revokeObjectURL(t)});a.URL=g}})(window);/*

Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
var Cj=window.customElements,Dj=!1,Ej=null;Cj.polyfillWrapFlushCallback&&Cj.polyfillWrapFlushCallback(function(a){Ej=a;Dj&&a()});function Fj(){window.HTMLTemplateElement.bootstrap&&window.HTMLTemplateElement.bootstrap(window.document);Ej&&Ej();Dj=!0;window.WebComponents.ready=!0;document.dispatchEvent(new CustomEvent("WebComponentsReady",{bubbles:!0}))}
"complete"!==document.readyState?(window.addEventListener("load",Fj),window.addEventListener("DOMContentLoaded",function(){window.removeEventListener("load",Fj);Fj()})):Fj();}).call(this);

//# sourceMappingURL=webcomponents-bundle.js.map

},{}],"../node_modules/colorins/dist/module/index.js":[function(require,module,exports) {
var define;
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
parcelRequire = function (e, r, t, n) {
  var i,
    o = "function" == typeof parcelRequire && parcelRequire,
    u = "function" == typeof require && require;
  function f(t, n) {
    if (!r[t]) {
      if (!e[t]) {
        var i = "function" == typeof parcelRequire && parcelRequire;
        if (!n && i) return i(t, !0);
        if (o) return o(t, !0);
        if (u && "string" == typeof t) return u(t);
        var c = new Error("Cannot find module '" + t + "'");
        throw c.code = "MODULE_NOT_FOUND", c;
      }
      p.resolve = function (r) {
        return e[t][1][r] || r;
      }, p.cache = {};
      var l = r[t] = new f.Module(t);
      e[t][0].call(l.exports, p, l, l.exports, this);
    }
    return r[t].exports;
    function p(e) {
      return f(p.resolve(e));
    }
  }
  f.isParcelRequire = !0, f.Module = function (e) {
    this.id = e, this.bundle = f, this.exports = {};
  }, f.modules = e, f.cache = r, f.parent = o, f.register = function (r, t) {
    e[r] = [function (e, r) {
      r.exports = t;
    }, {}];
  };
  for (var c = 0; c < t.length; c++) try {
    f(t[c]);
  } catch (e) {
    i || (i = e);
  }
  if (t.length) {
    var l = f(t[t.length - 1]);
    "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "undefined" != typeof module ? module.exports = l : "function" == typeof define && define.amd ? define(function () {
      return l;
    }) : n && (this[n] = l);
  }
  if (parcelRequire = f, i) throw i;
  return f;
}({
  "cLff": [function (require, module, exports) {}, {}],
  "wxgJ": [function (require, module, exports) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: !0
    }), exports.getLineInfo = N, exports.isIdentifierChar = l, exports.isIdentifierStart = u, exports.isNewLine = b, exports.parse = te, exports.parseExpressionAt = ee, exports.tokenizer = ie, exports.version = exports.tokTypes = exports.tokContexts = exports.nonASCIIwhitespace = exports.lineBreakG = exports.lineBreak = exports.keywordTypes = exports.defaultOptions = exports.TokenType = exports.Token = exports.TokContext = exports.SourceLocation = exports.Position = exports.Parser = exports.Node = void 0;
    var t = {
        3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",
        5: "class enum extends super const export import",
        6: "enum",
        strict: "implements interface let package private protected public static yield",
        strictBind: "eval arguments"
      },
      e = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this",
      i = {
        5: e,
        "5module": e + " export import",
        6: e + " const class extends export import super"
      },
      s = /^in(stanceof)?$/,
      r = "ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞿꟂ-Ᶎꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭧꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",
      a = "‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ංඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷹᷻-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿",
      n = new RegExp("[" + r + "]"),
      o = new RegExp("[" + r + a + "]");
    r = a = null;
    var h = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 477, 28, 11, 0, 9, 21, 155, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 12, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 0, 33, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 0, 161, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 270, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 754, 9486, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42710, 42, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541],
      p = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 525, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 4, 9, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 232, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 19723, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 792487, 239];
    function c(t, e) {
      for (var i = 65536, s = 0; s < e.length; s += 2) {
        if ((i += e[s]) > t) return !1;
        if ((i += e[s + 1]) >= t) return !0;
      }
    }
    function u(t, e) {
      return t < 65 ? 36 === t : t < 91 || (t < 97 ? 95 === t : t < 123 || (t <= 65535 ? t >= 170 && n.test(String.fromCharCode(t)) : !1 !== e && c(t, h)));
    }
    function l(t, e) {
      return t < 48 ? 36 === t : t < 58 || !(t < 65) && (t < 91 || (t < 97 ? 95 === t : t < 123 || (t <= 65535 ? t >= 170 && o.test(String.fromCharCode(t)) : !1 !== e && (c(t, h) || c(t, p)))));
    }
    var d = function d(t, e) {
      void 0 === e && (e = {}), this.label = t, this.keyword = e.keyword, this.beforeExpr = !!e.beforeExpr, this.startsExpr = !!e.startsExpr, this.isLoop = !!e.isLoop, this.isAssign = !!e.isAssign, this.prefix = !!e.prefix, this.postfix = !!e.postfix, this.binop = e.binop || null, this.updateContext = null;
    };
    function f(t, e) {
      return new d(t, {
        beforeExpr: !0,
        binop: e
      });
    }
    exports.TokenType = d;
    var m = {
        beforeExpr: !0
      },
      x = {
        startsExpr: !0
      },
      g = {};
    function v(t, e) {
      return void 0 === e && (e = {}), e.keyword = t, g[t] = new d(t, e);
    }
    exports.keywordTypes = g;
    var y = {
      num: new d("num", x),
      regexp: new d("regexp", x),
      string: new d("string", x),
      name: new d("name", x),
      eof: new d("eof"),
      bracketL: new d("[", {
        beforeExpr: !0,
        startsExpr: !0
      }),
      bracketR: new d("]"),
      braceL: new d("{", {
        beforeExpr: !0,
        startsExpr: !0
      }),
      braceR: new d("}"),
      parenL: new d("(", {
        beforeExpr: !0,
        startsExpr: !0
      }),
      parenR: new d(")"),
      comma: new d(",", m),
      semi: new d(";", m),
      colon: new d(":", m),
      dot: new d("."),
      question: new d("?", m),
      arrow: new d("=>", m),
      template: new d("template"),
      invalidTemplate: new d("invalidTemplate"),
      ellipsis: new d("...", m),
      backQuote: new d("`", x),
      dollarBraceL: new d("${", {
        beforeExpr: !0,
        startsExpr: !0
      }),
      eq: new d("=", {
        beforeExpr: !0,
        isAssign: !0
      }),
      assign: new d("_=", {
        beforeExpr: !0,
        isAssign: !0
      }),
      incDec: new d("++/--", {
        prefix: !0,
        postfix: !0,
        startsExpr: !0
      }),
      prefix: new d("!/~", {
        beforeExpr: !0,
        prefix: !0,
        startsExpr: !0
      }),
      logicalOR: f("||", 1),
      logicalAND: f("&&", 2),
      bitwiseOR: f("|", 3),
      bitwiseXOR: f("^", 4),
      bitwiseAND: f("&", 5),
      equality: f("==/!=/===/!==", 6),
      relational: f("</>/<=/>=", 7),
      bitShift: f("<</>>/>>>", 8),
      plusMin: new d("+/-", {
        beforeExpr: !0,
        binop: 9,
        prefix: !0,
        startsExpr: !0
      }),
      modulo: f("%", 10),
      star: f("*", 10),
      slash: f("/", 10),
      starstar: new d("**", {
        beforeExpr: !0
      }),
      _break: v("break"),
      _case: v("case", m),
      _catch: v("catch"),
      _continue: v("continue"),
      _debugger: v("debugger"),
      _default: v("default", m),
      _do: v("do", {
        isLoop: !0,
        beforeExpr: !0
      }),
      _else: v("else", m),
      _finally: v("finally"),
      _for: v("for", {
        isLoop: !0
      }),
      _function: v("function", x),
      _if: v("if"),
      _return: v("return", m),
      _switch: v("switch"),
      _throw: v("throw", m),
      _try: v("try"),
      _var: v("var"),
      _const: v("const"),
      _while: v("while", {
        isLoop: !0
      }),
      _with: v("with"),
      _new: v("new", {
        beforeExpr: !0,
        startsExpr: !0
      }),
      _this: v("this", x),
      _super: v("super", x),
      _class: v("class", x),
      _extends: v("extends", m),
      _export: v("export"),
      _import: v("import", x),
      _null: v("null", x),
      _true: v("true", x),
      _false: v("false", x),
      _in: v("in", {
        beforeExpr: !0,
        binop: 7
      }),
      _instanceof: v("instanceof", {
        beforeExpr: !0,
        binop: 7
      }),
      _typeof: v("typeof", {
        beforeExpr: !0,
        prefix: !0,
        startsExpr: !0
      }),
      _void: v("void", {
        beforeExpr: !0,
        prefix: !0,
        startsExpr: !0
      }),
      _delete: v("delete", {
        beforeExpr: !0,
        prefix: !0,
        startsExpr: !0
      })
    };
    exports.tokTypes = y;
    var k = /\r\n?|\n|\u2028|\u2029/;
    exports.lineBreak = k;
    var _ = new RegExp(k.source, "g");
    function b(t, e) {
      return 10 === t || 13 === t || !e && (8232 === t || 8233 === t);
    }
    exports.lineBreakG = _;
    var S = /[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/;
    exports.nonASCIIwhitespace = S;
    var w = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g,
      C = Object.prototype,
      E = C.hasOwnProperty,
      A = C.toString;
    function I(t, e) {
      return E.call(t, e);
    }
    var P = Array.isArray || function (t) {
      return "[object Array]" === A.call(t);
    };
    function T(t) {
      return new RegExp("^(?:" + t.replace(/ /g, "|") + ")$");
    }
    var L = function L(t, e) {
      this.line = t, this.column = e;
    };
    exports.Position = L, L.prototype.offset = function (t) {
      return new L(this.line, this.column + t);
    };
    var V = function V(t, e, i) {
      this.start = e, this.end = i, null !== t.sourceFile && (this.source = t.sourceFile);
    };
    function N(t, e) {
      for (var i = 1, s = 0;;) {
        _.lastIndex = s;
        var r = _.exec(t);
        if (!(r && r.index < e)) return new L(i, e - s);
        ++i, s = r.index + r[0].length;
      }
    }
    exports.SourceLocation = V;
    var R = {
      ecmaVersion: 10,
      sourceType: "script",
      onInsertedSemicolon: null,
      onTrailingComma: null,
      allowReserved: null,
      allowReturnOutsideFunction: !1,
      allowImportExportEverywhere: !1,
      allowAwaitOutsideFunction: !1,
      allowHashBang: !1,
      locations: !1,
      onToken: null,
      onComment: null,
      ranges: !1,
      program: null,
      sourceFile: null,
      directSourceFile: null,
      preserveParens: !1
    };
    function B(t) {
      var e = {};
      for (var i in R) e[i] = t && I(t, i) ? t[i] : R[i];
      if (e.ecmaVersion >= 2015 && (e.ecmaVersion -= 2009), null == e.allowReserved && (e.allowReserved = e.ecmaVersion < 5), P(e.onToken)) {
        var s = e.onToken;
        e.onToken = function (t) {
          return s.push(t);
        };
      }
      return P(e.onComment) && (e.onComment = O(e, e.onComment)), e;
    }
    function O(t, e) {
      return function (i, s, r, a, n, o) {
        var h = {
          type: i ? "Block" : "Line",
          value: s,
          start: r,
          end: a
        };
        t.locations && (h.loc = new V(this, n, o)), t.ranges && (h.range = [r, a]), e.push(h);
      };
    }
    exports.defaultOptions = R;
    var M = 1,
      D = 2,
      F = M | D,
      U = 4,
      q = 8,
      G = 16,
      H = 32,
      j = 64,
      W = 128;
    function z(t, e) {
      return D | (t ? U : 0) | (e ? q : 0);
    }
    var Q = 0,
      K = 1,
      X = 2,
      Y = 3,
      Z = 4,
      $ = 5,
      J = function J(e, s, r) {
        this.options = e = B(e), this.sourceFile = e.sourceFile, this.keywords = T(i[e.ecmaVersion >= 6 ? 6 : "module" === e.sourceType ? "5module" : 5]);
        var a = "";
        if (!0 !== e.allowReserved) {
          for (var n = e.ecmaVersion; !(a = t[n]); n--);
          "module" === e.sourceType && (a += " await");
        }
        this.reservedWords = T(a);
        var o = (a ? a + " " : "") + t.strict;
        this.reservedWordsStrict = T(o), this.reservedWordsStrictBind = T(o + " " + t.strictBind), this.input = String(s), this.containsEsc = !1, r ? (this.pos = r, this.lineStart = this.input.lastIndexOf("\n", r - 1) + 1, this.curLine = this.input.slice(0, this.lineStart).split(k).length) : (this.pos = this.lineStart = 0, this.curLine = 1), this.type = y.eof, this.value = null, this.start = this.end = this.pos, this.startLoc = this.endLoc = this.curPosition(), this.lastTokEndLoc = this.lastTokStartLoc = null, this.lastTokStart = this.lastTokEnd = this.pos, this.context = this.initialContext(), this.exprAllowed = !0, this.inModule = "module" === e.sourceType, this.strict = this.inModule || this.strictDirective(this.pos), this.potentialArrowAt = -1, this.yieldPos = this.awaitPos = this.awaitIdentPos = 0, this.labels = [], this.undefinedExports = {}, 0 === this.pos && e.allowHashBang && "#!" === this.input.slice(0, 2) && this.skipLineComment(2), this.scopeStack = [], this.enterScope(M), this.regexpState = null;
      };
    exports.Parser = J;
    var tt = {
      inFunction: {
        configurable: !0
      },
      inGenerator: {
        configurable: !0
      },
      inAsync: {
        configurable: !0
      },
      allowSuper: {
        configurable: !0
      },
      allowDirectSuper: {
        configurable: !0
      },
      treatFunctionsAsVar: {
        configurable: !0
      }
    };
    J.prototype.parse = function () {
      var t = this.options.program || this.startNode();
      return this.nextToken(), this.parseTopLevel(t);
    }, tt.inFunction.get = function () {
      return (this.currentVarScope().flags & D) > 0;
    }, tt.inGenerator.get = function () {
      return (this.currentVarScope().flags & q) > 0;
    }, tt.inAsync.get = function () {
      return (this.currentVarScope().flags & U) > 0;
    }, tt.allowSuper.get = function () {
      return (this.currentThisScope().flags & j) > 0;
    }, tt.allowDirectSuper.get = function () {
      return (this.currentThisScope().flags & W) > 0;
    }, tt.treatFunctionsAsVar.get = function () {
      return this.treatFunctionsAsVarInScope(this.currentScope());
    }, J.prototype.inNonArrowFunction = function () {
      return (this.currentThisScope().flags & D) > 0;
    }, J.extend = function () {
      for (var t = [], e = arguments.length; e--;) t[e] = arguments[e];
      for (var i = this, s = 0; s < t.length; s++) i = t[s](i);
      return i;
    }, J.parse = function (t, e) {
      return new this(e, t).parse();
    }, J.parseExpressionAt = function (t, e, i) {
      var s = new this(i, t, e);
      return s.nextToken(), s.parseExpression();
    }, J.tokenizer = function (t, e) {
      return new this(e, t);
    }, Object.defineProperties(J.prototype, tt);
    var et = J.prototype,
      it = /^(?:'((?:\\.|[^'])*?)'|"((?:\\.|[^"])*?)")/;
    function st() {
      this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = this.doubleProto = -1;
    }
    et.strictDirective = function (t) {
      for (;;) {
        w.lastIndex = t, t += w.exec(this.input)[0].length;
        var e = it.exec(this.input.slice(t));
        if (!e) return !1;
        if ("use strict" === (e[1] || e[2])) return !0;
        t += e[0].length, w.lastIndex = t, t += w.exec(this.input)[0].length, ";" === this.input[t] && t++;
      }
    }, et.eat = function (t) {
      return this.type === t && (this.next(), !0);
    }, et.isContextual = function (t) {
      return this.type === y.name && this.value === t && !this.containsEsc;
    }, et.eatContextual = function (t) {
      return !!this.isContextual(t) && (this.next(), !0);
    }, et.expectContextual = function (t) {
      this.eatContextual(t) || this.unexpected();
    }, et.canInsertSemicolon = function () {
      return this.type === y.eof || this.type === y.braceR || k.test(this.input.slice(this.lastTokEnd, this.start));
    }, et.insertSemicolon = function () {
      if (this.canInsertSemicolon()) return this.options.onInsertedSemicolon && this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc), !0;
    }, et.semicolon = function () {
      this.eat(y.semi) || this.insertSemicolon() || this.unexpected();
    }, et.afterTrailingComma = function (t, e) {
      if (this.type === t) return this.options.onTrailingComma && this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc), e || this.next(), !0;
    }, et.expect = function (t) {
      this.eat(t) || this.unexpected();
    }, et.unexpected = function (t) {
      this.raise(null != t ? t : this.start, "Unexpected token");
    }, et.checkPatternErrors = function (t, e) {
      if (t) {
        t.trailingComma > -1 && this.raiseRecoverable(t.trailingComma, "Comma is not permitted after the rest element");
        var i = e ? t.parenthesizedAssign : t.parenthesizedBind;
        i > -1 && this.raiseRecoverable(i, "Parenthesized pattern");
      }
    }, et.checkExpressionErrors = function (t, e) {
      if (!t) return !1;
      var i = t.shorthandAssign,
        s = t.doubleProto;
      if (!e) return i >= 0 || s >= 0;
      i >= 0 && this.raise(i, "Shorthand property assignments are valid only in destructuring patterns"), s >= 0 && this.raiseRecoverable(s, "Redefinition of __proto__ property");
    }, et.checkYieldAwaitInDefaultParams = function () {
      this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos) && this.raise(this.yieldPos, "Yield expression cannot be a default value"), this.awaitPos && this.raise(this.awaitPos, "Await expression cannot be a default value");
    }, et.isSimpleAssignTarget = function (t) {
      return "ParenthesizedExpression" === t.type ? this.isSimpleAssignTarget(t.expression) : "Identifier" === t.type || "MemberExpression" === t.type;
    };
    var rt = J.prototype;
    rt.parseTopLevel = function (t) {
      var e = {};
      for (t.body || (t.body = []); this.type !== y.eof;) {
        var i = this.parseStatement(null, !0, e);
        t.body.push(i);
      }
      if (this.inModule) for (var s = 0, r = Object.keys(this.undefinedExports); s < r.length; s += 1) {
        var a = r[s];
        this.raiseRecoverable(this.undefinedExports[a].start, "Export '" + a + "' is not defined");
      }
      return this.adaptDirectivePrologue(t.body), this.next(), t.sourceType = this.options.sourceType, this.finishNode(t, "Program");
    };
    var at = {
        kind: "loop"
      },
      nt = {
        kind: "switch"
      };
    rt.isLet = function (t) {
      if (this.options.ecmaVersion < 6 || !this.isContextual("let")) return !1;
      w.lastIndex = this.pos;
      var e = w.exec(this.input),
        i = this.pos + e[0].length,
        r = this.input.charCodeAt(i);
      if (91 === r) return !0;
      if (t) return !1;
      if (123 === r) return !0;
      if (u(r, !0)) {
        for (var a = i + 1; l(this.input.charCodeAt(a), !0);) ++a;
        var n = this.input.slice(i, a);
        if (!s.test(n)) return !0;
      }
      return !1;
    }, rt.isAsyncFunction = function () {
      if (this.options.ecmaVersion < 8 || !this.isContextual("async")) return !1;
      w.lastIndex = this.pos;
      var t = w.exec(this.input),
        e = this.pos + t[0].length;
      return !(k.test(this.input.slice(this.pos, e)) || "function" !== this.input.slice(e, e + 8) || e + 8 !== this.input.length && l(this.input.charAt(e + 8)));
    }, rt.parseStatement = function (t, e, i) {
      var s,
        r = this.type,
        a = this.startNode();
      switch (this.isLet(t) && (r = y._var, s = "let"), r) {
        case y._break:
        case y._continue:
          return this.parseBreakContinueStatement(a, r.keyword);
        case y._debugger:
          return this.parseDebuggerStatement(a);
        case y._do:
          return this.parseDoStatement(a);
        case y._for:
          return this.parseForStatement(a);
        case y._function:
          return t && (this.strict || "if" !== t && "label" !== t) && this.options.ecmaVersion >= 6 && this.unexpected(), this.parseFunctionStatement(a, !1, !t);
        case y._class:
          return t && this.unexpected(), this.parseClass(a, !0);
        case y._if:
          return this.parseIfStatement(a);
        case y._return:
          return this.parseReturnStatement(a);
        case y._switch:
          return this.parseSwitchStatement(a);
        case y._throw:
          return this.parseThrowStatement(a);
        case y._try:
          return this.parseTryStatement(a);
        case y._const:
        case y._var:
          return s = s || this.value, t && "var" !== s && this.unexpected(), this.parseVarStatement(a, s);
        case y._while:
          return this.parseWhileStatement(a);
        case y._with:
          return this.parseWithStatement(a);
        case y.braceL:
          return this.parseBlock(!0, a);
        case y.semi:
          return this.parseEmptyStatement(a);
        case y._export:
        case y._import:
          if (this.options.ecmaVersion > 10 && r === y._import) {
            w.lastIndex = this.pos;
            var n = w.exec(this.input),
              o = this.pos + n[0].length;
            if (40 === this.input.charCodeAt(o)) return this.parseExpressionStatement(a, this.parseExpression());
          }
          return this.options.allowImportExportEverywhere || (e || this.raise(this.start, "'import' and 'export' may only appear at the top level"), this.inModule || this.raise(this.start, "'import' and 'export' may appear only with 'sourceType: module'")), r === y._import ? this.parseImport(a) : this.parseExport(a, i);
        default:
          if (this.isAsyncFunction()) return t && this.unexpected(), this.next(), this.parseFunctionStatement(a, !0, !t);
          var h = this.value,
            p = this.parseExpression();
          return r === y.name && "Identifier" === p.type && this.eat(y.colon) ? this.parseLabeledStatement(a, h, p, t) : this.parseExpressionStatement(a, p);
      }
    }, rt.parseBreakContinueStatement = function (t, e) {
      var i = "break" === e;
      this.next(), this.eat(y.semi) || this.insertSemicolon() ? t.label = null : this.type !== y.name ? this.unexpected() : (t.label = this.parseIdent(), this.semicolon());
      for (var s = 0; s < this.labels.length; ++s) {
        var r = this.labels[s];
        if (null == t.label || r.name === t.label.name) {
          if (null != r.kind && (i || "loop" === r.kind)) break;
          if (t.label && i) break;
        }
      }
      return s === this.labels.length && this.raise(t.start, "Unsyntactic " + e), this.finishNode(t, i ? "BreakStatement" : "ContinueStatement");
    }, rt.parseDebuggerStatement = function (t) {
      return this.next(), this.semicolon(), this.finishNode(t, "DebuggerStatement");
    }, rt.parseDoStatement = function (t) {
      return this.next(), this.labels.push(at), t.body = this.parseStatement("do"), this.labels.pop(), this.expect(y._while), t.test = this.parseParenExpression(), this.options.ecmaVersion >= 6 ? this.eat(y.semi) : this.semicolon(), this.finishNode(t, "DoWhileStatement");
    }, rt.parseForStatement = function (t) {
      this.next();
      var e = this.options.ecmaVersion >= 9 && (this.inAsync || !this.inFunction && this.options.allowAwaitOutsideFunction) && this.eatContextual("await") ? this.lastTokStart : -1;
      if (this.labels.push(at), this.enterScope(0), this.expect(y.parenL), this.type === y.semi) return e > -1 && this.unexpected(e), this.parseFor(t, null);
      var i = this.isLet();
      if (this.type === y._var || this.type === y._const || i) {
        var s = this.startNode(),
          r = i ? "let" : this.value;
        return this.next(), this.parseVar(s, !0, r), this.finishNode(s, "VariableDeclaration"), (this.type === y._in || this.options.ecmaVersion >= 6 && this.isContextual("of")) && 1 === s.declarations.length ? (this.options.ecmaVersion >= 9 && (this.type === y._in ? e > -1 && this.unexpected(e) : t.await = e > -1), this.parseForIn(t, s)) : (e > -1 && this.unexpected(e), this.parseFor(t, s));
      }
      var a = new st(),
        n = this.parseExpression(!0, a);
      return this.type === y._in || this.options.ecmaVersion >= 6 && this.isContextual("of") ? (this.options.ecmaVersion >= 9 && (this.type === y._in ? e > -1 && this.unexpected(e) : t.await = e > -1), this.toAssignable(n, !1, a), this.checkLVal(n), this.parseForIn(t, n)) : (this.checkExpressionErrors(a, !0), e > -1 && this.unexpected(e), this.parseFor(t, n));
    }, rt.parseFunctionStatement = function (t, e, i) {
      return this.next(), this.parseFunction(t, ht | (i ? 0 : pt), !1, e);
    }, rt.parseIfStatement = function (t) {
      return this.next(), t.test = this.parseParenExpression(), t.consequent = this.parseStatement("if"), t.alternate = this.eat(y._else) ? this.parseStatement("if") : null, this.finishNode(t, "IfStatement");
    }, rt.parseReturnStatement = function (t) {
      return this.inFunction || this.options.allowReturnOutsideFunction || this.raise(this.start, "'return' outside of function"), this.next(), this.eat(y.semi) || this.insertSemicolon() ? t.argument = null : (t.argument = this.parseExpression(), this.semicolon()), this.finishNode(t, "ReturnStatement");
    }, rt.parseSwitchStatement = function (t) {
      var e;
      this.next(), t.discriminant = this.parseParenExpression(), t.cases = [], this.expect(y.braceL), this.labels.push(nt), this.enterScope(0);
      for (var i = !1; this.type !== y.braceR;) if (this.type === y._case || this.type === y._default) {
        var s = this.type === y._case;
        e && this.finishNode(e, "SwitchCase"), t.cases.push(e = this.startNode()), e.consequent = [], this.next(), s ? e.test = this.parseExpression() : (i && this.raiseRecoverable(this.lastTokStart, "Multiple default clauses"), i = !0, e.test = null), this.expect(y.colon);
      } else e || this.unexpected(), e.consequent.push(this.parseStatement(null));
      return this.exitScope(), e && this.finishNode(e, "SwitchCase"), this.next(), this.labels.pop(), this.finishNode(t, "SwitchStatement");
    }, rt.parseThrowStatement = function (t) {
      return this.next(), k.test(this.input.slice(this.lastTokEnd, this.start)) && this.raise(this.lastTokEnd, "Illegal newline after throw"), t.argument = this.parseExpression(), this.semicolon(), this.finishNode(t, "ThrowStatement");
    };
    var ot = [];
    rt.parseTryStatement = function (t) {
      if (this.next(), t.block = this.parseBlock(), t.handler = null, this.type === y._catch) {
        var e = this.startNode();
        if (this.next(), this.eat(y.parenL)) {
          e.param = this.parseBindingAtom();
          var i = "Identifier" === e.param.type;
          this.enterScope(i ? H : 0), this.checkLVal(e.param, i ? Z : X), this.expect(y.parenR);
        } else this.options.ecmaVersion < 10 && this.unexpected(), e.param = null, this.enterScope(0);
        e.body = this.parseBlock(!1), this.exitScope(), t.handler = this.finishNode(e, "CatchClause");
      }
      return t.finalizer = this.eat(y._finally) ? this.parseBlock() : null, t.handler || t.finalizer || this.raise(t.start, "Missing catch or finally clause"), this.finishNode(t, "TryStatement");
    }, rt.parseVarStatement = function (t, e) {
      return this.next(), this.parseVar(t, !1, e), this.semicolon(), this.finishNode(t, "VariableDeclaration");
    }, rt.parseWhileStatement = function (t) {
      return this.next(), t.test = this.parseParenExpression(), this.labels.push(at), t.body = this.parseStatement("while"), this.labels.pop(), this.finishNode(t, "WhileStatement");
    }, rt.parseWithStatement = function (t) {
      return this.strict && this.raise(this.start, "'with' in strict mode"), this.next(), t.object = this.parseParenExpression(), t.body = this.parseStatement("with"), this.finishNode(t, "WithStatement");
    }, rt.parseEmptyStatement = function (t) {
      return this.next(), this.finishNode(t, "EmptyStatement");
    }, rt.parseLabeledStatement = function (t, e, i, s) {
      for (var r = 0, a = this.labels; r < a.length; r += 1) {
        a[r].name === e && this.raise(i.start, "Label '" + e + "' is already declared");
      }
      for (var n = this.type.isLoop ? "loop" : this.type === y._switch ? "switch" : null, o = this.labels.length - 1; o >= 0; o--) {
        var h = this.labels[o];
        if (h.statementStart !== t.start) break;
        h.statementStart = this.start, h.kind = n;
      }
      return this.labels.push({
        name: e,
        kind: n,
        statementStart: this.start
      }), t.body = this.parseStatement(s ? -1 === s.indexOf("label") ? s + "label" : s : "label"), this.labels.pop(), t.label = i, this.finishNode(t, "LabeledStatement");
    }, rt.parseExpressionStatement = function (t, e) {
      return t.expression = e, this.semicolon(), this.finishNode(t, "ExpressionStatement");
    }, rt.parseBlock = function (t, e) {
      for (void 0 === t && (t = !0), void 0 === e && (e = this.startNode()), e.body = [], this.expect(y.braceL), t && this.enterScope(0); !this.eat(y.braceR);) {
        var i = this.parseStatement(null);
        e.body.push(i);
      }
      return t && this.exitScope(), this.finishNode(e, "BlockStatement");
    }, rt.parseFor = function (t, e) {
      return t.init = e, this.expect(y.semi), t.test = this.type === y.semi ? null : this.parseExpression(), this.expect(y.semi), t.update = this.type === y.parenR ? null : this.parseExpression(), this.expect(y.parenR), t.body = this.parseStatement("for"), this.exitScope(), this.labels.pop(), this.finishNode(t, "ForStatement");
    }, rt.parseForIn = function (t, e) {
      var i = this.type === y._in;
      return this.next(), "VariableDeclaration" === e.type && null != e.declarations[0].init && (!i || this.options.ecmaVersion < 8 || this.strict || "var" !== e.kind || "Identifier" !== e.declarations[0].id.type) ? this.raise(e.start, (i ? "for-in" : "for-of") + " loop variable declaration may not have an initializer") : "AssignmentPattern" === e.type && this.raise(e.start, "Invalid left-hand side in for-loop"), t.left = e, t.right = i ? this.parseExpression() : this.parseMaybeAssign(), this.expect(y.parenR), t.body = this.parseStatement("for"), this.exitScope(), this.labels.pop(), this.finishNode(t, i ? "ForInStatement" : "ForOfStatement");
    }, rt.parseVar = function (t, e, i) {
      for (t.declarations = [], t.kind = i;;) {
        var s = this.startNode();
        if (this.parseVarId(s, i), this.eat(y.eq) ? s.init = this.parseMaybeAssign(e) : "const" !== i || this.type === y._in || this.options.ecmaVersion >= 6 && this.isContextual("of") ? "Identifier" === s.id.type || e && (this.type === y._in || this.isContextual("of")) ? s.init = null : this.raise(this.lastTokEnd, "Complex binding patterns require an initialization value") : this.unexpected(), t.declarations.push(this.finishNode(s, "VariableDeclarator")), !this.eat(y.comma)) break;
      }
      return t;
    }, rt.parseVarId = function (t, e) {
      t.id = this.parseBindingAtom(), this.checkLVal(t.id, "var" === e ? K : X, !1);
    };
    var ht = 1,
      pt = 2,
      ct = 4;
    rt.parseFunction = function (t, e, i, s) {
      this.initFunction(t), (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !s) && (this.type === y.star && e & pt && this.unexpected(), t.generator = this.eat(y.star)), this.options.ecmaVersion >= 8 && (t.async = !!s), e & ht && (t.id = e & ct && this.type !== y.name ? null : this.parseIdent(), !t.id || e & pt || this.checkLVal(t.id, this.strict || t.generator || t.async ? this.treatFunctionsAsVar ? K : X : Y));
      var r = this.yieldPos,
        a = this.awaitPos,
        n = this.awaitIdentPos;
      return this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, this.enterScope(z(t.async, t.generator)), e & ht || (t.id = this.type === y.name ? this.parseIdent() : null), this.parseFunctionParams(t), this.parseFunctionBody(t, i, !1), this.yieldPos = r, this.awaitPos = a, this.awaitIdentPos = n, this.finishNode(t, e & ht ? "FunctionDeclaration" : "FunctionExpression");
    }, rt.parseFunctionParams = function (t) {
      this.expect(y.parenL), t.params = this.parseBindingList(y.parenR, !1, this.options.ecmaVersion >= 8), this.checkYieldAwaitInDefaultParams();
    }, rt.parseClass = function (t, e) {
      this.next();
      var i = this.strict;
      this.strict = !0, this.parseClassId(t, e), this.parseClassSuper(t);
      var s = this.startNode(),
        r = !1;
      for (s.body = [], this.expect(y.braceL); !this.eat(y.braceR);) {
        var a = this.parseClassElement(null !== t.superClass);
        a && (s.body.push(a), "MethodDefinition" === a.type && "constructor" === a.kind && (r && this.raise(a.start, "Duplicate constructor in the same class"), r = !0));
      }
      return t.body = this.finishNode(s, "ClassBody"), this.strict = i, this.finishNode(t, e ? "ClassDeclaration" : "ClassExpression");
    }, rt.parseClassElement = function (t) {
      var e = this;
      if (this.eat(y.semi)) return null;
      var i = this.startNode(),
        s = function s(t, _s) {
          void 0 === _s && (_s = !1);
          var r = e.start,
            a = e.startLoc;
          return !!e.eatContextual(t) && (!(e.type === y.parenL || _s && e.canInsertSemicolon()) || (i.key && e.unexpected(), i.computed = !1, i.key = e.startNodeAt(r, a), i.key.name = t, e.finishNode(i.key, "Identifier"), !1));
        };
      i.kind = "method", i.static = s("static");
      var r = this.eat(y.star),
        a = !1;
      r || (this.options.ecmaVersion >= 8 && s("async", !0) ? (a = !0, r = this.options.ecmaVersion >= 9 && this.eat(y.star)) : s("get") ? i.kind = "get" : s("set") && (i.kind = "set")), i.key || this.parsePropertyName(i);
      var n = i.key,
        o = !1;
      return i.computed || i.static || !("Identifier" === n.type && "constructor" === n.name || "Literal" === n.type && "constructor" === n.value) ? i.static && "Identifier" === n.type && "prototype" === n.name && this.raise(n.start, "Classes may not have a static property named prototype") : ("method" !== i.kind && this.raise(n.start, "Constructor can't have get/set modifier"), r && this.raise(n.start, "Constructor can't be a generator"), a && this.raise(n.start, "Constructor can't be an async method"), i.kind = "constructor", o = t), this.parseClassMethod(i, r, a, o), "get" === i.kind && 0 !== i.value.params.length && this.raiseRecoverable(i.value.start, "getter should have no params"), "set" === i.kind && 1 !== i.value.params.length && this.raiseRecoverable(i.value.start, "setter should have exactly one param"), "set" === i.kind && "RestElement" === i.value.params[0].type && this.raiseRecoverable(i.value.params[0].start, "Setter cannot use rest params"), i;
    }, rt.parseClassMethod = function (t, e, i, s) {
      return t.value = this.parseMethod(e, i, s), this.finishNode(t, "MethodDefinition");
    }, rt.parseClassId = function (t, e) {
      this.type === y.name ? (t.id = this.parseIdent(), e && this.checkLVal(t.id, X, !1)) : (!0 === e && this.unexpected(), t.id = null);
    }, rt.parseClassSuper = function (t) {
      t.superClass = this.eat(y._extends) ? this.parseExprSubscripts() : null;
    }, rt.parseExport = function (t, e) {
      if (this.next(), this.eat(y.star)) return this.expectContextual("from"), this.type !== y.string && this.unexpected(), t.source = this.parseExprAtom(), this.semicolon(), this.finishNode(t, "ExportAllDeclaration");
      if (this.eat(y._default)) {
        var i;
        if (this.checkExport(e, "default", this.lastTokStart), this.type === y._function || (i = this.isAsyncFunction())) {
          var s = this.startNode();
          this.next(), i && this.next(), t.declaration = this.parseFunction(s, ht | ct, !1, i);
        } else if (this.type === y._class) {
          var r = this.startNode();
          t.declaration = this.parseClass(r, "nullableID");
        } else t.declaration = this.parseMaybeAssign(), this.semicolon();
        return this.finishNode(t, "ExportDefaultDeclaration");
      }
      if (this.shouldParseExportStatement()) t.declaration = this.parseStatement(null), "VariableDeclaration" === t.declaration.type ? this.checkVariableExport(e, t.declaration.declarations) : this.checkExport(e, t.declaration.id.name, t.declaration.id.start), t.specifiers = [], t.source = null;else {
        if (t.declaration = null, t.specifiers = this.parseExportSpecifiers(e), this.eatContextual("from")) this.type !== y.string && this.unexpected(), t.source = this.parseExprAtom();else {
          for (var a = 0, n = t.specifiers; a < n.length; a += 1) {
            var o = n[a];
            this.checkUnreserved(o.local), this.checkLocalExport(o.local);
          }
          t.source = null;
        }
        this.semicolon();
      }
      return this.finishNode(t, "ExportNamedDeclaration");
    }, rt.checkExport = function (t, e, i) {
      t && (I(t, e) && this.raiseRecoverable(i, "Duplicate export '" + e + "'"), t[e] = !0);
    }, rt.checkPatternExport = function (t, e) {
      var i = e.type;
      if ("Identifier" === i) this.checkExport(t, e.name, e.start);else if ("ObjectPattern" === i) for (var s = 0, r = e.properties; s < r.length; s += 1) {
        var a = r[s];
        this.checkPatternExport(t, a);
      } else if ("ArrayPattern" === i) for (var n = 0, o = e.elements; n < o.length; n += 1) {
        var h = o[n];
        h && this.checkPatternExport(t, h);
      } else "Property" === i ? this.checkPatternExport(t, e.value) : "AssignmentPattern" === i ? this.checkPatternExport(t, e.left) : "RestElement" === i ? this.checkPatternExport(t, e.argument) : "ParenthesizedExpression" === i && this.checkPatternExport(t, e.expression);
    }, rt.checkVariableExport = function (t, e) {
      if (t) for (var i = 0, s = e; i < s.length; i += 1) {
        var r = s[i];
        this.checkPatternExport(t, r.id);
      }
    }, rt.shouldParseExportStatement = function () {
      return "var" === this.type.keyword || "const" === this.type.keyword || "class" === this.type.keyword || "function" === this.type.keyword || this.isLet() || this.isAsyncFunction();
    }, rt.parseExportSpecifiers = function (t) {
      var e = [],
        i = !0;
      for (this.expect(y.braceL); !this.eat(y.braceR);) {
        if (i) i = !1;else if (this.expect(y.comma), this.afterTrailingComma(y.braceR)) break;
        var s = this.startNode();
        s.local = this.parseIdent(!0), s.exported = this.eatContextual("as") ? this.parseIdent(!0) : s.local, this.checkExport(t, s.exported.name, s.exported.start), e.push(this.finishNode(s, "ExportSpecifier"));
      }
      return e;
    }, rt.parseImport = function (t) {
      return this.next(), this.type === y.string ? (t.specifiers = ot, t.source = this.parseExprAtom()) : (t.specifiers = this.parseImportSpecifiers(), this.expectContextual("from"), t.source = this.type === y.string ? this.parseExprAtom() : this.unexpected()), this.semicolon(), this.finishNode(t, "ImportDeclaration");
    }, rt.parseImportSpecifiers = function () {
      var t = [],
        e = !0;
      if (this.type === y.name) {
        var i = this.startNode();
        if (i.local = this.parseIdent(), this.checkLVal(i.local, X), t.push(this.finishNode(i, "ImportDefaultSpecifier")), !this.eat(y.comma)) return t;
      }
      if (this.type === y.star) {
        var s = this.startNode();
        return this.next(), this.expectContextual("as"), s.local = this.parseIdent(), this.checkLVal(s.local, X), t.push(this.finishNode(s, "ImportNamespaceSpecifier")), t;
      }
      for (this.expect(y.braceL); !this.eat(y.braceR);) {
        if (e) e = !1;else if (this.expect(y.comma), this.afterTrailingComma(y.braceR)) break;
        var r = this.startNode();
        r.imported = this.parseIdent(!0), this.eatContextual("as") ? r.local = this.parseIdent() : (this.checkUnreserved(r.imported), r.local = r.imported), this.checkLVal(r.local, X), t.push(this.finishNode(r, "ImportSpecifier"));
      }
      return t;
    }, rt.adaptDirectivePrologue = function (t) {
      for (var e = 0; e < t.length && this.isDirectiveCandidate(t[e]); ++e) t[e].directive = t[e].expression.raw.slice(1, -1);
    }, rt.isDirectiveCandidate = function (t) {
      return "ExpressionStatement" === t.type && "Literal" === t.expression.type && "string" == typeof t.expression.value && ('"' === this.input[t.start] || "'" === this.input[t.start]);
    };
    var ut = J.prototype;
    ut.toAssignable = function (t, e, i) {
      if (this.options.ecmaVersion >= 6 && t) switch (t.type) {
        case "Identifier":
          this.inAsync && "await" === t.name && this.raise(t.start, "Cannot use 'await' as identifier inside an async function");
          break;
        case "ObjectPattern":
        case "ArrayPattern":
        case "RestElement":
          break;
        case "ObjectExpression":
          t.type = "ObjectPattern", i && this.checkPatternErrors(i, !0);
          for (var s = 0, r = t.properties; s < r.length; s += 1) {
            var a = r[s];
            this.toAssignable(a, e), "RestElement" !== a.type || "ArrayPattern" !== a.argument.type && "ObjectPattern" !== a.argument.type || this.raise(a.argument.start, "Unexpected token");
          }
          break;
        case "Property":
          "init" !== t.kind && this.raise(t.key.start, "Object pattern can't contain getter or setter"), this.toAssignable(t.value, e);
          break;
        case "ArrayExpression":
          t.type = "ArrayPattern", i && this.checkPatternErrors(i, !0), this.toAssignableList(t.elements, e);
          break;
        case "SpreadElement":
          t.type = "RestElement", this.toAssignable(t.argument, e), "AssignmentPattern" === t.argument.type && this.raise(t.argument.start, "Rest elements cannot have a default value");
          break;
        case "AssignmentExpression":
          "=" !== t.operator && this.raise(t.left.end, "Only '=' operator can be used for specifying default value."), t.type = "AssignmentPattern", delete t.operator, this.toAssignable(t.left, e);
        case "AssignmentPattern":
          break;
        case "ParenthesizedExpression":
          this.toAssignable(t.expression, e, i);
          break;
        case "MemberExpression":
          if (!e) break;
        default:
          this.raise(t.start, "Assigning to rvalue");
      } else i && this.checkPatternErrors(i, !0);
      return t;
    }, ut.toAssignableList = function (t, e) {
      for (var i = t.length, s = 0; s < i; s++) {
        var r = t[s];
        r && this.toAssignable(r, e);
      }
      if (i) {
        var a = t[i - 1];
        6 === this.options.ecmaVersion && e && a && "RestElement" === a.type && "Identifier" !== a.argument.type && this.unexpected(a.argument.start);
      }
      return t;
    }, ut.parseSpread = function (t) {
      var e = this.startNode();
      return this.next(), e.argument = this.parseMaybeAssign(!1, t), this.finishNode(e, "SpreadElement");
    }, ut.parseRestBinding = function () {
      var t = this.startNode();
      return this.next(), 6 === this.options.ecmaVersion && this.type !== y.name && this.unexpected(), t.argument = this.parseBindingAtom(), this.finishNode(t, "RestElement");
    }, ut.parseBindingAtom = function () {
      if (this.options.ecmaVersion >= 6) switch (this.type) {
        case y.bracketL:
          var t = this.startNode();
          return this.next(), t.elements = this.parseBindingList(y.bracketR, !0, !0), this.finishNode(t, "ArrayPattern");
        case y.braceL:
          return this.parseObj(!0);
      }
      return this.parseIdent();
    }, ut.parseBindingList = function (t, e, i) {
      for (var s = [], r = !0; !this.eat(t);) if (r ? r = !1 : this.expect(y.comma), e && this.type === y.comma) s.push(null);else {
        if (i && this.afterTrailingComma(t)) break;
        if (this.type === y.ellipsis) {
          var a = this.parseRestBinding();
          this.parseBindingListItem(a), s.push(a), this.type === y.comma && this.raise(this.start, "Comma is not permitted after the rest element"), this.expect(t);
          break;
        }
        var n = this.parseMaybeDefault(this.start, this.startLoc);
        this.parseBindingListItem(n), s.push(n);
      }
      return s;
    }, ut.parseBindingListItem = function (t) {
      return t;
    }, ut.parseMaybeDefault = function (t, e, i) {
      if (i = i || this.parseBindingAtom(), this.options.ecmaVersion < 6 || !this.eat(y.eq)) return i;
      var s = this.startNodeAt(t, e);
      return s.left = i, s.right = this.parseMaybeAssign(), this.finishNode(s, "AssignmentPattern");
    }, ut.checkLVal = function (t, e, i) {
      switch (void 0 === e && (e = Q), t.type) {
        case "Identifier":
          e === X && "let" === t.name && this.raiseRecoverable(t.start, "let is disallowed as a lexically bound name"), this.strict && this.reservedWordsStrictBind.test(t.name) && this.raiseRecoverable(t.start, (e ? "Binding " : "Assigning to ") + t.name + " in strict mode"), i && (I(i, t.name) && this.raiseRecoverable(t.start, "Argument name clash"), i[t.name] = !0), e !== Q && e !== $ && this.declareName(t.name, e, t.start);
          break;
        case "MemberExpression":
          e && this.raiseRecoverable(t.start, "Binding member expression");
          break;
        case "ObjectPattern":
          for (var s = 0, r = t.properties; s < r.length; s += 1) {
            var a = r[s];
            this.checkLVal(a, e, i);
          }
          break;
        case "Property":
          this.checkLVal(t.value, e, i);
          break;
        case "ArrayPattern":
          for (var n = 0, o = t.elements; n < o.length; n += 1) {
            var h = o[n];
            h && this.checkLVal(h, e, i);
          }
          break;
        case "AssignmentPattern":
          this.checkLVal(t.left, e, i);
          break;
        case "RestElement":
          this.checkLVal(t.argument, e, i);
          break;
        case "ParenthesizedExpression":
          this.checkLVal(t.expression, e, i);
          break;
        default:
          this.raise(t.start, (e ? "Binding" : "Assigning to") + " rvalue");
      }
    };
    var lt = J.prototype;
    lt.checkPropClash = function (t, e, i) {
      if (!(this.options.ecmaVersion >= 9 && "SpreadElement" === t.type || this.options.ecmaVersion >= 6 && (t.computed || t.method || t.shorthand))) {
        var s,
          r = t.key;
        switch (r.type) {
          case "Identifier":
            s = r.name;
            break;
          case "Literal":
            s = String(r.value);
            break;
          default:
            return;
        }
        var a = t.kind;
        if (this.options.ecmaVersion >= 6) "__proto__" === s && "init" === a && (e.proto && (i ? i.doubleProto < 0 && (i.doubleProto = r.start) : this.raiseRecoverable(r.start, "Redefinition of __proto__ property")), e.proto = !0);else {
          var n = e[s = "$" + s];
          if (n) ("init" === a ? this.strict && n.init || n.get || n.set : n.init || n[a]) && this.raiseRecoverable(r.start, "Redefinition of property");else n = e[s] = {
            init: !1,
            get: !1,
            set: !1
          };
          n[a] = !0;
        }
      }
    }, lt.parseExpression = function (t, e) {
      var i = this.start,
        s = this.startLoc,
        r = this.parseMaybeAssign(t, e);
      if (this.type === y.comma) {
        var a = this.startNodeAt(i, s);
        for (a.expressions = [r]; this.eat(y.comma);) a.expressions.push(this.parseMaybeAssign(t, e));
        return this.finishNode(a, "SequenceExpression");
      }
      return r;
    }, lt.parseMaybeAssign = function (t, e, i) {
      if (this.isContextual("yield")) {
        if (this.inGenerator) return this.parseYield(t);
        this.exprAllowed = !1;
      }
      var s = !1,
        r = -1,
        a = -1;
      e ? (r = e.parenthesizedAssign, a = e.trailingComma, e.parenthesizedAssign = e.trailingComma = -1) : (e = new st(), s = !0);
      var n = this.start,
        o = this.startLoc;
      this.type !== y.parenL && this.type !== y.name || (this.potentialArrowAt = this.start);
      var h = this.parseMaybeConditional(t, e);
      if (i && (h = i.call(this, h, n, o)), this.type.isAssign) {
        var p = this.startNodeAt(n, o);
        return p.operator = this.value, p.left = this.type === y.eq ? this.toAssignable(h, !1, e) : h, s || (e.parenthesizedAssign = e.trailingComma = e.doubleProto = -1), e.shorthandAssign >= p.left.start && (e.shorthandAssign = -1), this.checkLVal(h), this.next(), p.right = this.parseMaybeAssign(t), this.finishNode(p, "AssignmentExpression");
      }
      return s && this.checkExpressionErrors(e, !0), r > -1 && (e.parenthesizedAssign = r), a > -1 && (e.trailingComma = a), h;
    }, lt.parseMaybeConditional = function (t, e) {
      var i = this.start,
        s = this.startLoc,
        r = this.parseExprOps(t, e);
      if (this.checkExpressionErrors(e)) return r;
      if (this.eat(y.question)) {
        var a = this.startNodeAt(i, s);
        return a.test = r, a.consequent = this.parseMaybeAssign(), this.expect(y.colon), a.alternate = this.parseMaybeAssign(t), this.finishNode(a, "ConditionalExpression");
      }
      return r;
    }, lt.parseExprOps = function (t, e) {
      var i = this.start,
        s = this.startLoc,
        r = this.parseMaybeUnary(e, !1);
      return this.checkExpressionErrors(e) ? r : r.start === i && "ArrowFunctionExpression" === r.type ? r : this.parseExprOp(r, i, s, -1, t);
    }, lt.parseExprOp = function (t, e, i, s, r) {
      var a = this.type.binop;
      if (null != a && (!r || this.type !== y._in) && a > s) {
        var n = this.type === y.logicalOR || this.type === y.logicalAND,
          o = this.value;
        this.next();
        var h = this.start,
          p = this.startLoc,
          c = this.parseExprOp(this.parseMaybeUnary(null, !1), h, p, a, r),
          u = this.buildBinary(e, i, t, c, o, n);
        return this.parseExprOp(u, e, i, s, r);
      }
      return t;
    }, lt.buildBinary = function (t, e, i, s, r, a) {
      var n = this.startNodeAt(t, e);
      return n.left = i, n.operator = r, n.right = s, this.finishNode(n, a ? "LogicalExpression" : "BinaryExpression");
    }, lt.parseMaybeUnary = function (t, e) {
      var i,
        s = this.start,
        r = this.startLoc;
      if (this.isContextual("await") && (this.inAsync || !this.inFunction && this.options.allowAwaitOutsideFunction)) i = this.parseAwait(), e = !0;else if (this.type.prefix) {
        var a = this.startNode(),
          n = this.type === y.incDec;
        a.operator = this.value, a.prefix = !0, this.next(), a.argument = this.parseMaybeUnary(null, !0), this.checkExpressionErrors(t, !0), n ? this.checkLVal(a.argument) : this.strict && "delete" === a.operator && "Identifier" === a.argument.type ? this.raiseRecoverable(a.start, "Deleting local variable in strict mode") : e = !0, i = this.finishNode(a, n ? "UpdateExpression" : "UnaryExpression");
      } else {
        if (i = this.parseExprSubscripts(t), this.checkExpressionErrors(t)) return i;
        for (; this.type.postfix && !this.canInsertSemicolon();) {
          var o = this.startNodeAt(s, r);
          o.operator = this.value, o.prefix = !1, o.argument = i, this.checkLVal(i), this.next(), i = this.finishNode(o, "UpdateExpression");
        }
      }
      return !e && this.eat(y.starstar) ? this.buildBinary(s, r, i, this.parseMaybeUnary(null, !1), "**", !1) : i;
    }, lt.parseExprSubscripts = function (t) {
      var e = this.start,
        i = this.startLoc,
        s = this.parseExprAtom(t);
      if ("ArrowFunctionExpression" === s.type && ")" !== this.input.slice(this.lastTokStart, this.lastTokEnd)) return s;
      var r = this.parseSubscripts(s, e, i);
      return t && "MemberExpression" === r.type && (t.parenthesizedAssign >= r.start && (t.parenthesizedAssign = -1), t.parenthesizedBind >= r.start && (t.parenthesizedBind = -1)), r;
    }, lt.parseSubscripts = function (t, e, i, s) {
      for (var r = this.options.ecmaVersion >= 8 && "Identifier" === t.type && "async" === t.name && this.lastTokEnd === t.end && !this.canInsertSemicolon() && "async" === this.input.slice(t.start, t.end);;) {
        var a = this.parseSubscript(t, e, i, s, r);
        if (a === t || "ArrowFunctionExpression" === a.type) return a;
        t = a;
      }
    }, lt.parseSubscript = function (t, e, i, s, r) {
      var a = this.eat(y.bracketL);
      if (a || this.eat(y.dot)) {
        var n = this.startNodeAt(e, i);
        n.object = t, n.property = a ? this.parseExpression() : this.parseIdent("never" !== this.options.allowReserved), n.computed = !!a, a && this.expect(y.bracketR), t = this.finishNode(n, "MemberExpression");
      } else if (!s && this.eat(y.parenL)) {
        var o = new st(),
          h = this.yieldPos,
          p = this.awaitPos,
          c = this.awaitIdentPos;
        this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0;
        var u = this.parseExprList(y.parenR, this.options.ecmaVersion >= 8, !1, o);
        if (r && !this.canInsertSemicolon() && this.eat(y.arrow)) return this.checkPatternErrors(o, !1), this.checkYieldAwaitInDefaultParams(), this.awaitIdentPos > 0 && this.raise(this.awaitIdentPos, "Cannot use 'await' as identifier inside an async function"), this.yieldPos = h, this.awaitPos = p, this.awaitIdentPos = c, this.parseArrowExpression(this.startNodeAt(e, i), u, !0);
        this.checkExpressionErrors(o, !0), this.yieldPos = h || this.yieldPos, this.awaitPos = p || this.awaitPos, this.awaitIdentPos = c || this.awaitIdentPos;
        var l = this.startNodeAt(e, i);
        l.callee = t, l.arguments = u, t = this.finishNode(l, "CallExpression");
      } else if (this.type === y.backQuote) {
        var d = this.startNodeAt(e, i);
        d.tag = t, d.quasi = this.parseTemplate({
          isTagged: !0
        }), t = this.finishNode(d, "TaggedTemplateExpression");
      }
      return t;
    }, lt.parseExprAtom = function (t) {
      this.type === y.slash && this.readRegexp();
      var e,
        i = this.potentialArrowAt === this.start;
      switch (this.type) {
        case y._super:
          return this.allowSuper || this.raise(this.start, "'super' keyword outside a method"), e = this.startNode(), this.next(), this.type !== y.parenL || this.allowDirectSuper || this.raise(e.start, "super() call outside constructor of a subclass"), this.type !== y.dot && this.type !== y.bracketL && this.type !== y.parenL && this.unexpected(), this.finishNode(e, "Super");
        case y._this:
          return e = this.startNode(), this.next(), this.finishNode(e, "ThisExpression");
        case y.name:
          var s = this.start,
            r = this.startLoc,
            a = this.containsEsc,
            n = this.parseIdent(!1);
          if (this.options.ecmaVersion >= 8 && !a && "async" === n.name && !this.canInsertSemicolon() && this.eat(y._function)) return this.parseFunction(this.startNodeAt(s, r), 0, !1, !0);
          if (i && !this.canInsertSemicolon()) {
            if (this.eat(y.arrow)) return this.parseArrowExpression(this.startNodeAt(s, r), [n], !1);
            if (this.options.ecmaVersion >= 8 && "async" === n.name && this.type === y.name && !a) return n = this.parseIdent(!1), !this.canInsertSemicolon() && this.eat(y.arrow) || this.unexpected(), this.parseArrowExpression(this.startNodeAt(s, r), [n], !0);
          }
          return n;
        case y.regexp:
          var o = this.value;
          return (e = this.parseLiteral(o.value)).regex = {
            pattern: o.pattern,
            flags: o.flags
          }, e;
        case y.num:
        case y.string:
          return this.parseLiteral(this.value);
        case y._null:
        case y._true:
        case y._false:
          return (e = this.startNode()).value = this.type === y._null ? null : this.type === y._true, e.raw = this.type.keyword, this.next(), this.finishNode(e, "Literal");
        case y.parenL:
          var h = this.start,
            p = this.parseParenAndDistinguishExpression(i);
          return t && (t.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(p) && (t.parenthesizedAssign = h), t.parenthesizedBind < 0 && (t.parenthesizedBind = h)), p;
        case y.bracketL:
          return e = this.startNode(), this.next(), e.elements = this.parseExprList(y.bracketR, !0, !0, t), this.finishNode(e, "ArrayExpression");
        case y.braceL:
          return this.parseObj(!1, t);
        case y._function:
          return e = this.startNode(), this.next(), this.parseFunction(e, 0);
        case y._class:
          return this.parseClass(this.startNode(), !1);
        case y._new:
          return this.parseNew();
        case y.backQuote:
          return this.parseTemplate();
        case y._import:
          return this.options.ecmaVersion >= 11 ? this.parseExprImport() : this.unexpected();
        default:
          this.unexpected();
      }
    }, lt.parseExprImport = function () {
      var t = this.startNode();
      switch (this.next(), this.type) {
        case y.parenL:
          return this.parseDynamicImport(t);
        default:
          this.unexpected();
      }
    }, lt.parseDynamicImport = function (t) {
      if (this.next(), t.source = this.parseMaybeAssign(), !this.eat(y.parenR)) {
        var e = this.start;
        this.eat(y.comma) && this.eat(y.parenR) ? this.raiseRecoverable(e, "Trailing comma is not allowed in import()") : this.unexpected(e);
      }
      return this.finishNode(t, "ImportExpression");
    }, lt.parseLiteral = function (t) {
      var e = this.startNode();
      return e.value = t, e.raw = this.input.slice(this.start, this.end), 110 === e.raw.charCodeAt(e.raw.length - 1) && (e.bigint = e.raw.slice(0, -1)), this.next(), this.finishNode(e, "Literal");
    }, lt.parseParenExpression = function () {
      this.expect(y.parenL);
      var t = this.parseExpression();
      return this.expect(y.parenR), t;
    }, lt.parseParenAndDistinguishExpression = function (t) {
      var e,
        i = this.start,
        s = this.startLoc,
        r = this.options.ecmaVersion >= 8;
      if (this.options.ecmaVersion >= 6) {
        this.next();
        var a,
          n = this.start,
          o = this.startLoc,
          h = [],
          p = !0,
          c = !1,
          u = new st(),
          l = this.yieldPos,
          d = this.awaitPos;
        for (this.yieldPos = 0, this.awaitPos = 0; this.type !== y.parenR;) {
          if (p ? p = !1 : this.expect(y.comma), r && this.afterTrailingComma(y.parenR, !0)) {
            c = !0;
            break;
          }
          if (this.type === y.ellipsis) {
            a = this.start, h.push(this.parseParenItem(this.parseRestBinding())), this.type === y.comma && this.raise(this.start, "Comma is not permitted after the rest element");
            break;
          }
          h.push(this.parseMaybeAssign(!1, u, this.parseParenItem));
        }
        var f = this.start,
          m = this.startLoc;
        if (this.expect(y.parenR), t && !this.canInsertSemicolon() && this.eat(y.arrow)) return this.checkPatternErrors(u, !1), this.checkYieldAwaitInDefaultParams(), this.yieldPos = l, this.awaitPos = d, this.parseParenArrowList(i, s, h);
        h.length && !c || this.unexpected(this.lastTokStart), a && this.unexpected(a), this.checkExpressionErrors(u, !0), this.yieldPos = l || this.yieldPos, this.awaitPos = d || this.awaitPos, h.length > 1 ? ((e = this.startNodeAt(n, o)).expressions = h, this.finishNodeAt(e, "SequenceExpression", f, m)) : e = h[0];
      } else e = this.parseParenExpression();
      if (this.options.preserveParens) {
        var x = this.startNodeAt(i, s);
        return x.expression = e, this.finishNode(x, "ParenthesizedExpression");
      }
      return e;
    }, lt.parseParenItem = function (t) {
      return t;
    }, lt.parseParenArrowList = function (t, e, i) {
      return this.parseArrowExpression(this.startNodeAt(t, e), i);
    };
    var dt = [];
    lt.parseNew = function () {
      this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword new");
      var t = this.startNode(),
        e = this.parseIdent(!0);
      if (this.options.ecmaVersion >= 6 && this.eat(y.dot)) {
        t.meta = e;
        var i = this.containsEsc;
        return t.property = this.parseIdent(!0), ("target" !== t.property.name || i) && this.raiseRecoverable(t.property.start, "The only valid meta property for new is new.target"), this.inNonArrowFunction() || this.raiseRecoverable(t.start, "new.target can only be used in functions"), this.finishNode(t, "MetaProperty");
      }
      var s = this.start,
        r = this.startLoc,
        a = this.type === y._import;
      return t.callee = this.parseSubscripts(this.parseExprAtom(), s, r, !0), a && "ImportExpression" === t.callee.type && this.raise(s, "Cannot use new with import()"), this.eat(y.parenL) ? t.arguments = this.parseExprList(y.parenR, this.options.ecmaVersion >= 8, !1) : t.arguments = dt, this.finishNode(t, "NewExpression");
    }, lt.parseTemplateElement = function (t) {
      var e = t.isTagged,
        i = this.startNode();
      return this.type === y.invalidTemplate ? (e || this.raiseRecoverable(this.start, "Bad escape sequence in untagged template literal"), i.value = {
        raw: this.value,
        cooked: null
      }) : i.value = {
        raw: this.input.slice(this.start, this.end).replace(/\r\n?/g, "\n"),
        cooked: this.value
      }, this.next(), i.tail = this.type === y.backQuote, this.finishNode(i, "TemplateElement");
    }, lt.parseTemplate = function (t) {
      void 0 === t && (t = {});
      var e = t.isTagged;
      void 0 === e && (e = !1);
      var i = this.startNode();
      this.next(), i.expressions = [];
      var s = this.parseTemplateElement({
        isTagged: e
      });
      for (i.quasis = [s]; !s.tail;) this.type === y.eof && this.raise(this.pos, "Unterminated template literal"), this.expect(y.dollarBraceL), i.expressions.push(this.parseExpression()), this.expect(y.braceR), i.quasis.push(s = this.parseTemplateElement({
        isTagged: e
      }));
      return this.next(), this.finishNode(i, "TemplateLiteral");
    }, lt.isAsyncProp = function (t) {
      return !t.computed && "Identifier" === t.key.type && "async" === t.key.name && (this.type === y.name || this.type === y.num || this.type === y.string || this.type === y.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type === y.star) && !k.test(this.input.slice(this.lastTokEnd, this.start));
    }, lt.parseObj = function (t, e) {
      var i = this.startNode(),
        s = !0,
        r = {};
      for (i.properties = [], this.next(); !this.eat(y.braceR);) {
        if (s) s = !1;else if (this.expect(y.comma), this.options.ecmaVersion >= 5 && this.afterTrailingComma(y.braceR)) break;
        var a = this.parseProperty(t, e);
        t || this.checkPropClash(a, r, e), i.properties.push(a);
      }
      return this.finishNode(i, t ? "ObjectPattern" : "ObjectExpression");
    }, lt.parseProperty = function (t, e) {
      var i,
        s,
        r,
        a,
        n = this.startNode();
      if (this.options.ecmaVersion >= 9 && this.eat(y.ellipsis)) return t ? (n.argument = this.parseIdent(!1), this.type === y.comma && this.raise(this.start, "Comma is not permitted after the rest element"), this.finishNode(n, "RestElement")) : (this.type === y.parenL && e && (e.parenthesizedAssign < 0 && (e.parenthesizedAssign = this.start), e.parenthesizedBind < 0 && (e.parenthesizedBind = this.start)), n.argument = this.parseMaybeAssign(!1, e), this.type === y.comma && e && e.trailingComma < 0 && (e.trailingComma = this.start), this.finishNode(n, "SpreadElement"));
      this.options.ecmaVersion >= 6 && (n.method = !1, n.shorthand = !1, (t || e) && (r = this.start, a = this.startLoc), t || (i = this.eat(y.star)));
      var o = this.containsEsc;
      return this.parsePropertyName(n), !t && !o && this.options.ecmaVersion >= 8 && !i && this.isAsyncProp(n) ? (s = !0, i = this.options.ecmaVersion >= 9 && this.eat(y.star), this.parsePropertyName(n, e)) : s = !1, this.parsePropertyValue(n, t, i, s, r, a, e, o), this.finishNode(n, "Property");
    }, lt.parsePropertyValue = function (t, e, i, s, r, a, n, o) {
      if ((i || s) && this.type === y.colon && this.unexpected(), this.eat(y.colon)) t.value = e ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(!1, n), t.kind = "init";else if (this.options.ecmaVersion >= 6 && this.type === y.parenL) e && this.unexpected(), t.kind = "init", t.method = !0, t.value = this.parseMethod(i, s);else if (e || o || !(this.options.ecmaVersion >= 5) || t.computed || "Identifier" !== t.key.type || "get" !== t.key.name && "set" !== t.key.name || this.type === y.comma || this.type === y.braceR) this.options.ecmaVersion >= 6 && !t.computed && "Identifier" === t.key.type ? ((i || s) && this.unexpected(), this.checkUnreserved(t.key), "await" !== t.key.name || this.awaitIdentPos || (this.awaitIdentPos = r), t.kind = "init", e ? t.value = this.parseMaybeDefault(r, a, t.key) : this.type === y.eq && n ? (n.shorthandAssign < 0 && (n.shorthandAssign = this.start), t.value = this.parseMaybeDefault(r, a, t.key)) : t.value = t.key, t.shorthand = !0) : this.unexpected();else {
        (i || s) && this.unexpected(), t.kind = t.key.name, this.parsePropertyName(t), t.value = this.parseMethod(!1);
        var h = "get" === t.kind ? 0 : 1;
        if (t.value.params.length !== h) {
          var p = t.value.start;
          "get" === t.kind ? this.raiseRecoverable(p, "getter should have no params") : this.raiseRecoverable(p, "setter should have exactly one param");
        } else "set" === t.kind && "RestElement" === t.value.params[0].type && this.raiseRecoverable(t.value.params[0].start, "Setter cannot use rest params");
      }
    }, lt.parsePropertyName = function (t) {
      if (this.options.ecmaVersion >= 6) {
        if (this.eat(y.bracketL)) return t.computed = !0, t.key = this.parseMaybeAssign(), this.expect(y.bracketR), t.key;
        t.computed = !1;
      }
      return t.key = this.type === y.num || this.type === y.string ? this.parseExprAtom() : this.parseIdent("never" !== this.options.allowReserved);
    }, lt.initFunction = function (t) {
      t.id = null, this.options.ecmaVersion >= 6 && (t.generator = t.expression = !1), this.options.ecmaVersion >= 8 && (t.async = !1);
    }, lt.parseMethod = function (t, e, i) {
      var s = this.startNode(),
        r = this.yieldPos,
        a = this.awaitPos,
        n = this.awaitIdentPos;
      return this.initFunction(s), this.options.ecmaVersion >= 6 && (s.generator = t), this.options.ecmaVersion >= 8 && (s.async = !!e), this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, this.enterScope(z(e, s.generator) | j | (i ? W : 0)), this.expect(y.parenL), s.params = this.parseBindingList(y.parenR, !1, this.options.ecmaVersion >= 8), this.checkYieldAwaitInDefaultParams(), this.parseFunctionBody(s, !1, !0), this.yieldPos = r, this.awaitPos = a, this.awaitIdentPos = n, this.finishNode(s, "FunctionExpression");
    }, lt.parseArrowExpression = function (t, e, i) {
      var s = this.yieldPos,
        r = this.awaitPos,
        a = this.awaitIdentPos;
      return this.enterScope(z(i, !1) | G), this.initFunction(t), this.options.ecmaVersion >= 8 && (t.async = !!i), this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, t.params = this.toAssignableList(e, !0), this.parseFunctionBody(t, !0, !1), this.yieldPos = s, this.awaitPos = r, this.awaitIdentPos = a, this.finishNode(t, "ArrowFunctionExpression");
    }, lt.parseFunctionBody = function (t, e, i) {
      var s = e && this.type !== y.braceL,
        r = this.strict,
        a = !1;
      if (s) t.body = this.parseMaybeAssign(), t.expression = !0, this.checkParams(t, !1);else {
        var n = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(t.params);
        r && !n || (a = this.strictDirective(this.end)) && n && this.raiseRecoverable(t.start, "Illegal 'use strict' directive in function with non-simple parameter list");
        var o = this.labels;
        this.labels = [], a && (this.strict = !0), this.checkParams(t, !r && !a && !e && !i && this.isSimpleParamList(t.params)), t.body = this.parseBlock(!1), t.expression = !1, this.adaptDirectivePrologue(t.body.body), this.labels = o;
      }
      this.exitScope(), this.strict && t.id && this.checkLVal(t.id, $), this.strict = r;
    }, lt.isSimpleParamList = function (t) {
      for (var e = 0, i = t; e < i.length; e += 1) {
        if ("Identifier" !== i[e].type) return !1;
      }
      return !0;
    }, lt.checkParams = function (t, e) {
      for (var i = {}, s = 0, r = t.params; s < r.length; s += 1) {
        var a = r[s];
        this.checkLVal(a, K, e ? null : i);
      }
    }, lt.parseExprList = function (t, e, i, s) {
      for (var r = [], a = !0; !this.eat(t);) {
        if (a) a = !1;else if (this.expect(y.comma), e && this.afterTrailingComma(t)) break;
        var n = void 0;
        i && this.type === y.comma ? n = null : this.type === y.ellipsis ? (n = this.parseSpread(s), s && this.type === y.comma && s.trailingComma < 0 && (s.trailingComma = this.start)) : n = this.parseMaybeAssign(!1, s), r.push(n);
      }
      return r;
    }, lt.checkUnreserved = function (t) {
      var e = t.start,
        i = t.end,
        s = t.name;
      (this.inGenerator && "yield" === s && this.raiseRecoverable(e, "Cannot use 'yield' as identifier inside a generator"), this.inAsync && "await" === s && this.raiseRecoverable(e, "Cannot use 'await' as identifier inside an async function"), this.keywords.test(s) && this.raise(e, "Unexpected keyword '" + s + "'"), this.options.ecmaVersion < 6 && -1 !== this.input.slice(e, i).indexOf("\\")) || (this.strict ? this.reservedWordsStrict : this.reservedWords).test(s) && (this.inAsync || "await" !== s || this.raiseRecoverable(e, "Cannot use keyword 'await' outside an async function"), this.raiseRecoverable(e, "The keyword '" + s + "' is reserved"));
    }, lt.parseIdent = function (t, e) {
      var i = this.startNode();
      return this.type === y.name ? i.name = this.value : this.type.keyword ? (i.name = this.type.keyword, "class" !== i.name && "function" !== i.name || this.lastTokEnd === this.lastTokStart + 1 && 46 === this.input.charCodeAt(this.lastTokStart) || this.context.pop()) : this.unexpected(), this.next(!!t), this.finishNode(i, "Identifier"), t || (this.checkUnreserved(i), "await" !== i.name || this.awaitIdentPos || (this.awaitIdentPos = i.start)), i;
    }, lt.parseYield = function (t) {
      this.yieldPos || (this.yieldPos = this.start);
      var e = this.startNode();
      return this.next(), this.type === y.semi || this.canInsertSemicolon() || this.type !== y.star && !this.type.startsExpr ? (e.delegate = !1, e.argument = null) : (e.delegate = this.eat(y.star), e.argument = this.parseMaybeAssign(t)), this.finishNode(e, "YieldExpression");
    }, lt.parseAwait = function () {
      this.awaitPos || (this.awaitPos = this.start);
      var t = this.startNode();
      return this.next(), t.argument = this.parseMaybeUnary(null, !1), this.finishNode(t, "AwaitExpression");
    };
    var ft = J.prototype;
    ft.raise = function (t, e) {
      var i = N(this.input, t);
      e += " (" + i.line + ":" + i.column + ")";
      var s = new SyntaxError(e);
      throw s.pos = t, s.loc = i, s.raisedAt = this.pos, s;
    }, ft.raiseRecoverable = ft.raise, ft.curPosition = function () {
      if (this.options.locations) return new L(this.curLine, this.pos - this.lineStart);
    };
    var mt = J.prototype,
      xt = function xt(t) {
        this.flags = t, this.var = [], this.lexical = [], this.functions = [];
      };
    mt.enterScope = function (t) {
      this.scopeStack.push(new xt(t));
    }, mt.exitScope = function () {
      this.scopeStack.pop();
    }, mt.treatFunctionsAsVarInScope = function (t) {
      return t.flags & D || !this.inModule && t.flags & M;
    }, mt.declareName = function (t, e, i) {
      var s = !1;
      if (e === X) {
        var r = this.currentScope();
        s = r.lexical.indexOf(t) > -1 || r.functions.indexOf(t) > -1 || r.var.indexOf(t) > -1, r.lexical.push(t), this.inModule && r.flags & M && delete this.undefinedExports[t];
      } else if (e === Z) {
        this.currentScope().lexical.push(t);
      } else if (e === Y) {
        var a = this.currentScope();
        s = this.treatFunctionsAsVar ? a.lexical.indexOf(t) > -1 : a.lexical.indexOf(t) > -1 || a.var.indexOf(t) > -1, a.functions.push(t);
      } else for (var n = this.scopeStack.length - 1; n >= 0; --n) {
        var o = this.scopeStack[n];
        if (o.lexical.indexOf(t) > -1 && !(o.flags & H && o.lexical[0] === t) || !this.treatFunctionsAsVarInScope(o) && o.functions.indexOf(t) > -1) {
          s = !0;
          break;
        }
        if (o.var.push(t), this.inModule && o.flags & M && delete this.undefinedExports[t], o.flags & F) break;
      }
      s && this.raiseRecoverable(i, "Identifier '" + t + "' has already been declared");
    }, mt.checkLocalExport = function (t) {
      -1 === this.scopeStack[0].lexical.indexOf(t.name) && -1 === this.scopeStack[0].var.indexOf(t.name) && (this.undefinedExports[t.name] = t);
    }, mt.currentScope = function () {
      return this.scopeStack[this.scopeStack.length - 1];
    }, mt.currentVarScope = function () {
      for (var t = this.scopeStack.length - 1;; t--) {
        var e = this.scopeStack[t];
        if (e.flags & F) return e;
      }
    }, mt.currentThisScope = function () {
      for (var t = this.scopeStack.length - 1;; t--) {
        var e = this.scopeStack[t];
        if (e.flags & F && !(e.flags & G)) return e;
      }
    };
    var gt = function gt(t, e, i) {
      this.type = "", this.start = e, this.end = 0, t.options.locations && (this.loc = new V(t, i)), t.options.directSourceFile && (this.sourceFile = t.options.directSourceFile), t.options.ranges && (this.range = [e, 0]);
    };
    exports.Node = gt;
    var vt = J.prototype;
    function yt(t, e, i, s) {
      return t.type = e, t.end = i, this.options.locations && (t.loc.end = s), this.options.ranges && (t.range[1] = i), t;
    }
    vt.startNode = function () {
      return new gt(this, this.start, this.startLoc);
    }, vt.startNodeAt = function (t, e) {
      return new gt(this, t, e);
    }, vt.finishNode = function (t, e) {
      return yt.call(this, t, e, this.lastTokEnd, this.lastTokEndLoc);
    }, vt.finishNodeAt = function (t, e, i, s) {
      return yt.call(this, t, e, i, s);
    };
    var kt = function kt(t, e, i, s, r) {
      this.token = t, this.isExpr = !!e, this.preserveSpace = !!i, this.override = s, this.generator = !!r;
    };
    exports.TokContext = kt;
    var _t = {
      b_stat: new kt("{", !1),
      b_expr: new kt("{", !0),
      b_tmpl: new kt("${", !1),
      p_stat: new kt("(", !1),
      p_expr: new kt("(", !0),
      q_tmpl: new kt("`", !0, !0, function (t) {
        return t.tryReadTemplateToken();
      }),
      f_stat: new kt("function", !1),
      f_expr: new kt("function", !0),
      f_expr_gen: new kt("function", !0, !1, null, !0),
      f_gen: new kt("function", !1, !1, null, !0)
    };
    exports.tokContexts = _t;
    var bt = J.prototype;
    bt.initialContext = function () {
      return [_t.b_stat];
    }, bt.braceIsBlock = function (t) {
      var e = this.curContext();
      return e === _t.f_expr || e === _t.f_stat || (t !== y.colon || e !== _t.b_stat && e !== _t.b_expr ? t === y._return || t === y.name && this.exprAllowed ? k.test(this.input.slice(this.lastTokEnd, this.start)) : t === y._else || t === y.semi || t === y.eof || t === y.parenR || t === y.arrow || (t === y.braceL ? e === _t.b_stat : t !== y._var && t !== y._const && t !== y.name && !this.exprAllowed) : !e.isExpr);
    }, bt.inGeneratorContext = function () {
      for (var t = this.context.length - 1; t >= 1; t--) {
        var e = this.context[t];
        if ("function" === e.token) return e.generator;
      }
      return !1;
    }, bt.updateContext = function (t) {
      var e,
        i = this.type;
      i.keyword && t === y.dot ? this.exprAllowed = !1 : (e = i.updateContext) ? e.call(this, t) : this.exprAllowed = i.beforeExpr;
    }, y.parenR.updateContext = y.braceR.updateContext = function () {
      if (1 !== this.context.length) {
        var t = this.context.pop();
        t === _t.b_stat && "function" === this.curContext().token && (t = this.context.pop()), this.exprAllowed = !t.isExpr;
      } else this.exprAllowed = !0;
    }, y.braceL.updateContext = function (t) {
      this.context.push(this.braceIsBlock(t) ? _t.b_stat : _t.b_expr), this.exprAllowed = !0;
    }, y.dollarBraceL.updateContext = function () {
      this.context.push(_t.b_tmpl), this.exprAllowed = !0;
    }, y.parenL.updateContext = function (t) {
      var e = t === y._if || t === y._for || t === y._with || t === y._while;
      this.context.push(e ? _t.p_stat : _t.p_expr), this.exprAllowed = !0;
    }, y.incDec.updateContext = function () {}, y._function.updateContext = y._class.updateContext = function (t) {
      !t.beforeExpr || t === y.semi || t === y._else || t === y._return && k.test(this.input.slice(this.lastTokEnd, this.start)) || (t === y.colon || t === y.braceL) && this.curContext() === _t.b_stat ? this.context.push(_t.f_stat) : this.context.push(_t.f_expr), this.exprAllowed = !1;
    }, y.backQuote.updateContext = function () {
      this.curContext() === _t.q_tmpl ? this.context.pop() : this.context.push(_t.q_tmpl), this.exprAllowed = !1;
    }, y.star.updateContext = function (t) {
      if (t === y._function) {
        var e = this.context.length - 1;
        this.context[e] === _t.f_expr ? this.context[e] = _t.f_expr_gen : this.context[e] = _t.f_gen;
      }
      this.exprAllowed = !0;
    }, y.name.updateContext = function (t) {
      var e = !1;
      this.options.ecmaVersion >= 6 && t !== y.dot && ("of" === this.value && !this.exprAllowed || "yield" === this.value && this.inGeneratorContext()) && (e = !0), this.exprAllowed = e;
    };
    var St = "ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS",
      wt = St + " Extended_Pictographic",
      Ct = wt,
      Et = {
        9: St,
        10: wt,
        11: Ct
      },
      At = "Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu",
      It = "Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb",
      Pt = It + " Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd",
      Tt = Pt + " Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho",
      Lt = {
        9: It,
        10: Pt,
        11: Tt
      },
      Vt = {};
    function Nt(t) {
      var e = Vt[t] = {
        binary: T(Et[t] + " " + At),
        nonBinary: {
          General_Category: T(At),
          Script: T(Lt[t])
        }
      };
      e.nonBinary.Script_Extensions = e.nonBinary.Script, e.nonBinary.gc = e.nonBinary.General_Category, e.nonBinary.sc = e.nonBinary.Script, e.nonBinary.scx = e.nonBinary.Script_Extensions;
    }
    Nt(9), Nt(10), Nt(11);
    var Rt = J.prototype,
      Bt = function Bt(t) {
        this.parser = t, this.validFlags = "gim" + (t.options.ecmaVersion >= 6 ? "uy" : "") + (t.options.ecmaVersion >= 9 ? "s" : ""), this.unicodeProperties = Vt[t.options.ecmaVersion >= 11 ? 11 : t.options.ecmaVersion], this.source = "", this.flags = "", this.start = 0, this.switchU = !1, this.switchN = !1, this.pos = 0, this.lastIntValue = 0, this.lastStringValue = "", this.lastAssertionIsQuantifiable = !1, this.numCapturingParens = 0, this.maxBackReference = 0, this.groupNames = [], this.backReferenceNames = [];
      };
    function Ot(t) {
      return t <= 65535 ? String.fromCharCode(t) : (t -= 65536, String.fromCharCode(55296 + (t >> 10), 56320 + (1023 & t)));
    }
    function Mt(t) {
      return 36 === t || t >= 40 && t <= 43 || 46 === t || 63 === t || t >= 91 && t <= 94 || t >= 123 && t <= 125;
    }
    function Dt(t) {
      return u(t, !0) || 36 === t || 95 === t;
    }
    function Ft(t) {
      return l(t, !0) || 36 === t || 95 === t || 8204 === t || 8205 === t;
    }
    function Ut(t) {
      return t >= 65 && t <= 90 || t >= 97 && t <= 122;
    }
    function qt(t) {
      return t >= 0 && t <= 1114111;
    }
    function Gt(t) {
      return 100 === t || 68 === t || 115 === t || 83 === t || 119 === t || 87 === t;
    }
    function Ht(t) {
      return Ut(t) || 95 === t;
    }
    function jt(t) {
      return Ht(t) || Wt(t);
    }
    function Wt(t) {
      return t >= 48 && t <= 57;
    }
    function zt(t) {
      return t >= 48 && t <= 57 || t >= 65 && t <= 70 || t >= 97 && t <= 102;
    }
    function Qt(t) {
      return t >= 65 && t <= 70 ? t - 65 + 10 : t >= 97 && t <= 102 ? t - 97 + 10 : t - 48;
    }
    function Kt(t) {
      return t >= 48 && t <= 55;
    }
    Bt.prototype.reset = function (t, e, i) {
      var s = -1 !== i.indexOf("u");
      this.start = 0 | t, this.source = e + "", this.flags = i, this.switchU = s && this.parser.options.ecmaVersion >= 6, this.switchN = s && this.parser.options.ecmaVersion >= 9;
    }, Bt.prototype.raise = function (t) {
      this.parser.raiseRecoverable(this.start, "Invalid regular expression: /" + this.source + "/: " + t);
    }, Bt.prototype.at = function (t) {
      var e = this.source,
        i = e.length;
      if (t >= i) return -1;
      var s = e.charCodeAt(t);
      if (!this.switchU || s <= 55295 || s >= 57344 || t + 1 >= i) return s;
      var r = e.charCodeAt(t + 1);
      return r >= 56320 && r <= 57343 ? (s << 10) + r - 56613888 : s;
    }, Bt.prototype.nextIndex = function (t) {
      var e = this.source,
        i = e.length;
      if (t >= i) return i;
      var s,
        r = e.charCodeAt(t);
      return !this.switchU || r <= 55295 || r >= 57344 || t + 1 >= i || (s = e.charCodeAt(t + 1)) < 56320 || s > 57343 ? t + 1 : t + 2;
    }, Bt.prototype.current = function () {
      return this.at(this.pos);
    }, Bt.prototype.lookahead = function () {
      return this.at(this.nextIndex(this.pos));
    }, Bt.prototype.advance = function () {
      this.pos = this.nextIndex(this.pos);
    }, Bt.prototype.eat = function (t) {
      return this.current() === t && (this.advance(), !0);
    }, Rt.validateRegExpFlags = function (t) {
      for (var e = t.validFlags, i = t.flags, s = 0; s < i.length; s++) {
        var r = i.charAt(s);
        -1 === e.indexOf(r) && this.raise(t.start, "Invalid regular expression flag"), i.indexOf(r, s + 1) > -1 && this.raise(t.start, "Duplicate regular expression flag");
      }
    }, Rt.validateRegExpPattern = function (t) {
      this.regexp_pattern(t), !t.switchN && this.options.ecmaVersion >= 9 && t.groupNames.length > 0 && (t.switchN = !0, this.regexp_pattern(t));
    }, Rt.regexp_pattern = function (t) {
      t.pos = 0, t.lastIntValue = 0, t.lastStringValue = "", t.lastAssertionIsQuantifiable = !1, t.numCapturingParens = 0, t.maxBackReference = 0, t.groupNames.length = 0, t.backReferenceNames.length = 0, this.regexp_disjunction(t), t.pos !== t.source.length && (t.eat(41) && t.raise("Unmatched ')'"), (t.eat(93) || t.eat(125)) && t.raise("Lone quantifier brackets")), t.maxBackReference > t.numCapturingParens && t.raise("Invalid escape");
      for (var e = 0, i = t.backReferenceNames; e < i.length; e += 1) {
        var s = i[e];
        -1 === t.groupNames.indexOf(s) && t.raise("Invalid named capture referenced");
      }
    }, Rt.regexp_disjunction = function (t) {
      for (this.regexp_alternative(t); t.eat(124);) this.regexp_alternative(t);
      this.regexp_eatQuantifier(t, !0) && t.raise("Nothing to repeat"), t.eat(123) && t.raise("Lone quantifier brackets");
    }, Rt.regexp_alternative = function (t) {
      for (; t.pos < t.source.length && this.regexp_eatTerm(t););
    }, Rt.regexp_eatTerm = function (t) {
      return this.regexp_eatAssertion(t) ? (t.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(t) && t.switchU && t.raise("Invalid quantifier"), !0) : !(t.switchU ? !this.regexp_eatAtom(t) : !this.regexp_eatExtendedAtom(t)) && (this.regexp_eatQuantifier(t), !0);
    }, Rt.regexp_eatAssertion = function (t) {
      var e = t.pos;
      if (t.lastAssertionIsQuantifiable = !1, t.eat(94) || t.eat(36)) return !0;
      if (t.eat(92)) {
        if (t.eat(66) || t.eat(98)) return !0;
        t.pos = e;
      }
      if (t.eat(40) && t.eat(63)) {
        var i = !1;
        if (this.options.ecmaVersion >= 9 && (i = t.eat(60)), t.eat(61) || t.eat(33)) return this.regexp_disjunction(t), t.eat(41) || t.raise("Unterminated group"), t.lastAssertionIsQuantifiable = !i, !0;
      }
      return t.pos = e, !1;
    }, Rt.regexp_eatQuantifier = function (t, e) {
      return void 0 === e && (e = !1), !!this.regexp_eatQuantifierPrefix(t, e) && (t.eat(63), !0);
    }, Rt.regexp_eatQuantifierPrefix = function (t, e) {
      return t.eat(42) || t.eat(43) || t.eat(63) || this.regexp_eatBracedQuantifier(t, e);
    }, Rt.regexp_eatBracedQuantifier = function (t, e) {
      var i = t.pos;
      if (t.eat(123)) {
        var s = 0,
          r = -1;
        if (this.regexp_eatDecimalDigits(t) && (s = t.lastIntValue, t.eat(44) && this.regexp_eatDecimalDigits(t) && (r = t.lastIntValue), t.eat(125))) return -1 !== r && r < s && !e && t.raise("numbers out of order in {} quantifier"), !0;
        t.switchU && !e && t.raise("Incomplete quantifier"), t.pos = i;
      }
      return !1;
    }, Rt.regexp_eatAtom = function (t) {
      return this.regexp_eatPatternCharacters(t) || t.eat(46) || this.regexp_eatReverseSolidusAtomEscape(t) || this.regexp_eatCharacterClass(t) || this.regexp_eatUncapturingGroup(t) || this.regexp_eatCapturingGroup(t);
    }, Rt.regexp_eatReverseSolidusAtomEscape = function (t) {
      var e = t.pos;
      if (t.eat(92)) {
        if (this.regexp_eatAtomEscape(t)) return !0;
        t.pos = e;
      }
      return !1;
    }, Rt.regexp_eatUncapturingGroup = function (t) {
      var e = t.pos;
      if (t.eat(40)) {
        if (t.eat(63) && t.eat(58)) {
          if (this.regexp_disjunction(t), t.eat(41)) return !0;
          t.raise("Unterminated group");
        }
        t.pos = e;
      }
      return !1;
    }, Rt.regexp_eatCapturingGroup = function (t) {
      if (t.eat(40)) {
        if (this.options.ecmaVersion >= 9 ? this.regexp_groupSpecifier(t) : 63 === t.current() && t.raise("Invalid group"), this.regexp_disjunction(t), t.eat(41)) return t.numCapturingParens += 1, !0;
        t.raise("Unterminated group");
      }
      return !1;
    }, Rt.regexp_eatExtendedAtom = function (t) {
      return t.eat(46) || this.regexp_eatReverseSolidusAtomEscape(t) || this.regexp_eatCharacterClass(t) || this.regexp_eatUncapturingGroup(t) || this.regexp_eatCapturingGroup(t) || this.regexp_eatInvalidBracedQuantifier(t) || this.regexp_eatExtendedPatternCharacter(t);
    }, Rt.regexp_eatInvalidBracedQuantifier = function (t) {
      return this.regexp_eatBracedQuantifier(t, !0) && t.raise("Nothing to repeat"), !1;
    }, Rt.regexp_eatSyntaxCharacter = function (t) {
      var e = t.current();
      return !!Mt(e) && (t.lastIntValue = e, t.advance(), !0);
    }, Rt.regexp_eatPatternCharacters = function (t) {
      for (var e = t.pos, i = 0; -1 !== (i = t.current()) && !Mt(i);) t.advance();
      return t.pos !== e;
    }, Rt.regexp_eatExtendedPatternCharacter = function (t) {
      var e = t.current();
      return !(-1 === e || 36 === e || e >= 40 && e <= 43 || 46 === e || 63 === e || 91 === e || 94 === e || 124 === e) && (t.advance(), !0);
    }, Rt.regexp_groupSpecifier = function (t) {
      if (t.eat(63)) {
        if (this.regexp_eatGroupName(t)) return -1 !== t.groupNames.indexOf(t.lastStringValue) && t.raise("Duplicate capture group name"), void t.groupNames.push(t.lastStringValue);
        t.raise("Invalid group");
      }
    }, Rt.regexp_eatGroupName = function (t) {
      if (t.lastStringValue = "", t.eat(60)) {
        if (this.regexp_eatRegExpIdentifierName(t) && t.eat(62)) return !0;
        t.raise("Invalid capture group name");
      }
      return !1;
    }, Rt.regexp_eatRegExpIdentifierName = function (t) {
      if (t.lastStringValue = "", this.regexp_eatRegExpIdentifierStart(t)) {
        for (t.lastStringValue += Ot(t.lastIntValue); this.regexp_eatRegExpIdentifierPart(t);) t.lastStringValue += Ot(t.lastIntValue);
        return !0;
      }
      return !1;
    }, Rt.regexp_eatRegExpIdentifierStart = function (t) {
      var e = t.pos,
        i = t.current();
      return t.advance(), 92 === i && this.regexp_eatRegExpUnicodeEscapeSequence(t) && (i = t.lastIntValue), Dt(i) ? (t.lastIntValue = i, !0) : (t.pos = e, !1);
    }, Rt.regexp_eatRegExpIdentifierPart = function (t) {
      var e = t.pos,
        i = t.current();
      return t.advance(), 92 === i && this.regexp_eatRegExpUnicodeEscapeSequence(t) && (i = t.lastIntValue), Ft(i) ? (t.lastIntValue = i, !0) : (t.pos = e, !1);
    }, Rt.regexp_eatAtomEscape = function (t) {
      return !!(this.regexp_eatBackReference(t) || this.regexp_eatCharacterClassEscape(t) || this.regexp_eatCharacterEscape(t) || t.switchN && this.regexp_eatKGroupName(t)) || (t.switchU && (99 === t.current() && t.raise("Invalid unicode escape"), t.raise("Invalid escape")), !1);
    }, Rt.regexp_eatBackReference = function (t) {
      var e = t.pos;
      if (this.regexp_eatDecimalEscape(t)) {
        var i = t.lastIntValue;
        if (t.switchU) return i > t.maxBackReference && (t.maxBackReference = i), !0;
        if (i <= t.numCapturingParens) return !0;
        t.pos = e;
      }
      return !1;
    }, Rt.regexp_eatKGroupName = function (t) {
      if (t.eat(107)) {
        if (this.regexp_eatGroupName(t)) return t.backReferenceNames.push(t.lastStringValue), !0;
        t.raise("Invalid named reference");
      }
      return !1;
    }, Rt.regexp_eatCharacterEscape = function (t) {
      return this.regexp_eatControlEscape(t) || this.regexp_eatCControlLetter(t) || this.regexp_eatZero(t) || this.regexp_eatHexEscapeSequence(t) || this.regexp_eatRegExpUnicodeEscapeSequence(t) || !t.switchU && this.regexp_eatLegacyOctalEscapeSequence(t) || this.regexp_eatIdentityEscape(t);
    }, Rt.regexp_eatCControlLetter = function (t) {
      var e = t.pos;
      if (t.eat(99)) {
        if (this.regexp_eatControlLetter(t)) return !0;
        t.pos = e;
      }
      return !1;
    }, Rt.regexp_eatZero = function (t) {
      return 48 === t.current() && !Wt(t.lookahead()) && (t.lastIntValue = 0, t.advance(), !0);
    }, Rt.regexp_eatControlEscape = function (t) {
      var e = t.current();
      return 116 === e ? (t.lastIntValue = 9, t.advance(), !0) : 110 === e ? (t.lastIntValue = 10, t.advance(), !0) : 118 === e ? (t.lastIntValue = 11, t.advance(), !0) : 102 === e ? (t.lastIntValue = 12, t.advance(), !0) : 114 === e && (t.lastIntValue = 13, t.advance(), !0);
    }, Rt.regexp_eatControlLetter = function (t) {
      var e = t.current();
      return !!Ut(e) && (t.lastIntValue = e % 32, t.advance(), !0);
    }, Rt.regexp_eatRegExpUnicodeEscapeSequence = function (t) {
      var e = t.pos;
      if (t.eat(117)) {
        if (this.regexp_eatFixedHexDigits(t, 4)) {
          var i = t.lastIntValue;
          if (t.switchU && i >= 55296 && i <= 56319) {
            var s = t.pos;
            if (t.eat(92) && t.eat(117) && this.regexp_eatFixedHexDigits(t, 4)) {
              var r = t.lastIntValue;
              if (r >= 56320 && r <= 57343) return t.lastIntValue = 1024 * (i - 55296) + (r - 56320) + 65536, !0;
            }
            t.pos = s, t.lastIntValue = i;
          }
          return !0;
        }
        if (t.switchU && t.eat(123) && this.regexp_eatHexDigits(t) && t.eat(125) && qt(t.lastIntValue)) return !0;
        t.switchU && t.raise("Invalid unicode escape"), t.pos = e;
      }
      return !1;
    }, Rt.regexp_eatIdentityEscape = function (t) {
      if (t.switchU) return !!this.regexp_eatSyntaxCharacter(t) || !!t.eat(47) && (t.lastIntValue = 47, !0);
      var e = t.current();
      return !(99 === e || t.switchN && 107 === e) && (t.lastIntValue = e, t.advance(), !0);
    }, Rt.regexp_eatDecimalEscape = function (t) {
      t.lastIntValue = 0;
      var e = t.current();
      if (e >= 49 && e <= 57) {
        do {
          t.lastIntValue = 10 * t.lastIntValue + (e - 48), t.advance();
        } while ((e = t.current()) >= 48 && e <= 57);
        return !0;
      }
      return !1;
    }, Rt.regexp_eatCharacterClassEscape = function (t) {
      var e = t.current();
      if (Gt(e)) return t.lastIntValue = -1, t.advance(), !0;
      if (t.switchU && this.options.ecmaVersion >= 9 && (80 === e || 112 === e)) {
        if (t.lastIntValue = -1, t.advance(), t.eat(123) && this.regexp_eatUnicodePropertyValueExpression(t) && t.eat(125)) return !0;
        t.raise("Invalid property name");
      }
      return !1;
    }, Rt.regexp_eatUnicodePropertyValueExpression = function (t) {
      var e = t.pos;
      if (this.regexp_eatUnicodePropertyName(t) && t.eat(61)) {
        var i = t.lastStringValue;
        if (this.regexp_eatUnicodePropertyValue(t)) {
          var s = t.lastStringValue;
          return this.regexp_validateUnicodePropertyNameAndValue(t, i, s), !0;
        }
      }
      if (t.pos = e, this.regexp_eatLoneUnicodePropertyNameOrValue(t)) {
        var r = t.lastStringValue;
        return this.regexp_validateUnicodePropertyNameOrValue(t, r), !0;
      }
      return !1;
    }, Rt.regexp_validateUnicodePropertyNameAndValue = function (t, e, i) {
      I(t.unicodeProperties.nonBinary, e) || t.raise("Invalid property name"), t.unicodeProperties.nonBinary[e].test(i) || t.raise("Invalid property value");
    }, Rt.regexp_validateUnicodePropertyNameOrValue = function (t, e) {
      t.unicodeProperties.binary.test(e) || t.raise("Invalid property name");
    }, Rt.regexp_eatUnicodePropertyName = function (t) {
      var e = 0;
      for (t.lastStringValue = ""; Ht(e = t.current());) t.lastStringValue += Ot(e), t.advance();
      return "" !== t.lastStringValue;
    }, Rt.regexp_eatUnicodePropertyValue = function (t) {
      var e = 0;
      for (t.lastStringValue = ""; jt(e = t.current());) t.lastStringValue += Ot(e), t.advance();
      return "" !== t.lastStringValue;
    }, Rt.regexp_eatLoneUnicodePropertyNameOrValue = function (t) {
      return this.regexp_eatUnicodePropertyValue(t);
    }, Rt.regexp_eatCharacterClass = function (t) {
      if (t.eat(91)) {
        if (t.eat(94), this.regexp_classRanges(t), t.eat(93)) return !0;
        t.raise("Unterminated character class");
      }
      return !1;
    }, Rt.regexp_classRanges = function (t) {
      for (; this.regexp_eatClassAtom(t);) {
        var e = t.lastIntValue;
        if (t.eat(45) && this.regexp_eatClassAtom(t)) {
          var i = t.lastIntValue;
          !t.switchU || -1 !== e && -1 !== i || t.raise("Invalid character class"), -1 !== e && -1 !== i && e > i && t.raise("Range out of order in character class");
        }
      }
    }, Rt.regexp_eatClassAtom = function (t) {
      var e = t.pos;
      if (t.eat(92)) {
        if (this.regexp_eatClassEscape(t)) return !0;
        if (t.switchU) {
          var i = t.current();
          (99 === i || Kt(i)) && t.raise("Invalid class escape"), t.raise("Invalid escape");
        }
        t.pos = e;
      }
      var s = t.current();
      return 93 !== s && (t.lastIntValue = s, t.advance(), !0);
    }, Rt.regexp_eatClassEscape = function (t) {
      var e = t.pos;
      if (t.eat(98)) return t.lastIntValue = 8, !0;
      if (t.switchU && t.eat(45)) return t.lastIntValue = 45, !0;
      if (!t.switchU && t.eat(99)) {
        if (this.regexp_eatClassControlLetter(t)) return !0;
        t.pos = e;
      }
      return this.regexp_eatCharacterClassEscape(t) || this.regexp_eatCharacterEscape(t);
    }, Rt.regexp_eatClassControlLetter = function (t) {
      var e = t.current();
      return !(!Wt(e) && 95 !== e) && (t.lastIntValue = e % 32, t.advance(), !0);
    }, Rt.regexp_eatHexEscapeSequence = function (t) {
      var e = t.pos;
      if (t.eat(120)) {
        if (this.regexp_eatFixedHexDigits(t, 2)) return !0;
        t.switchU && t.raise("Invalid escape"), t.pos = e;
      }
      return !1;
    }, Rt.regexp_eatDecimalDigits = function (t) {
      var e = t.pos,
        i = 0;
      for (t.lastIntValue = 0; Wt(i = t.current());) t.lastIntValue = 10 * t.lastIntValue + (i - 48), t.advance();
      return t.pos !== e;
    }, Rt.regexp_eatHexDigits = function (t) {
      var e = t.pos,
        i = 0;
      for (t.lastIntValue = 0; zt(i = t.current());) t.lastIntValue = 16 * t.lastIntValue + Qt(i), t.advance();
      return t.pos !== e;
    }, Rt.regexp_eatLegacyOctalEscapeSequence = function (t) {
      if (this.regexp_eatOctalDigit(t)) {
        var e = t.lastIntValue;
        if (this.regexp_eatOctalDigit(t)) {
          var i = t.lastIntValue;
          e <= 3 && this.regexp_eatOctalDigit(t) ? t.lastIntValue = 64 * e + 8 * i + t.lastIntValue : t.lastIntValue = 8 * e + i;
        } else t.lastIntValue = e;
        return !0;
      }
      return !1;
    }, Rt.regexp_eatOctalDigit = function (t) {
      var e = t.current();
      return Kt(e) ? (t.lastIntValue = e - 48, t.advance(), !0) : (t.lastIntValue = 0, !1);
    }, Rt.regexp_eatFixedHexDigits = function (t, e) {
      var i = t.pos;
      t.lastIntValue = 0;
      for (var s = 0; s < e; ++s) {
        var r = t.current();
        if (!zt(r)) return t.pos = i, !1;
        t.lastIntValue = 16 * t.lastIntValue + Qt(r), t.advance();
      }
      return !0;
    };
    var Xt = function Xt(t) {
      this.type = t.type, this.value = t.value, this.start = t.start, this.end = t.end, t.options.locations && (this.loc = new V(t, t.startLoc, t.endLoc)), t.options.ranges && (this.range = [t.start, t.end]);
    };
    exports.Token = Xt;
    var Yt = J.prototype;
    function Zt(t) {
      return t <= 65535 ? String.fromCharCode(t) : (t -= 65536, String.fromCharCode(55296 + (t >> 10), 56320 + (1023 & t)));
    }
    Yt.next = function (t) {
      !t && this.type.keyword && this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword " + this.type.keyword), this.options.onToken && this.options.onToken(new Xt(this)), this.lastTokEnd = this.end, this.lastTokStart = this.start, this.lastTokEndLoc = this.endLoc, this.lastTokStartLoc = this.startLoc, this.nextToken();
    }, Yt.getToken = function () {
      return this.next(), new Xt(this);
    }, "undefined" != typeof Symbol && (Yt[Symbol.iterator] = function () {
      var t = this;
      return {
        next: function next() {
          var e = t.getToken();
          return {
            done: e.type === y.eof,
            value: e
          };
        }
      };
    }), Yt.curContext = function () {
      return this.context[this.context.length - 1];
    }, Yt.nextToken = function () {
      var t = this.curContext();
      return t && t.preserveSpace || this.skipSpace(), this.start = this.pos, this.options.locations && (this.startLoc = this.curPosition()), this.pos >= this.input.length ? this.finishToken(y.eof) : t.override ? t.override(this) : void this.readToken(this.fullCharCodeAtPos());
    }, Yt.readToken = function (t) {
      return u(t, this.options.ecmaVersion >= 6) || 92 === t ? this.readWord() : this.getTokenFromCode(t);
    }, Yt.fullCharCodeAtPos = function () {
      var t = this.input.charCodeAt(this.pos);
      return t <= 55295 || t >= 57344 ? t : (t << 10) + this.input.charCodeAt(this.pos + 1) - 56613888;
    }, Yt.skipBlockComment = function () {
      var t,
        e = this.options.onComment && this.curPosition(),
        i = this.pos,
        s = this.input.indexOf("*/", this.pos += 2);
      if (-1 === s && this.raise(this.pos - 2, "Unterminated comment"), this.pos = s + 2, this.options.locations) for (_.lastIndex = i; (t = _.exec(this.input)) && t.index < this.pos;) ++this.curLine, this.lineStart = t.index + t[0].length;
      this.options.onComment && this.options.onComment(!0, this.input.slice(i + 2, s), i, this.pos, e, this.curPosition());
    }, Yt.skipLineComment = function (t) {
      for (var e = this.pos, i = this.options.onComment && this.curPosition(), s = this.input.charCodeAt(this.pos += t); this.pos < this.input.length && !b(s);) s = this.input.charCodeAt(++this.pos);
      this.options.onComment && this.options.onComment(!1, this.input.slice(e + t, this.pos), e, this.pos, i, this.curPosition());
    }, Yt.skipSpace = function () {
      t: for (; this.pos < this.input.length;) {
        var t = this.input.charCodeAt(this.pos);
        switch (t) {
          case 32:
          case 160:
            ++this.pos;
            break;
          case 13:
            10 === this.input.charCodeAt(this.pos + 1) && ++this.pos;
          case 10:
          case 8232:
          case 8233:
            ++this.pos, this.options.locations && (++this.curLine, this.lineStart = this.pos);
            break;
          case 47:
            switch (this.input.charCodeAt(this.pos + 1)) {
              case 42:
                this.skipBlockComment();
                break;
              case 47:
                this.skipLineComment(2);
                break;
              default:
                break t;
            }
            break;
          default:
            if (!(t > 8 && t < 14 || t >= 5760 && S.test(String.fromCharCode(t)))) break t;
            ++this.pos;
        }
      }
    }, Yt.finishToken = function (t, e) {
      this.end = this.pos, this.options.locations && (this.endLoc = this.curPosition());
      var i = this.type;
      this.type = t, this.value = e, this.updateContext(i);
    }, Yt.readToken_dot = function () {
      var t = this.input.charCodeAt(this.pos + 1);
      if (t >= 48 && t <= 57) return this.readNumber(!0);
      var e = this.input.charCodeAt(this.pos + 2);
      return this.options.ecmaVersion >= 6 && 46 === t && 46 === e ? (this.pos += 3, this.finishToken(y.ellipsis)) : (++this.pos, this.finishToken(y.dot));
    }, Yt.readToken_slash = function () {
      var t = this.input.charCodeAt(this.pos + 1);
      return this.exprAllowed ? (++this.pos, this.readRegexp()) : 61 === t ? this.finishOp(y.assign, 2) : this.finishOp(y.slash, 1);
    }, Yt.readToken_mult_modulo_exp = function (t) {
      var e = this.input.charCodeAt(this.pos + 1),
        i = 1,
        s = 42 === t ? y.star : y.modulo;
      return this.options.ecmaVersion >= 7 && 42 === t && 42 === e && (++i, s = y.starstar, e = this.input.charCodeAt(this.pos + 2)), 61 === e ? this.finishOp(y.assign, i + 1) : this.finishOp(s, i);
    }, Yt.readToken_pipe_amp = function (t) {
      var e = this.input.charCodeAt(this.pos + 1);
      return e === t ? this.finishOp(124 === t ? y.logicalOR : y.logicalAND, 2) : 61 === e ? this.finishOp(y.assign, 2) : this.finishOp(124 === t ? y.bitwiseOR : y.bitwiseAND, 1);
    }, Yt.readToken_caret = function () {
      return 61 === this.input.charCodeAt(this.pos + 1) ? this.finishOp(y.assign, 2) : this.finishOp(y.bitwiseXOR, 1);
    }, Yt.readToken_plus_min = function (t) {
      var e = this.input.charCodeAt(this.pos + 1);
      return e === t ? 45 !== e || this.inModule || 62 !== this.input.charCodeAt(this.pos + 2) || 0 !== this.lastTokEnd && !k.test(this.input.slice(this.lastTokEnd, this.pos)) ? this.finishOp(y.incDec, 2) : (this.skipLineComment(3), this.skipSpace(), this.nextToken()) : 61 === e ? this.finishOp(y.assign, 2) : this.finishOp(y.plusMin, 1);
    }, Yt.readToken_lt_gt = function (t) {
      var e = this.input.charCodeAt(this.pos + 1),
        i = 1;
      return e === t ? (i = 62 === t && 62 === this.input.charCodeAt(this.pos + 2) ? 3 : 2, 61 === this.input.charCodeAt(this.pos + i) ? this.finishOp(y.assign, i + 1) : this.finishOp(y.bitShift, i)) : 33 !== e || 60 !== t || this.inModule || 45 !== this.input.charCodeAt(this.pos + 2) || 45 !== this.input.charCodeAt(this.pos + 3) ? (61 === e && (i = 2), this.finishOp(y.relational, i)) : (this.skipLineComment(4), this.skipSpace(), this.nextToken());
    }, Yt.readToken_eq_excl = function (t) {
      var e = this.input.charCodeAt(this.pos + 1);
      return 61 === e ? this.finishOp(y.equality, 61 === this.input.charCodeAt(this.pos + 2) ? 3 : 2) : 61 === t && 62 === e && this.options.ecmaVersion >= 6 ? (this.pos += 2, this.finishToken(y.arrow)) : this.finishOp(61 === t ? y.eq : y.prefix, 1);
    }, Yt.getTokenFromCode = function (t) {
      switch (t) {
        case 46:
          return this.readToken_dot();
        case 40:
          return ++this.pos, this.finishToken(y.parenL);
        case 41:
          return ++this.pos, this.finishToken(y.parenR);
        case 59:
          return ++this.pos, this.finishToken(y.semi);
        case 44:
          return ++this.pos, this.finishToken(y.comma);
        case 91:
          return ++this.pos, this.finishToken(y.bracketL);
        case 93:
          return ++this.pos, this.finishToken(y.bracketR);
        case 123:
          return ++this.pos, this.finishToken(y.braceL);
        case 125:
          return ++this.pos, this.finishToken(y.braceR);
        case 58:
          return ++this.pos, this.finishToken(y.colon);
        case 63:
          return ++this.pos, this.finishToken(y.question);
        case 96:
          if (this.options.ecmaVersion < 6) break;
          return ++this.pos, this.finishToken(y.backQuote);
        case 48:
          var e = this.input.charCodeAt(this.pos + 1);
          if (120 === e || 88 === e) return this.readRadixNumber(16);
          if (this.options.ecmaVersion >= 6) {
            if (111 === e || 79 === e) return this.readRadixNumber(8);
            if (98 === e || 66 === e) return this.readRadixNumber(2);
          }
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
          return this.readNumber(!1);
        case 34:
        case 39:
          return this.readString(t);
        case 47:
          return this.readToken_slash();
        case 37:
        case 42:
          return this.readToken_mult_modulo_exp(t);
        case 124:
        case 38:
          return this.readToken_pipe_amp(t);
        case 94:
          return this.readToken_caret();
        case 43:
        case 45:
          return this.readToken_plus_min(t);
        case 60:
        case 62:
          return this.readToken_lt_gt(t);
        case 61:
        case 33:
          return this.readToken_eq_excl(t);
        case 126:
          return this.finishOp(y.prefix, 1);
      }
      this.raise(this.pos, "Unexpected character '" + Zt(t) + "'");
    }, Yt.finishOp = function (t, e) {
      var i = this.input.slice(this.pos, this.pos + e);
      return this.pos += e, this.finishToken(t, i);
    }, Yt.readRegexp = function () {
      for (var t, e, i = this.pos;;) {
        this.pos >= this.input.length && this.raise(i, "Unterminated regular expression");
        var s = this.input.charAt(this.pos);
        if (k.test(s) && this.raise(i, "Unterminated regular expression"), t) t = !1;else {
          if ("[" === s) e = !0;else if ("]" === s && e) e = !1;else if ("/" === s && !e) break;
          t = "\\" === s;
        }
        ++this.pos;
      }
      var r = this.input.slice(i, this.pos);
      ++this.pos;
      var a = this.pos,
        n = this.readWord1();
      this.containsEsc && this.unexpected(a);
      var o = this.regexpState || (this.regexpState = new Bt(this));
      o.reset(i, r, n), this.validateRegExpFlags(o), this.validateRegExpPattern(o);
      var h = null;
      try {
        h = new RegExp(r, n);
      } catch (p) {}
      return this.finishToken(y.regexp, {
        pattern: r,
        flags: n,
        value: h
      });
    }, Yt.readInt = function (t, e) {
      for (var i = this.pos, s = 0, r = 0, a = null == e ? 1 / 0 : e; r < a; ++r) {
        var n = this.input.charCodeAt(this.pos),
          o = void 0;
        if ((o = n >= 97 ? n - 97 + 10 : n >= 65 ? n - 65 + 10 : n >= 48 && n <= 57 ? n - 48 : 1 / 0) >= t) break;
        ++this.pos, s = s * t + o;
      }
      return this.pos === i || null != e && this.pos - i !== e ? null : s;
    }, Yt.readRadixNumber = function (t) {
      var e = this.pos;
      this.pos += 2;
      var i = this.readInt(t);
      return null == i && this.raise(this.start + 2, "Expected number in radix " + t), this.options.ecmaVersion >= 11 && 110 === this.input.charCodeAt(this.pos) ? (i = "undefined" != typeof BigInt ? BigInt(this.input.slice(e, this.pos)) : null, ++this.pos) : u(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number"), this.finishToken(y.num, i);
    }, Yt.readNumber = function (t) {
      var e = this.pos;
      t || null !== this.readInt(10) || this.raise(e, "Invalid number");
      var i = this.pos - e >= 2 && 48 === this.input.charCodeAt(e);
      i && this.strict && this.raise(e, "Invalid number");
      var s = this.input.charCodeAt(this.pos);
      if (!i && !t && this.options.ecmaVersion >= 11 && 110 === s) {
        var r = this.input.slice(e, this.pos),
          a = "undefined" != typeof BigInt ? BigInt(r) : null;
        return ++this.pos, u(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number"), this.finishToken(y.num, a);
      }
      i && /[89]/.test(this.input.slice(e, this.pos)) && (i = !1), 46 !== s || i || (++this.pos, this.readInt(10), s = this.input.charCodeAt(this.pos)), 69 !== s && 101 !== s || i || (43 !== (s = this.input.charCodeAt(++this.pos)) && 45 !== s || ++this.pos, null === this.readInt(10) && this.raise(e, "Invalid number")), u(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number");
      var n = this.input.slice(e, this.pos),
        o = i ? parseInt(n, 8) : parseFloat(n);
      return this.finishToken(y.num, o);
    }, Yt.readCodePoint = function () {
      var t;
      if (123 === this.input.charCodeAt(this.pos)) {
        this.options.ecmaVersion < 6 && this.unexpected();
        var e = ++this.pos;
        t = this.readHexChar(this.input.indexOf("}", this.pos) - this.pos), ++this.pos, t > 1114111 && this.invalidStringToken(e, "Code point out of bounds");
      } else t = this.readHexChar(4);
      return t;
    }, Yt.readString = function (t) {
      for (var e = "", i = ++this.pos;;) {
        this.pos >= this.input.length && this.raise(this.start, "Unterminated string constant");
        var s = this.input.charCodeAt(this.pos);
        if (s === t) break;
        92 === s ? (e += this.input.slice(i, this.pos), e += this.readEscapedChar(!1), i = this.pos) : (b(s, this.options.ecmaVersion >= 10) && this.raise(this.start, "Unterminated string constant"), ++this.pos);
      }
      return e += this.input.slice(i, this.pos++), this.finishToken(y.string, e);
    };
    var $t = {};
    Yt.tryReadTemplateToken = function () {
      this.inTemplateElement = !0;
      try {
        this.readTmplToken();
      } catch (t) {
        if (t !== $t) throw t;
        this.readInvalidTemplateToken();
      }
      this.inTemplateElement = !1;
    }, Yt.invalidStringToken = function (t, e) {
      if (this.inTemplateElement && this.options.ecmaVersion >= 9) throw $t;
      this.raise(t, e);
    }, Yt.readTmplToken = function () {
      for (var t = "", e = this.pos;;) {
        this.pos >= this.input.length && this.raise(this.start, "Unterminated template");
        var i = this.input.charCodeAt(this.pos);
        if (96 === i || 36 === i && 123 === this.input.charCodeAt(this.pos + 1)) return this.pos !== this.start || this.type !== y.template && this.type !== y.invalidTemplate ? (t += this.input.slice(e, this.pos), this.finishToken(y.template, t)) : 36 === i ? (this.pos += 2, this.finishToken(y.dollarBraceL)) : (++this.pos, this.finishToken(y.backQuote));
        if (92 === i) t += this.input.slice(e, this.pos), t += this.readEscapedChar(!0), e = this.pos;else if (b(i)) {
          switch (t += this.input.slice(e, this.pos), ++this.pos, i) {
            case 13:
              10 === this.input.charCodeAt(this.pos) && ++this.pos;
            case 10:
              t += "\n";
              break;
            default:
              t += String.fromCharCode(i);
          }
          this.options.locations && (++this.curLine, this.lineStart = this.pos), e = this.pos;
        } else ++this.pos;
      }
    }, Yt.readInvalidTemplateToken = function () {
      for (; this.pos < this.input.length; this.pos++) switch (this.input[this.pos]) {
        case "\\":
          ++this.pos;
          break;
        case "$":
          if ("{" !== this.input[this.pos + 1]) break;
        case "`":
          return this.finishToken(y.invalidTemplate, this.input.slice(this.start, this.pos));
      }
      this.raise(this.start, "Unterminated template");
    }, Yt.readEscapedChar = function (t) {
      var e = this.input.charCodeAt(++this.pos);
      switch (++this.pos, e) {
        case 110:
          return "\n";
        case 114:
          return "\r";
        case 120:
          return String.fromCharCode(this.readHexChar(2));
        case 117:
          return Zt(this.readCodePoint());
        case 116:
          return "\t";
        case 98:
          return "\b";
        case 118:
          return "\v";
        case 102:
          return "\f";
        case 13:
          10 === this.input.charCodeAt(this.pos) && ++this.pos;
        case 10:
          return this.options.locations && (this.lineStart = this.pos, ++this.curLine), "";
        case 56:
        case 57:
          if (t) {
            var i = this.pos - 1;
            return this.invalidStringToken(i, "Invalid escape sequence in template string"), null;
          }
        default:
          if (e >= 48 && e <= 55) {
            var s = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0],
              r = parseInt(s, 8);
            return r > 255 && (s = s.slice(0, -1), r = parseInt(s, 8)), this.pos += s.length - 1, e = this.input.charCodeAt(this.pos), "0" === s && 56 !== e && 57 !== e || !this.strict && !t || this.invalidStringToken(this.pos - 1 - s.length, t ? "Octal literal in template string" : "Octal literal in strict mode"), String.fromCharCode(r);
          }
          return b(e) ? "" : String.fromCharCode(e);
      }
    }, Yt.readHexChar = function (t) {
      var e = this.pos,
        i = this.readInt(16, t);
      return null === i && this.invalidStringToken(e, "Bad character escape sequence"), i;
    }, Yt.readWord1 = function () {
      this.containsEsc = !1;
      for (var t = "", e = !0, i = this.pos, s = this.options.ecmaVersion >= 6; this.pos < this.input.length;) {
        var r = this.fullCharCodeAtPos();
        if (l(r, s)) this.pos += r <= 65535 ? 1 : 2;else {
          if (92 !== r) break;
          this.containsEsc = !0, t += this.input.slice(i, this.pos);
          var a = this.pos;
          117 !== this.input.charCodeAt(++this.pos) && this.invalidStringToken(this.pos, "Expecting Unicode escape sequence \\uXXXX"), ++this.pos;
          var n = this.readCodePoint();
          (e ? u : l)(n, s) || this.invalidStringToken(a, "Invalid Unicode escape"), t += Zt(n), i = this.pos;
        }
        e = !1;
      }
      return t + this.input.slice(i, this.pos);
    }, Yt.readWord = function () {
      var t = this.readWord1(),
        e = y.name;
      return this.keywords.test(t) && (e = g[t]), this.finishToken(e, t);
    };
    var Jt = "7.1.0";
    function te(t, e) {
      return J.parse(t, e);
    }
    function ee(t, e, i) {
      return J.parseExpressionAt(t, e, i);
    }
    function ie(t, e) {
      return J.tokenizer(t, e);
    }
    exports.version = Jt, J.acorn = {
      Parser: J,
      version: Jt,
      defaultOptions: R,
      Position: L,
      SourceLocation: V,
      getLineInfo: N,
      Node: gt,
      TokenType: d,
      tokTypes: y,
      keywordTypes: g,
      TokContext: kt,
      tokContexts: _t,
      isIdentifierChar: l,
      isIdentifierStart: u,
      Token: Xt,
      isNewLine: b,
      lineBreak: k,
      lineBreakG: _,
      nonASCIIwhitespace: S
    };
  }, {}],
  "FT5O": [function (require, module, exports) {
    var t,
      e,
      n = module.exports = {};
    function r() {
      throw new Error("setTimeout has not been defined");
    }
    function o() {
      throw new Error("clearTimeout has not been defined");
    }
    function i(e) {
      if (t === setTimeout) return setTimeout(e, 0);
      if ((t === r || !t) && setTimeout) return t = setTimeout, setTimeout(e, 0);
      try {
        return t(e, 0);
      } catch (n) {
        try {
          return t.call(null, e, 0);
        } catch (n) {
          return t.call(this, e, 0);
        }
      }
    }
    function u(t) {
      if (e === clearTimeout) return clearTimeout(t);
      if ((e === o || !e) && clearTimeout) return e = clearTimeout, clearTimeout(t);
      try {
        return e(t);
      } catch (n) {
        try {
          return e.call(null, t);
        } catch (n) {
          return e.call(this, t);
        }
      }
    }
    !function () {
      try {
        t = "function" == typeof setTimeout ? setTimeout : r;
      } catch (n) {
        t = r;
      }
      try {
        e = "function" == typeof clearTimeout ? clearTimeout : o;
      } catch (n) {
        e = o;
      }
    }();
    var c,
      s = [],
      l = !1,
      a = -1;
    function f() {
      l && c && (l = !1, c.length ? s = c.concat(s) : a = -1, s.length && h());
    }
    function h() {
      if (!l) {
        var t = i(f);
        l = !0;
        for (var e = s.length; e;) {
          for (c = s, s = []; ++a < e;) c && c[a].run();
          a = -1, e = s.length;
        }
        c = null, l = !1, u(t);
      }
    }
    function m(t, e) {
      this.fun = t, this.array = e;
    }
    function p() {}
    n.nextTick = function (t) {
      var e = new Array(arguments.length - 1);
      if (arguments.length > 1) for (var n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
      s.push(new m(t, e)), 1 !== s.length || l || i(h);
    }, m.prototype.run = function () {
      this.fun.apply(null, this.array);
    }, n.title = "browser", n.env = {}, n.argv = [], n.version = "", n.versions = {}, n.on = p, n.addListener = p, n.once = p, n.off = p, n.removeListener = p, n.removeAllListeners = p, n.emit = p, n.prependListener = p, n.prependOnceListener = p, n.listeners = function (t) {
      return [];
    }, n.binding = function (t) {
      throw new Error("process.binding is not supported");
    }, n.cwd = function () {
      return "/";
    }, n.chdir = function (t) {
      throw new Error("process.chdir is not supported");
    }, n.umask = function () {
      return 0;
    };
  }, {}],
  "GYcQ": [function (require, module, exports) {
    var define;
    var process = require("process");
    var global = arguments[3];
    var t,
      e = require("process"),
      n = arguments[3];
    function i(t) {
      return (i = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }
    var r = function (e, n) {
      var r = (e = e || require("./node/self.js")).window,
        s = e.document,
        a = new function () {
          var t = /^(statics|enumerable|beans|preserve)$/,
            e = [],
            i = e.slice,
            r = Object.create,
            s = Object.getOwnPropertyDescriptor,
            a = Object.defineProperty,
            o = e.forEach || function (t, e) {
              for (var n = 0, i = this.length; n < i; n++) t.call(e, this[n], n, this);
            },
            h = Object.assign || function (t) {
              for (var e = 1, n = arguments.length; e < n; e++) {
                var i = arguments[e];
                for (var r in i) i.hasOwnProperty(r) && (t[r] = i[r]);
              }
              return t;
            },
            u = function u(t, e, n) {
              if (t) {
                var i = s(t, "length");
                (i && "number" == typeof i.value ? o : function (t, e) {
                  for (var n in this) this.hasOwnProperty(n) && t.call(e, this[n], n, this);
                }).call(t, e, n = n || t);
              }
              return n;
            };
          function l(e, n, i, r, o) {
            var h = {};
            function u(t, u) {
              "string" == typeof (u = u || (u = s(n, t)) && (u.get ? u : u.value)) && "#" === u[0] && (u = e[u.substring(1)] || u);
              var l,
                f = "function" == typeof u,
                d = u,
                _ = o || f && !u.base ? u && u.get ? t in e : e[t] : null;
              o && _ || (f && _ && (u.base = _), f && !1 !== r && (l = t.match(/^([gs]et|is)(([A-Z])(.*))$/)) && (h[l[3].toLowerCase() + l[4]] = l[2]), d && !f && d.get && "function" == typeof d.get && c.isPlainObject(d) || (d = {
                value: d,
                writable: !0
              }), (s(e, t) || {
                configurable: !0
              }).configurable && (d.configurable = !0, d.enumerable = null != i ? i : !l), a(e, t, d));
            }
            if (n) {
              for (var l in n) n.hasOwnProperty(l) && !t.test(l) && u(l);
              for (var l in h) {
                var f = h[l],
                  d = e["set" + f],
                  _ = e["get" + f] || d && e["is" + f];
                !_ || !0 !== r && 0 !== _.length || u(l, {
                  get: _,
                  set: d
                });
              }
            }
            return e;
          }
          function c() {
            for (var t = 0, e = arguments.length; t < e; t++) {
              var n = arguments[t];
              n && h(this, n);
            }
            return this;
          }
          return l(c, {
            inject: function inject(t) {
              if (t) {
                var e = !0 === t.statics ? t : t.statics,
                  n = t.beans,
                  i = t.preserve;
                e !== t && l(this.prototype, t, t.enumerable, n, i), l(this, e, null, n, i);
              }
              for (var r = 1, s = arguments.length; r < s; r++) this.inject(arguments[r]);
              return this;
            },
            extend: function extend() {
              for (var t, e, n, i = this, s = 0, o = arguments.length; s < o && (!t || !e); s++) n = arguments[s], t = t || n.initialize, e = e || n.prototype;
              return e = (t = t || function () {
                i.apply(this, arguments);
              }).prototype = e || r(this.prototype), a(e, "constructor", {
                value: t,
                writable: !0,
                configurable: !0
              }), l(t, this), arguments.length && this.inject.apply(t, arguments), t.base = i, t;
            }
          }).inject({
            enumerable: !1,
            initialize: c,
            set: c,
            inject: function inject() {
              for (var t = 0, e = arguments.length; t < e; t++) {
                var n = arguments[t];
                n && l(this, n, n.enumerable, n.beans, n.preserve);
              }
              return this;
            },
            extend: function extend() {
              var t = r(this);
              return t.inject.apply(t, arguments);
            },
            each: function each(t, e) {
              return u(this, t, e);
            },
            clone: function clone() {
              return new this.constructor(this);
            },
            statics: {
              set: h,
              each: u,
              create: r,
              define: a,
              describe: s,
              clone: function clone(t) {
                return h(new t.constructor(), t);
              },
              isPlainObject: function isPlainObject(t) {
                var e = null != t && t.constructor;
                return e && (e === Object || e === c || "Object" === e.name);
              },
              pick: function pick(t, e) {
                return t !== n ? t : e;
              },
              slice: function slice(t, e, n) {
                return i.call(t, e, n);
              }
            }
          });
        }();
      "undefined" != typeof module && (module.exports = a), a.inject({
        enumerable: !1,
        toString: function toString() {
          return null != this._id ? (this._class || "Object") + (this._name ? " '" + this._name + "'" : " @" + this._id) : "{ " + a.each(this, function (t, e) {
            if (!/^_/.test(e)) {
              var n = i(t);
              this.push(e + ": " + ("number" === n ? c.instance.number(t) : "string" === n ? "'" + t + "'" : t));
            }
          }, []).join(", ") + " }";
        },
        getClassName: function getClassName() {
          return this._class || "";
        },
        importJSON: function importJSON(t) {
          return a.importJSON(t, this);
        },
        exportJSON: function exportJSON(t) {
          return a.exportJSON(this, t);
        },
        toJSON: function toJSON() {
          return a.serialize(this);
        },
        set: function set(t, e) {
          return t && a.filter(this, t, e, this._prioritize), this;
        }
      }, {
        beans: !1,
        statics: {
          exports: {},
          extend: function t() {
            var e = t.base.apply(this, arguments),
              n = e.prototype._class;
            return n && !a.exports[n] && (a.exports[n] = e), e;
          },
          equals: function equals(t, e) {
            if (t === e) return !0;
            if (t && t.equals) return t.equals(e);
            if (e && e.equals) return e.equals(t);
            if (t && e && "object" === i(t) && "object" === i(e)) {
              if (Array.isArray(t) && Array.isArray(e)) {
                if ((n = t.length) !== e.length) return !1;
                for (; n--;) if (!a.equals(t[n], e[n])) return !1;
              } else {
                var n,
                  r = Object.keys(t);
                if ((n = r.length) !== Object.keys(e).length) return !1;
                for (; n--;) {
                  var s = r[n];
                  if (!e.hasOwnProperty(s) || !a.equals(t[s], e[s])) return !1;
                }
              }
              return !0;
            }
            return !1;
          },
          read: function read(t, e, i, r) {
            if (this === a) {
              var s = this.peek(t, e);
              return t.__index++, s;
            }
            var o = this.prototype,
              h = o._readIndex,
              u = e || h && t.__index || 0,
              l = t.length,
              c = t[u];
            if (r = r || l - u, c instanceof this || i && i.readNull && null == c && r <= 1) return h && (t.__index = u + 1), c && i && i.clone ? c.clone() : c;
            if (c = a.create(o), h && (c.__read = !0), c = c.initialize.apply(c, u > 0 || u + r < l ? a.slice(t, u, u + r) : t) || c, h) {
              t.__index = u + c.__read;
              var f = c.__filtered;
              f && (t.__filtered = f, c.__filtered = n), c.__read = n;
            }
            return c;
          },
          peek: function peek(t, e) {
            return t[t.__index = e || t.__index || 0];
          },
          remain: function remain(t) {
            return t.length - (t.__index || 0);
          },
          readList: function readList(t, e, n, i) {
            for (var r, s = [], a = e || 0, o = i ? a + i : t.length, h = a; h < o; h++) s.push(Array.isArray(r = t[h]) ? this.read(r, 0, n) : this.read(t, h, n, 1));
            return s;
          },
          readNamed: function readNamed(t, e, i, r, s) {
            var o = this.getNamed(t, e),
              h = o !== n;
            if (h) {
              var u = t.__filtered;
              if (!u) {
                var l = this.getSource(t);
                (u = t.__filtered = a.create(l)).__unfiltered = l;
              }
              u[e] = n;
            }
            return this.read(h ? [o] : t, i, r, s);
          },
          readSupported: function readSupported(t, e) {
            var i = this.getSource(t),
              r = this,
              s = !1;
            return i && Object.keys(i).forEach(function (i) {
              if (i in e) {
                var a = r.readNamed(t, i);
                a !== n && (e[i] = a), s = !0;
              }
            }), s;
          },
          getSource: function getSource(t) {
            var e = t.__source;
            if (e === n) {
              var i = 1 === t.length && t[0];
              e = t.__source = i && a.isPlainObject(i) ? i : null;
            }
            return e;
          },
          getNamed: function getNamed(t, e) {
            var n = this.getSource(t);
            if (n) return e ? n[e] : t.__filtered || n;
          },
          hasNamed: function hasNamed(t, e) {
            return !!this.getNamed(t, e);
          },
          filter: function filter(t, e, i, r) {
            var s;
            function a(r) {
              if (!(i && r in i || s && r in s)) {
                var a = e[r];
                a !== n && (t[r] = a);
              }
            }
            if (r) {
              for (var o, h = {}, u = 0, l = r.length; u < l; u++) (o = r[u]) in e && (a(o), h[o] = !0);
              s = h;
            }
            return Object.keys(e.__unfiltered || e).forEach(a), t;
          },
          isPlainValue: function isPlainValue(t, e) {
            return a.isPlainObject(t) || Array.isArray(t) || e && "string" == typeof t;
          },
          serialize: function serialize(t, e, n, i) {
            e = e || {};
            var r,
              s = !i;
            if (s && (e.formatter = new c(e.precision), i = {
              length: 0,
              definitions: {},
              references: {},
              add: function add(t, e) {
                var n = "#" + t._id,
                  i = this.references[n];
                if (!i) {
                  this.length++;
                  var r = e.call(t),
                    s = t._class;
                  s && r[0] !== s && r.unshift(s), this.definitions[n] = r, i = this.references[n] = [n];
                }
                return i;
              }
            }), t && t._serialize) {
              r = t._serialize(e, i);
              var o = t._class;
              !o || t._compactSerialize || !s && n || r[0] === o || r.unshift(o);
            } else if (Array.isArray(t)) {
              r = [];
              for (var h = 0, u = t.length; h < u; h++) r[h] = a.serialize(t[h], e, n, i);
            } else if (a.isPlainObject(t)) {
              r = {};
              var l = Object.keys(t);
              for (h = 0, u = l.length; h < u; h++) {
                var f = l[h];
                r[f] = a.serialize(t[f], e, n, i);
              }
            } else r = "number" == typeof t ? e.formatter.number(t, e.precision) : t;
            return s && i.length > 0 ? [["dictionary", i.definitions], r] : r;
          },
          deserialize: function deserialize(t, e, n, i, r) {
            var s = t,
              o = !n,
              h = o && t && t.length && "dictionary" === t[0][0];
            if (n = n || {}, Array.isArray(t)) {
              var u = t[0],
                l = "dictionary" === u;
              if (1 == t.length && /^#/.test(u)) return n.dictionary[u];
              s = [];
              for (var c = (u = a.exports[u]) ? 1 : 0, f = t.length; c < f; c++) s.push(a.deserialize(t[c], e, n, l, h));
              if (u) {
                var d = s;
                s = e ? e(u, d, o || r) : new u(d);
              }
            } else if (a.isPlainObject(t)) for (var _ in s = {}, i && (n.dictionary = s), t) s[_] = a.deserialize(t[_], e, n);
            return h ? s[1] : s;
          },
          exportJSON: function exportJSON(t, e) {
            var n = a.serialize(t, e);
            return e && 0 == e.asString ? n : JSON.stringify(n);
          },
          importJSON: function importJSON(t, e) {
            return a.deserialize("string" == typeof t ? JSON.parse(t) : t, function (t, n, i) {
              var r = i && e && e.constructor === t,
                s = r ? e : a.create(t.prototype);
              if (1 === n.length && s instanceof C && (r || !(s instanceof k))) {
                var o = n[0];
                a.isPlainObject(o) && (o.insert = !1, r && (n = n.concat([{
                  insert: !0
                }])));
              }
              return (r ? s.set : t).apply(s, n), r && (e = null), s;
            });
          },
          push: function push(t, e) {
            var n = e.length;
            if (n < 4096) t.push.apply(t, e);else {
              var i = t.length;
              t.length += n;
              for (var r = 0; r < n; r++) t[i + r] = e[r];
            }
            return t;
          },
          splice: function splice(t, e, i, r) {
            var s = e && e.length,
              o = i === n;
            (i = o ? t.length : i) > t.length && (i = t.length);
            for (var h = 0; h < s; h++) e[h]._index = i + h;
            if (o) return a.push(t, e), [];
            var u = [i, r];
            e && a.push(u, e);
            for (var l = t.splice.apply(t, u), c = (h = 0, l.length); h < c; h++) l[h]._index = n;
            for (h = i + s, c = t.length; h < c; h++) t[h]._index = h;
            return l;
          },
          capitalize: function capitalize(t) {
            return t.replace(/\b[a-z]/g, function (t) {
              return t.toUpperCase();
            });
          },
          camelize: function camelize(t) {
            return t.replace(/-(.)/g, function (t, e) {
              return e.toUpperCase();
            });
          },
          hyphenate: function hyphenate(t) {
            return t.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
          }
        }
      });
      var o = {
          on: function on(t, e) {
            if ("string" != typeof t) a.each(t, function (t, e) {
              this.on(e, t);
            }, this);else {
              var n = this._eventTypes,
                i = n && n[t],
                r = this._callbacks = this._callbacks || {};
              -1 === (r = r[t] = r[t] || []).indexOf(e) && (r.push(e), i && i.install && 1 === r.length && i.install.call(this, t));
            }
            return this;
          },
          off: function off(t, e) {
            if ("string" == typeof t) {
              var n,
                i = this._eventTypes,
                r = i && i[t],
                s = this._callbacks && this._callbacks[t];
              return s && (!e || -1 !== (n = s.indexOf(e)) && 1 === s.length ? (r && r.uninstall && r.uninstall.call(this, t), delete this._callbacks[t]) : -1 !== n && s.splice(n, 1)), this;
            }
            a.each(t, function (t, e) {
              this.off(e, t);
            }, this);
          },
          once: function once(t, e) {
            return this.on(t, function n() {
              e.apply(this, arguments), this.off(t, n);
            });
          },
          emit: function emit(t, e) {
            var n = this._callbacks && this._callbacks[t];
            if (!n) return !1;
            var i = a.slice(arguments, 1),
              r = e && e.target && !e.currentTarget;
            n = n.slice(), r && (e.currentTarget = this);
            for (var s = 0, o = n.length; s < o; s++) if (0 == n[s].apply(this, i)) {
              e && e.stop && e.stop();
              break;
            }
            return r && delete e.currentTarget, !0;
          },
          responds: function responds(t) {
            return !(!this._callbacks || !this._callbacks[t]);
          },
          attach: "#on",
          detach: "#off",
          fire: "#emit",
          _installEvents: function _installEvents(t) {
            var e = this._eventTypes,
              n = this._callbacks,
              i = t ? "install" : "uninstall";
            if (e) for (var r in n) if (n[r].length > 0) {
              var s = e[r],
                a = s && s[i];
              a && a.call(this, r);
            }
          },
          statics: {
            inject: function t(e) {
              var n = e._events;
              if (n) {
                var i = {};
                a.each(n, function (t, n) {
                  var r = "string" == typeof t,
                    s = r ? t : n,
                    o = a.capitalize(s),
                    h = s.substring(2).toLowerCase();
                  i[h] = r ? {} : t, s = "_" + s, e["get" + o] = function () {
                    return this[s];
                  }, e["set" + o] = function (t) {
                    var e = this[s];
                    e && this.off(h, e), t && this.on(h, t), this[s] = t;
                  };
                }), e._eventTypes = i;
              }
              return t.base.apply(this, arguments);
            }
          }
        },
        h = a.extend({
          _class: "PaperScope",
          initialize: function t() {
            ht = this, this.settings = new a({
              applyMatrix: !0,
              insertItems: !0,
              handleSize: 4,
              hitTolerance: 0
            }), this.project = null, this.projects = [], this.tools = [], this._id = t._id++, t._scopes[this._id] = this;
            var n = t.prototype;
            if (!this.support) {
              var i = rt.getContext(1, 1) || {};
              n.support = {
                nativeDash: "setLineDash" in i || "mozDash" in i,
                nativeBlendModes: st.nativeModes
              }, rt.release(i);
            }
            if (!this.agent) {
              var r = e.navigator.userAgent.toLowerCase(),
                s = (/(darwin|win|mac|linux|freebsd|sunos)/.exec(r) || [])[0],
                o = "darwin" === s ? "mac" : s,
                h = n.agent = n.browser = {
                  platform: o
                };
              o && (h[o] = !0), r.replace(/(opera|chrome|safari|webkit|firefox|msie|trident|atom|node|jsdom)\/?\s*([.\d]+)(?:.*version\/([.\d]+))?(?:.*rv\:v?([.\d]+))?/g, function (t, e, n, i, r) {
                if (!h.chrome) {
                  var s = "opera" === e ? i : /^(node|trident)$/.test(e) ? r : n;
                  h.version = s, h.versionNumber = parseFloat(s), e = {
                    trident: "msie",
                    jsdom: "node"
                  }[e] || e, h.name = e, h[e] = !0;
                }
              }), h.chrome && delete h.webkit, h.atom && delete h.chrome;
            }
          },
          version: "0.12.11",
          getView: function getView() {
            var t = this.project;
            return t && t._view;
          },
          getPaper: function getPaper() {
            return this;
          },
          execute: function execute(t, e) {
            var n = ht.PaperScript.execute(t, this, e);
            return G.updateFocus(), n;
          },
          install: function install(t) {
            var e = this;
            for (var n in a.each(["project", "view", "tool"], function (n) {
              a.define(t, n, {
                configurable: !0,
                get: function get() {
                  return e[n];
                }
              });
            }), this) !/^_/.test(n) && this[n] && (t[n] = this[n]);
          },
          setup: function setup(t) {
            return ht = this, this.project = new b(t), this;
          },
          createCanvas: function createCanvas(t, e) {
            return rt.getCanvas(t, e);
          },
          activate: function activate() {
            ht = this;
          },
          clear: function clear() {
            for (var t = this.projects, e = this.tools, n = t.length - 1; n >= 0; n--) t[n].remove();
            for (n = e.length - 1; n >= 0; n--) e[n].remove();
          },
          remove: function remove() {
            this.clear(), delete h._scopes[this._id];
          },
          statics: new function () {
            function t(t) {
              return t += "Attribute", function (e, n) {
                return e[t](n) || e[t]("data-paper-" + n);
              };
            }
            return {
              _scopes: {},
              _id: 0,
              get: function get(t) {
                return this._scopes[t] || null;
              },
              getAttribute: t("get"),
              hasAttribute: t("has")
            };
          }()
        }),
        u = a.extend(o, {
          initialize: function initialize(t) {
            this._scope = ht, this._index = this._scope[this._list].push(this) - 1, !t && this._scope[this._reference] || this.activate();
          },
          activate: function activate() {
            if (!this._scope) return !1;
            var t = this._scope[this._reference];
            return t && t !== this && t.emit("deactivate"), this._scope[this._reference] = this, this.emit("activate", t), !0;
          },
          isActive: function isActive() {
            return this._scope[this._reference] === this;
          },
          remove: function remove() {
            return null != this._index && (a.splice(this._scope[this._list], null, this._index, 1), this._scope[this._reference] == this && (this._scope[this._reference] = null), this._scope = null, !0);
          },
          getView: function getView() {
            return this._scope.getView();
          }
        }),
        l = {
          findItemBoundsCollisions: function findItemBoundsCollisions(t, e, n) {
            function i(t) {
              for (var e = new Array(t.length), n = 0; n < t.length; n++) {
                var i = t[n].getBounds();
                e[n] = [i.left, i.top, i.right, i.bottom];
              }
              return e;
            }
            var r = i(t),
              s = e && e !== t ? i(e) : r;
            return this.findBoundsCollisions(r, s, n || 0);
          },
          findCurveBoundsCollisions: function findCurveBoundsCollisions(t, e, n, i) {
            function r(t) {
              for (var e = Math.min, n = Math.max, i = new Array(t.length), r = 0; r < t.length; r++) {
                var s = t[r];
                i[r] = [e(s[0], s[2], s[4], s[6]), e(s[1], s[3], s[5], s[7]), n(s[0], s[2], s[4], s[6]), n(s[1], s[3], s[5], s[7])];
              }
              return i;
            }
            var s = r(t),
              a = e && e !== t ? r(e) : s;
            if (i) {
              for (var o = this.findBoundsCollisions(s, a, n || 0, !1, !0), h = this.findBoundsCollisions(s, a, n || 0, !0, !0), u = [], l = 0, c = o.length; l < c; l++) u[l] = {
                hor: o[l],
                ver: h[l]
              };
              return u;
            }
            return this.findBoundsCollisions(s, a, n || 0);
          },
          findBoundsCollisions: function findBoundsCollisions(t, e, n, i, r) {
            var s = !e || t === e,
              a = s ? t : t.concat(e),
              o = t.length,
              h = a.length;
            function u(t, e, n) {
              for (var i = 0, r = t.length; i < r;) {
                var s = r + i >>> 1;
                a[t[s]][e] < n ? i = s + 1 : r = s;
              }
              return i - 1;
            }
            for (var l = i ? 1 : 0, c = l + 2, f = i ? 0 : 1, d = f + 2, _ = new Array(h), g = 0; g < h; g++) _[g] = g;
            _.sort(function (t, e) {
              return a[t][l] - a[e][l];
            });
            var v = [],
              p = new Array(o);
            for (g = 0; g < h; g++) {
              var m = _[g],
                y = a[m],
                w = s ? m : m - o,
                x = m < o,
                b = s || !x,
                C = x ? [] : null;
              if (v.length) {
                var S = u(v, c, y[l] - n) + 1;
                if (v.splice(0, S), s && r) {
                  C = C.concat(v);
                  for (var k = 0; k < v.length; k++) {
                    p[M = v[k]].push(w);
                  }
                } else {
                  var I = y[d],
                    P = y[f];
                  for (k = 0; k < v.length; k++) {
                    var M = v[k],
                      A = a[M],
                      T = M < o,
                      O = s || M >= o;
                    (r || (x && O || b && T) && I >= A[f] - n && P <= A[d] + n) && (x && O && C.push(s ? M : M - o), b && T && p[M].push(w));
                  }
                }
              }
              if (x && (t === e && C.push(m), p[m] = C), v.length) {
                var z = u(v, c, y[c]);
                v.splice(z + 1, 0, m);
              } else v.push(m);
            }
            for (g = 0; g < p.length; g++) {
              var E = p[g];
              E && E.sort(function (t, e) {
                return t - e;
              });
            }
            return p;
          }
        },
        c = a.extend({
          initialize: function initialize(t) {
            this.precision = a.pick(t, 5), this.multiplier = Math.pow(10, this.precision);
          },
          number: function number(t) {
            return this.precision < 16 ? Math.round(t * this.multiplier) / this.multiplier : t;
          },
          pair: function pair(t, e, n) {
            return this.number(t) + (n || ",") + this.number(e);
          },
          point: function point(t, e) {
            return this.number(t.x) + (e || ",") + this.number(t.y);
          },
          size: function size(t, e) {
            return this.number(t.width) + (e || ",") + this.number(t.height);
          },
          rectangle: function rectangle(t, e) {
            return this.point(t, e) + (e || ",") + this.size(t, e);
          }
        });
      c.instance = new c();
      var f = new function () {
          var t = [[.5773502691896257], [0, .7745966692414834], [.33998104358485626, .8611363115940526], [0, .5384693101056831, .906179845938664], [.2386191860831969, .6612093864662645, .932469514203152], [0, .4058451513773972, .7415311855993945, .9491079123427585], [.1834346424956498, .525532409916329, .7966664774136267, .9602898564975363], [0, .3242534234038089, .6133714327005904, .8360311073266358, .9681602395076261], [.14887433898163122, .4333953941292472, .6794095682990244, .8650633666889845, .9739065285171717], [0, .26954315595234496, .5190961292068118, .7301520055740494, .8870625997680953, .978228658146057], [.1252334085114689, .3678314989981802, .5873179542866175, .7699026741943047, .9041172563704749, .9815606342467192], [0, .2304583159551348, .44849275103644687, .6423493394403402, .8015780907333099, .9175983992229779, .9841830547185881], [.10805494870734367, .31911236892788974, .5152486363581541, .6872929048116855, .827201315069765, .9284348836635735, .9862838086968123], [0, .20119409399743451, .3941513470775634, .5709721726085388, .7244177313601701, .8482065834104272, .937273392400706, .9879925180204854], [.09501250983763744, .2816035507792589, .45801677765722737, .6178762444026438, .755404408355003, .8656312023878318, .9445750230732326, .9894009349916499]],
            e = [[1], [.8888888888888888, .5555555555555556], [.6521451548625461, .34785484513745385], [.5688888888888889, .47862867049936647, .23692688505618908], [.46791393457269104, .3607615730481386, .17132449237917036], [.4179591836734694, .3818300505051189, .27970539148927664, .1294849661688697], [.362683783378362, .31370664587788727, .22238103445337448, .10122853629037626], [.3302393550012598, .31234707704000286, .26061069640293544, .1806481606948574, .08127438836157441], [.29552422471475287, .26926671930999635, .21908636251598204, .1494513491505806, .06667134430868814], [.2729250867779006, .26280454451024665, .23319376459199048, .18629021092773426, .1255803694649046, .05566856711617366], [.24914704581340277, .2334925365383548, .20316742672306592, .16007832854334622, .10693932599531843, .04717533638651183], [.2325515532308739, .22628318026289723, .2078160475368885, .17814598076194574, .13887351021978725, .09212149983772845, .04048400476531588], [.2152638534631578, .2051984637212956, .18553839747793782, .15720316715819355, .12151857068790319, .08015808715976021, .03511946033175186], [.2025782419255613, .19843148532711158, .1861610000155622, .16626920581699392, .13957067792615432, .10715922046717194, .07036604748810812, .03075324199611727], [.1894506104550685, .18260341504492358, .16915651939500254, .14959598881657674, .12462897125553388, .09515851168249279, .062253523938647894, .027152459411754096]],
            n = Math.abs,
            i = Math.sqrt,
            r = Math.pow,
            s = Math.log2 || function (t) {
              return Math.log(t) * Math.LOG2E;
            };
          function a(t, e, n) {
            return t < e ? e : t > n ? n : t;
          }
          function o(t, e, i) {
            function r(t) {
              var e = 134217729 * t,
                n = t - e + e;
              return [n, t - n];
            }
            var s = e * e - t * i,
              a = e * e + t * i;
            if (3 * n(s) < a) {
              var o = r(t),
                h = r(e),
                u = r(i),
                l = e * e,
                c = t * i;
              s = l - c + (h[0] * h[0] - l + 2 * h[0] * h[1] + h[1] * h[1] - (o[0] * u[0] - c + o[0] * u[1] + o[1] * u[0] + o[1] * u[1]));
            }
            return s;
          }
          function h() {
            var t = Math.max.apply(Math, arguments);
            return t && (t < 1e-8 || t > 1e8) ? r(2, -Math.round(s(t))) : 0;
          }
          return {
            EPSILON: 1e-12,
            MACHINE_EPSILON: 1.12e-16,
            CURVETIME_EPSILON: 1e-8,
            GEOMETRIC_EPSILON: 1e-7,
            TRIGONOMETRIC_EPSILON: 1e-8,
            KAPPA: 4 * (i(2) - 1) / 3,
            isZero: function isZero(t) {
              return t >= -1e-12 && t <= 1e-12;
            },
            isMachineZero: function isMachineZero(t) {
              return t >= -1.12e-16 && t <= 1.12e-16;
            },
            clamp: a,
            integrate: function integrate(n, i, r, s) {
              for (var a = t[s - 2], o = e[s - 2], h = .5 * (r - i), u = h + i, l = 0, c = s + 1 >> 1, f = 1 & s ? o[l++] * n(u) : 0; l < c;) {
                var d = h * a[l];
                f += o[l++] * (n(u + d) + n(u - d));
              }
              return h * f;
            },
            findRoot: function findRoot(t, e, i, r, s, o, h) {
              for (var u = 0; u < o; u++) {
                var l = t(i),
                  c = l / e(i),
                  f = i - c;
                if (n(c) < h) {
                  i = f;
                  break;
                }
                l > 0 ? (s = i, i = f <= r ? .5 * (r + s) : f) : (r = i, i = f >= s ? .5 * (r + s) : f);
              }
              return a(i, r, s);
            },
            solveQuadratic: function solveQuadratic(t, e, r, s, u, l) {
              var c,
                f = 1 / 0;
              if (n(t) < 1e-12) {
                if (n(e) < 1e-12) return n(r) < 1e-12 ? -1 : 0;
                c = -r / e;
              } else {
                var d = o(t, e *= -.5, r);
                if (d && n(d) < 1.12e-16) {
                  var _ = h(n(t), n(e), n(r));
                  _ && (d = o(t *= _, e *= _, r *= _));
                }
                if (d >= -1.12e-16) {
                  var g = d < 0 ? 0 : i(d),
                    v = e + (e < 0 ? -g : g);
                  0 === v ? f = -(c = r / t) : (c = v / t, f = r / v);
                }
              }
              var p = 0,
                m = null == u,
                y = u - 1e-12,
                w = l + 1e-12;
              return isFinite(c) && (m || c > y && c < w) && (s[p++] = m ? c : a(c, u, l)), f !== c && isFinite(f) && (m || f > y && f < w) && (s[p++] = m ? f : a(f, u, l)), p;
            },
            solveCubic: function solveCubic(t, e, s, o, u, l, c) {
              var d,
                _,
                g,
                v,
                p,
                m = h(n(t), n(e), n(s), n(o));
              function y(n) {
                var i = t * (d = n);
                v = (i + (_ = i + e)) * d + (g = _ * d + s), p = g * d + o;
              }
              if (m && (t *= m, e *= m, s *= m, o *= m), n(t) < 1e-12) t = e, _ = s, g = o, d = 1 / 0;else if (n(o) < 1e-12) _ = e, g = s, d = 0;else {
                y(-e / t / 3);
                var w = p / t,
                  x = r(n(w), 1 / 3),
                  b = w < 0 ? -1 : 1,
                  C = -v / t,
                  S = C > 0 ? 1.324717957244746 * Math.max(x, i(C)) : x,
                  k = d - b * S;
                if (k !== d) {
                  do {
                    y(k), k = 0 === v ? d : d - p / v / (1 + 1.12e-16);
                  } while (b * k > b * d);
                  n(t) * d * d > n(o / d) && (_ = ((g = -o / d) - s) / d);
                }
              }
              var I = f.solveQuadratic(t, _, g, u, l, c),
                P = null == l;
              return isFinite(d) && (0 === I || I > 0 && d !== u[0] && d !== u[1]) && (P || d > l - 1e-12 && d < c + 1e-12) && (u[I++] = P ? d : a(d, l, c)), I;
            }
          };
        }(),
        d = {
          _id: 1,
          _pools: {},
          get: function get(t) {
            if (t) {
              var e = this._pools[t];
              return e || (e = this._pools[t] = {
                _id: 1
              }), e._id++;
            }
            return this._id++;
          }
        },
        _ = a.extend({
          _class: "Point",
          _readIndex: !0,
          initialize: function initialize(t, e) {
            var n = i(t),
              r = this.__read,
              s = 0;
            if ("number" === n) {
              var a = "number" == typeof e;
              this._set(t, a ? e : t), r && (s = a ? 2 : 1);
            } else if ("undefined" === n || null === t) this._set(0, 0), r && (s = null === t ? 1 : 0);else {
              var o = "string" === n ? t.split(/[\s,]+/) || [] : t;
              s = 1, Array.isArray(o) ? this._set(+o[0], +(o.length > 1 ? o[1] : o[0])) : "x" in o ? this._set(o.x || 0, o.y || 0) : "width" in o ? this._set(o.width || 0, o.height || 0) : "angle" in o ? (this._set(o.length || 0, 0), this.setAngle(o.angle || 0)) : (this._set(0, 0), s = 0);
            }
            return r && (this.__read = s), this;
          },
          set: "#initialize",
          _set: function _set(t, e) {
            return this.x = t, this.y = e, this;
          },
          equals: function equals(t) {
            return this === t || t && (this.x === t.x && this.y === t.y || Array.isArray(t) && this.x === t[0] && this.y === t[1]) || !1;
          },
          clone: function clone() {
            return new _(this.x, this.y);
          },
          toString: function toString() {
            var t = c.instance;
            return "{ x: " + t.number(this.x) + ", y: " + t.number(this.y) + " }";
          },
          _serialize: function _serialize(t) {
            var e = t.formatter;
            return [e.number(this.x), e.number(this.y)];
          },
          getLength: function getLength() {
            return Math.sqrt(this.x * this.x + this.y * this.y);
          },
          setLength: function setLength(t) {
            if (this.isZero()) {
              var e = this._angle || 0;
              this._set(Math.cos(e) * t, Math.sin(e) * t);
            } else {
              var n = t / this.getLength();
              f.isZero(n) && this.getAngle(), this._set(this.x * n, this.y * n);
            }
          },
          getAngle: function getAngle() {
            return 180 * this.getAngleInRadians.apply(this, arguments) / Math.PI;
          },
          setAngle: function setAngle(t) {
            this.setAngleInRadians.call(this, t * Math.PI / 180);
          },
          getAngleInDegrees: "#getAngle",
          setAngleInDegrees: "#setAngle",
          getAngleInRadians: function getAngleInRadians() {
            if (arguments.length) {
              var t = _.read(arguments),
                e = this.getLength() * t.getLength();
              if (f.isZero(e)) return NaN;
              var n = this.dot(t) / e;
              return Math.acos(n < -1 ? -1 : n > 1 ? 1 : n);
            }
            return this.isZero() ? this._angle || 0 : this._angle = Math.atan2(this.y, this.x);
          },
          setAngleInRadians: function setAngleInRadians(t) {
            if (this._angle = t, !this.isZero()) {
              var e = this.getLength();
              this._set(Math.cos(t) * e, Math.sin(t) * e);
            }
          },
          getQuadrant: function getQuadrant() {
            return this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;
          }
        }, {
          beans: !1,
          getDirectedAngle: function getDirectedAngle() {
            var t = _.read(arguments);
            return 180 * Math.atan2(this.cross(t), this.dot(t)) / Math.PI;
          },
          getDistance: function getDistance() {
            var t = arguments,
              e = _.read(t),
              n = e.x - this.x,
              i = e.y - this.y,
              r = n * n + i * i;
            return a.read(t) ? r : Math.sqrt(r);
          },
          normalize: function normalize(t) {
            t === n && (t = 1);
            var e = this.getLength(),
              i = 0 !== e ? t / e : 0,
              r = new _(this.x * i, this.y * i);
            return i >= 0 && (r._angle = this._angle), r;
          },
          rotate: function rotate(t, e) {
            if (0 === t) return this.clone();
            t = t * Math.PI / 180;
            var n = e ? this.subtract(e) : this,
              i = Math.sin(t),
              r = Math.cos(t);
            return n = new _(n.x * r - n.y * i, n.x * i + n.y * r), e ? n.add(e) : n;
          },
          transform: function transform(t) {
            return t ? t._transformPoint(this) : this;
          },
          add: function add() {
            var t = _.read(arguments);
            return new _(this.x + t.x, this.y + t.y);
          },
          subtract: function subtract() {
            var t = _.read(arguments);
            return new _(this.x - t.x, this.y - t.y);
          },
          multiply: function multiply() {
            var t = _.read(arguments);
            return new _(this.x * t.x, this.y * t.y);
          },
          divide: function divide() {
            var t = _.read(arguments);
            return new _(this.x / t.x, this.y / t.y);
          },
          modulo: function modulo() {
            var t = _.read(arguments);
            return new _(this.x % t.x, this.y % t.y);
          },
          negate: function negate() {
            return new _(-this.x, -this.y);
          },
          isInside: function isInside() {
            return m.read(arguments).contains(this);
          },
          isClose: function isClose() {
            var t = arguments,
              e = _.read(t),
              n = a.read(t);
            return this.getDistance(e) <= n;
          },
          isCollinear: function isCollinear() {
            var t = _.read(arguments);
            return _.isCollinear(this.x, this.y, t.x, t.y);
          },
          isColinear: "#isCollinear",
          isOrthogonal: function isOrthogonal() {
            var t = _.read(arguments);
            return _.isOrthogonal(this.x, this.y, t.x, t.y);
          },
          isZero: function isZero() {
            var t = f.isZero;
            return t(this.x) && t(this.y);
          },
          isNaN: function (t) {
            function e() {
              return t.apply(this, arguments);
            }
            return e.toString = function () {
              return t.toString();
            }, e;
          }(function () {
            return isNaN(this.x) || isNaN(this.y);
          }),
          isInQuadrant: function isInQuadrant(t) {
            return this.x * (t > 1 && t < 4 ? -1 : 1) >= 0 && this.y * (t > 2 ? -1 : 1) >= 0;
          },
          dot: function dot() {
            var t = _.read(arguments);
            return this.x * t.x + this.y * t.y;
          },
          cross: function cross() {
            var t = _.read(arguments);
            return this.x * t.y - this.y * t.x;
          },
          project: function project() {
            var t = _.read(arguments),
              e = t.isZero() ? 0 : this.dot(t) / t.dot(t);
            return new _(t.x * e, t.y * e);
          },
          statics: {
            min: function min() {
              var t = arguments,
                e = _.read(t),
                n = _.read(t);
              return new _(Math.min(e.x, n.x), Math.min(e.y, n.y));
            },
            max: function max() {
              var t = arguments,
                e = _.read(t),
                n = _.read(t);
              return new _(Math.max(e.x, n.x), Math.max(e.y, n.y));
            },
            random: function random() {
              return new _(Math.random(), Math.random());
            },
            isCollinear: function isCollinear(t, e, n, i) {
              return Math.abs(t * i - e * n) <= 1e-8 * Math.sqrt((t * t + e * e) * (n * n + i * i));
            },
            isOrthogonal: function isOrthogonal(t, e, n, i) {
              return Math.abs(t * n + e * i) <= 1e-8 * Math.sqrt((t * t + e * e) * (n * n + i * i));
            }
          }
        }, a.each(["round", "ceil", "floor", "abs"], function (t) {
          var e = Math[t];
          this[t] = function () {
            return new _(e(this.x), e(this.y));
          };
        }, {})),
        g = _.extend({
          initialize: function initialize(t, e, n, i) {
            this._x = t, this._y = e, this._owner = n, this._setter = i;
          },
          _set: function _set(t, e, n) {
            return this._x = t, this._y = e, n || this._owner[this._setter](this), this;
          },
          getX: function getX() {
            return this._x;
          },
          setX: function setX(t) {
            this._x = t, this._owner[this._setter](this);
          },
          getY: function getY() {
            return this._y;
          },
          setY: function setY(t) {
            this._y = t, this._owner[this._setter](this);
          },
          isSelected: function isSelected() {
            return !!(this._owner._selection & this._getSelection());
          },
          setSelected: function setSelected(t) {
            this._owner._changeSelection(this._getSelection(), t);
          },
          _getSelection: function _getSelection() {
            return "setPosition" === this._setter ? 4 : 0;
          }
        }),
        v = a.extend({
          _class: "Size",
          _readIndex: !0,
          initialize: function initialize(t, e) {
            var n = i(t),
              r = this.__read,
              s = 0;
            if ("number" === n) {
              var a = "number" == typeof e;
              this._set(t, a ? e : t), r && (s = a ? 2 : 1);
            } else if ("undefined" === n || null === t) this._set(0, 0), r && (s = null === t ? 1 : 0);else {
              var o = "string" === n ? t.split(/[\s,]+/) || [] : t;
              s = 1, Array.isArray(o) ? this._set(+o[0], +(o.length > 1 ? o[1] : o[0])) : "width" in o ? this._set(o.width || 0, o.height || 0) : "x" in o ? this._set(o.x || 0, o.y || 0) : (this._set(0, 0), s = 0);
            }
            return r && (this.__read = s), this;
          },
          set: "#initialize",
          _set: function _set(t, e) {
            return this.width = t, this.height = e, this;
          },
          equals: function equals(t) {
            return t === this || t && (this.width === t.width && this.height === t.height || Array.isArray(t) && this.width === t[0] && this.height === t[1]) || !1;
          },
          clone: function clone() {
            return new v(this.width, this.height);
          },
          toString: function toString() {
            var t = c.instance;
            return "{ width: " + t.number(this.width) + ", height: " + t.number(this.height) + " }";
          },
          _serialize: function _serialize(t) {
            var e = t.formatter;
            return [e.number(this.width), e.number(this.height)];
          },
          add: function add() {
            var t = v.read(arguments);
            return new v(this.width + t.width, this.height + t.height);
          },
          subtract: function subtract() {
            var t = v.read(arguments);
            return new v(this.width - t.width, this.height - t.height);
          },
          multiply: function multiply() {
            var t = v.read(arguments);
            return new v(this.width * t.width, this.height * t.height);
          },
          divide: function divide() {
            var t = v.read(arguments);
            return new v(this.width / t.width, this.height / t.height);
          },
          modulo: function modulo() {
            var t = v.read(arguments);
            return new v(this.width % t.width, this.height % t.height);
          },
          negate: function negate() {
            return new v(-this.width, -this.height);
          },
          isZero: function isZero() {
            var t = f.isZero;
            return t(this.width) && t(this.height);
          },
          isNaN: function (t) {
            function e() {
              return t.apply(this, arguments);
            }
            return e.toString = function () {
              return t.toString();
            }, e;
          }(function () {
            return isNaN(this.width) || isNaN(this.height);
          }),
          statics: {
            min: function min(t, e) {
              return new v(Math.min(t.width, e.width), Math.min(t.height, e.height));
            },
            max: function max(t, e) {
              return new v(Math.max(t.width, e.width), Math.max(t.height, e.height));
            },
            random: function random() {
              return new v(Math.random(), Math.random());
            }
          }
        }, a.each(["round", "ceil", "floor", "abs"], function (t) {
          var e = Math[t];
          this[t] = function () {
            return new v(e(this.width), e(this.height));
          };
        }, {})),
        p = v.extend({
          initialize: function initialize(t, e, n, i) {
            this._width = t, this._height = e, this._owner = n, this._setter = i;
          },
          _set: function _set(t, e, n) {
            return this._width = t, this._height = e, n || this._owner[this._setter](this), this;
          },
          getWidth: function getWidth() {
            return this._width;
          },
          setWidth: function setWidth(t) {
            this._width = t, this._owner[this._setter](this);
          },
          getHeight: function getHeight() {
            return this._height;
          },
          setHeight: function setHeight(t) {
            this._height = t, this._owner[this._setter](this);
          }
        }),
        m = a.extend({
          _class: "Rectangle",
          _readIndex: !0,
          beans: !0,
          initialize: function initialize(t, e, r, s) {
            var o,
              h = arguments,
              u = i(t);
            if ("number" === u ? (this._set(t, e, r, s), o = 4) : "undefined" === u || null === t ? (this._set(0, 0, 0, 0), o = null === t ? 1 : 0) : 1 === h.length && (Array.isArray(t) ? (this._set.apply(this, t), o = 1) : t.x !== n || t.width !== n ? (this._set(t.x || 0, t.y || 0, t.width || 0, t.height || 0), o = 1) : t.from === n && t.to === n && (this._set(0, 0, 0, 0), a.readSupported(h, this) && (o = 1))), o === n) {
              var l,
                c,
                f = _.readNamed(h, "from"),
                d = a.peek(h),
                g = f.x,
                p = f.y;
              if (d && d.x !== n || a.hasNamed(h, "to")) {
                var m = _.readNamed(h, "to");
                l = m.x - g, c = m.y - p, l < 0 && (g = m.x, l = -l), c < 0 && (p = m.y, c = -c);
              } else {
                var y = v.read(h);
                l = y.width, c = y.height;
              }
              this._set(g, p, l, c), o = h.__index;
            }
            var w = h.__filtered;
            return w && (this.__filtered = w), this.__read && (this.__read = o), this;
          },
          set: "#initialize",
          _set: function _set(t, e, n, i) {
            return this.x = t, this.y = e, this.width = n, this.height = i, this;
          },
          clone: function clone() {
            return new m(this.x, this.y, this.width, this.height);
          },
          equals: function equals(t) {
            var e = a.isPlainValue(t) ? m.read(arguments) : t;
            return e === this || e && this.x === e.x && this.y === e.y && this.width === e.width && this.height === e.height || !1;
          },
          toString: function toString() {
            var t = c.instance;
            return "{ x: " + t.number(this.x) + ", y: " + t.number(this.y) + ", width: " + t.number(this.width) + ", height: " + t.number(this.height) + " }";
          },
          _serialize: function _serialize(t) {
            var e = t.formatter;
            return [e.number(this.x), e.number(this.y), e.number(this.width), e.number(this.height)];
          },
          getPoint: function getPoint(t) {
            return new (t ? _ : g)(this.x, this.y, this, "setPoint");
          },
          setPoint: function setPoint() {
            var t = _.read(arguments);
            this.x = t.x, this.y = t.y;
          },
          getSize: function getSize(t) {
            return new (t ? v : p)(this.width, this.height, this, "setSize");
          },
          _fw: 1,
          _fh: 1,
          setSize: function setSize() {
            var t = v.read(arguments),
              e = this._sx,
              n = this._sy,
              i = t.width,
              r = t.height;
            e && (this.x += (this.width - i) * e), n && (this.y += (this.height - r) * n), this.width = i, this.height = r, this._fw = this._fh = 1;
          },
          getLeft: function getLeft() {
            return this.x;
          },
          setLeft: function setLeft(t) {
            if (!this._fw) {
              var e = t - this.x;
              this.width -= .5 === this._sx ? 2 * e : e;
            }
            this.x = t, this._sx = this._fw = 0;
          },
          getTop: function getTop() {
            return this.y;
          },
          setTop: function setTop(t) {
            if (!this._fh) {
              var e = t - this.y;
              this.height -= .5 === this._sy ? 2 * e : e;
            }
            this.y = t, this._sy = this._fh = 0;
          },
          getRight: function getRight() {
            return this.x + this.width;
          },
          setRight: function setRight(t) {
            if (!this._fw) {
              var e = t - this.x;
              this.width = .5 === this._sx ? 2 * e : e;
            }
            this.x = t - this.width, this._sx = 1, this._fw = 0;
          },
          getBottom: function getBottom() {
            return this.y + this.height;
          },
          setBottom: function setBottom(t) {
            if (!this._fh) {
              var e = t - this.y;
              this.height = .5 === this._sy ? 2 * e : e;
            }
            this.y = t - this.height, this._sy = 1, this._fh = 0;
          },
          getCenterX: function getCenterX() {
            return this.x + this.width / 2;
          },
          setCenterX: function setCenterX(t) {
            this._fw || .5 === this._sx ? this.x = t - this.width / 2 : (this._sx && (this.x += 2 * (t - this.x) * this._sx), this.width = 2 * (t - this.x)), this._sx = .5, this._fw = 0;
          },
          getCenterY: function getCenterY() {
            return this.y + this.height / 2;
          },
          setCenterY: function setCenterY(t) {
            this._fh || .5 === this._sy ? this.y = t - this.height / 2 : (this._sy && (this.y += 2 * (t - this.y) * this._sy), this.height = 2 * (t - this.y)), this._sy = .5, this._fh = 0;
          },
          getCenter: function getCenter(t) {
            return new (t ? _ : g)(this.getCenterX(), this.getCenterY(), this, "setCenter");
          },
          setCenter: function setCenter() {
            var t = _.read(arguments);
            return this.setCenterX(t.x), this.setCenterY(t.y), this;
          },
          getArea: function getArea() {
            return this.width * this.height;
          },
          isEmpty: function isEmpty() {
            return 0 === this.width || 0 === this.height;
          },
          contains: function contains(t) {
            return t && t.width !== n || 4 === (Array.isArray(t) ? t : arguments).length ? this._containsRectangle(m.read(arguments)) : this._containsPoint(_.read(arguments));
          },
          _containsPoint: function _containsPoint(t) {
            var e = t.x,
              n = t.y;
            return e >= this.x && n >= this.y && e <= this.x + this.width && n <= this.y + this.height;
          },
          _containsRectangle: function _containsRectangle(t) {
            var e = t.x,
              n = t.y;
            return e >= this.x && n >= this.y && e + t.width <= this.x + this.width && n + t.height <= this.y + this.height;
          },
          intersects: function intersects() {
            var t = m.read(arguments),
              e = a.read(arguments) || 0;
            return t.x + t.width > this.x - e && t.y + t.height > this.y - e && t.x < this.x + this.width + e && t.y < this.y + this.height + e;
          },
          intersect: function intersect() {
            var t = m.read(arguments),
              e = Math.max(this.x, t.x),
              n = Math.max(this.y, t.y),
              i = Math.min(this.x + this.width, t.x + t.width),
              r = Math.min(this.y + this.height, t.y + t.height);
            return new m(e, n, i - e, r - n);
          },
          unite: function unite() {
            var t = m.read(arguments),
              e = Math.min(this.x, t.x),
              n = Math.min(this.y, t.y),
              i = Math.max(this.x + this.width, t.x + t.width),
              r = Math.max(this.y + this.height, t.y + t.height);
            return new m(e, n, i - e, r - n);
          },
          include: function include() {
            var t = _.read(arguments),
              e = Math.min(this.x, t.x),
              n = Math.min(this.y, t.y),
              i = Math.max(this.x + this.width, t.x),
              r = Math.max(this.y + this.height, t.y);
            return new m(e, n, i - e, r - n);
          },
          expand: function expand() {
            var t = v.read(arguments),
              e = t.width,
              n = t.height;
            return new m(this.x - e / 2, this.y - n / 2, this.width + e, this.height + n);
          },
          scale: function scale(t, e) {
            return this.expand(this.width * t - this.width, this.height * (e === n ? t : e) - this.height);
          }
        }, a.each([["Top", "Left"], ["Top", "Right"], ["Bottom", "Left"], ["Bottom", "Right"], ["Left", "Center"], ["Top", "Center"], ["Right", "Center"], ["Bottom", "Center"]], function (t, e) {
          var n = t.join(""),
            i = /^[RL]/.test(n);
          e >= 4 && (t[1] += i ? "Y" : "X");
          var r = t[i ? 0 : 1],
            s = t[i ? 1 : 0],
            a = "get" + r,
            o = "get" + s,
            h = "set" + r,
            u = "set" + s,
            l = "set" + n;
          this["get" + n] = function (t) {
            return new (t ? _ : g)(this[a](), this[o](), this, l);
          }, this[l] = function () {
            var t = _.read(arguments);
            this[h](t.x), this[u](t.y);
          };
        }, {
          beans: !0
        })),
        y = m.extend({
          initialize: function initialize(t, e, n, i, r, s) {
            this._set(t, e, n, i, !0), this._owner = r, this._setter = s;
          },
          _set: function _set(t, e, n, i, r) {
            return this._x = t, this._y = e, this._width = n, this._height = i, r || this._owner[this._setter](this), this;
          }
        }, new function () {
          var t = m.prototype;
          return a.each(["x", "y", "width", "height"], function (t) {
            var e = a.capitalize(t),
              n = "_" + t;
            this["get" + e] = function () {
              return this[n];
            }, this["set" + e] = function (t) {
              this[n] = t, this._dontNotify || this._owner[this._setter](this);
            };
          }, a.each(["Point", "Size", "Center", "Left", "Top", "Right", "Bottom", "CenterX", "CenterY", "TopLeft", "TopRight", "BottomLeft", "BottomRight", "LeftCenter", "TopCenter", "RightCenter", "BottomCenter"], function (e) {
            var n = "set" + e;
            this[n] = function () {
              this._dontNotify = !0, t[n].apply(this, arguments), this._dontNotify = !1, this._owner[this._setter](this);
            };
          }, {
            isSelected: function isSelected() {
              return !!(2 & this._owner._selection);
            },
            setSelected: function setSelected(t) {
              var e = this._owner;
              e._changeSelection && e._changeSelection(2, t);
            }
          }));
        }()),
        w = a.extend({
          _class: "Matrix",
          initialize: function t(e, n) {
            var i = arguments,
              r = i.length,
              s = !0;
            if (r >= 6 ? this._set.apply(this, i) : 1 === r || 2 === r ? e instanceof t ? this._set(e._a, e._b, e._c, e._d, e._tx, e._ty, n) : Array.isArray(e) ? this._set.apply(this, n ? e.concat([n]) : e) : s = !1 : r ? s = !1 : this.reset(), !s) throw new Error("Unsupported matrix parameters");
            return this;
          },
          set: "#initialize",
          _set: function _set(t, e, n, i, r, s, a) {
            return this._a = t, this._b = e, this._c = n, this._d = i, this._tx = r, this._ty = s, a || this._changed(), this;
          },
          _serialize: function _serialize(t, e) {
            return a.serialize(this.getValues(), t, !0, e);
          },
          _changed: function _changed() {
            var t = this._owner;
            t && (t._applyMatrix ? t.transform(null, !0) : t._changed(25));
          },
          clone: function clone() {
            return new w(this._a, this._b, this._c, this._d, this._tx, this._ty);
          },
          equals: function equals(t) {
            return t === this || t && this._a === t._a && this._b === t._b && this._c === t._c && this._d === t._d && this._tx === t._tx && this._ty === t._ty;
          },
          toString: function toString() {
            var t = c.instance;
            return "[[" + [t.number(this._a), t.number(this._c), t.number(this._tx)].join(", ") + "], [" + [t.number(this._b), t.number(this._d), t.number(this._ty)].join(", ") + "]]";
          },
          reset: function reset(t) {
            return this._a = this._d = 1, this._b = this._c = this._tx = this._ty = 0, t || this._changed(), this;
          },
          apply: function apply(t, e) {
            var n = this._owner;
            return !!n && (n.transform(null, a.pick(t, !0), e), this.isIdentity());
          },
          translate: function translate() {
            var t = _.read(arguments),
              e = t.x,
              n = t.y;
            return this._tx += e * this._a + n * this._c, this._ty += e * this._b + n * this._d, this._changed(), this;
          },
          scale: function scale() {
            var t = arguments,
              e = _.read(t),
              n = _.read(t, 0, {
                readNull: !0
              });
            return n && this.translate(n), this._a *= e.x, this._b *= e.x, this._c *= e.y, this._d *= e.y, n && this.translate(n.negate()), this._changed(), this;
          },
          rotate: function rotate(t) {
            t *= Math.PI / 180;
            var e = _.read(arguments, 1),
              n = e.x,
              i = e.y,
              r = Math.cos(t),
              s = Math.sin(t),
              a = n - n * r + i * s,
              o = i - n * s - i * r,
              h = this._a,
              u = this._b,
              l = this._c,
              c = this._d;
            return this._a = r * h + s * l, this._b = r * u + s * c, this._c = -s * h + r * l, this._d = -s * u + r * c, this._tx += a * h + o * l, this._ty += a * u + o * c, this._changed(), this;
          },
          shear: function shear() {
            var t = arguments,
              e = _.read(t),
              n = _.read(t, 0, {
                readNull: !0
              });
            n && this.translate(n);
            var i = this._a,
              r = this._b;
            return this._a += e.y * this._c, this._b += e.y * this._d, this._c += e.x * i, this._d += e.x * r, n && this.translate(n.negate()), this._changed(), this;
          },
          skew: function skew() {
            var t = arguments,
              e = _.read(t),
              n = _.read(t, 0, {
                readNull: !0
              }),
              i = Math.PI / 180,
              r = new _(Math.tan(e.x * i), Math.tan(e.y * i));
            return this.shear(r, n);
          },
          append: function append(t, e) {
            if (t) {
              var n = this._a,
                i = this._b,
                r = this._c,
                s = this._d,
                a = t._a,
                o = t._c,
                h = t._b,
                u = t._d,
                l = t._tx,
                c = t._ty;
              this._a = a * n + h * r, this._c = o * n + u * r, this._b = a * i + h * s, this._d = o * i + u * s, this._tx += l * n + c * r, this._ty += l * i + c * s, e || this._changed();
            }
            return this;
          },
          prepend: function prepend(t, e) {
            if (t) {
              var n = this._a,
                i = this._b,
                r = this._c,
                s = this._d,
                a = this._tx,
                o = this._ty,
                h = t._a,
                u = t._c,
                l = t._b,
                c = t._d,
                f = t._tx,
                d = t._ty;
              this._a = h * n + u * i, this._c = h * r + u * s, this._b = l * n + c * i, this._d = l * r + c * s, this._tx = h * a + u * o + f, this._ty = l * a + c * o + d, e || this._changed();
            }
            return this;
          },
          appended: function appended(t) {
            return this.clone().append(t);
          },
          prepended: function prepended(t) {
            return this.clone().prepend(t);
          },
          invert: function invert() {
            var t = this._a,
              e = this._b,
              n = this._c,
              i = this._d,
              r = this._tx,
              s = this._ty,
              a = t * i - e * n,
              o = null;
            return a && !isNaN(a) && isFinite(r) && isFinite(s) && (this._a = i / a, this._b = -e / a, this._c = -n / a, this._d = t / a, this._tx = (n * s - i * r) / a, this._ty = (e * r - t * s) / a, o = this), o;
          },
          inverted: function inverted() {
            return this.clone().invert();
          },
          concatenate: "#append",
          preConcatenate: "#prepend",
          chain: "#appended",
          _shiftless: function _shiftless() {
            return new w(this._a, this._b, this._c, this._d, 0, 0);
          },
          _orNullIfIdentity: function _orNullIfIdentity() {
            return this.isIdentity() ? null : this;
          },
          isIdentity: function isIdentity() {
            return 1 === this._a && 0 === this._b && 0 === this._c && 1 === this._d && 0 === this._tx && 0 === this._ty;
          },
          isInvertible: function isInvertible() {
            var t = this._a * this._d - this._c * this._b;
            return t && !isNaN(t) && isFinite(this._tx) && isFinite(this._ty);
          },
          isSingular: function isSingular() {
            return !this.isInvertible();
          },
          transform: function transform(t, e, n) {
            return arguments.length < 3 ? this._transformPoint(_.read(arguments)) : this._transformCoordinates(t, e, n);
          },
          _transformPoint: function _transformPoint(t, e, n) {
            var i = t.x,
              r = t.y;
            return e || (e = new _()), e._set(i * this._a + r * this._c + this._tx, i * this._b + r * this._d + this._ty, n);
          },
          _transformCoordinates: function _transformCoordinates(t, e, n) {
            for (var i = 0, r = 2 * n; i < r; i += 2) {
              var s = t[i],
                a = t[i + 1];
              e[i] = s * this._a + a * this._c + this._tx, e[i + 1] = s * this._b + a * this._d + this._ty;
            }
            return e;
          },
          _transformCorners: function _transformCorners(t) {
            var e = t.x,
              n = t.y,
              i = e + t.width,
              r = n + t.height,
              s = [e, n, i, n, i, r, e, r];
            return this._transformCoordinates(s, s, 4);
          },
          _transformBounds: function _transformBounds(t, e, n) {
            for (var i = this._transformCorners(t), r = i.slice(0, 2), s = r.slice(), a = 2; a < 8; a++) {
              var o = i[a],
                h = 1 & a;
              o < r[h] ? r[h] = o : o > s[h] && (s[h] = o);
            }
            return e || (e = new m()), e._set(r[0], r[1], s[0] - r[0], s[1] - r[1], n);
          },
          inverseTransform: function inverseTransform() {
            return this._inverseTransform(_.read(arguments));
          },
          _inverseTransform: function _inverseTransform(t, e, n) {
            var i = this._a,
              r = this._b,
              s = this._c,
              a = this._d,
              o = this._tx,
              h = this._ty,
              u = i * a - r * s,
              l = null;
            if (u && !isNaN(u) && isFinite(o) && isFinite(h)) {
              var c = t.x - this._tx,
                f = t.y - this._ty;
              e || (e = new _()), l = e._set((c * a - f * s) / u, (f * i - c * r) / u, n);
            }
            return l;
          },
          decompose: function decompose() {
            var t,
              e,
              n,
              i = this._a,
              r = this._b,
              s = this._c,
              a = this._d,
              o = i * a - r * s,
              h = Math.sqrt,
              u = Math.atan2,
              l = 180 / Math.PI;
            if (0 !== i || 0 !== r) {
              var c = h(i * i + r * r);
              t = Math.acos(i / c) * (r > 0 ? 1 : -1), e = [c, o / c], n = [u(i * s + r * a, c * c), 0];
            } else if (0 !== s || 0 !== a) {
              var f = h(s * s + a * a);
              t = Math.asin(s / f) * (a > 0 ? 1 : -1), e = [o / f, f], n = [0, u(i * s + r * a, f * f)];
            } else t = 0, n = e = [0, 0];
            return {
              translation: this.getTranslation(),
              rotation: t * l,
              scaling: new _(e),
              skewing: new _(n[0] * l, n[1] * l)
            };
          },
          getValues: function getValues() {
            return [this._a, this._b, this._c, this._d, this._tx, this._ty];
          },
          getTranslation: function getTranslation() {
            return new _(this._tx, this._ty);
          },
          getScaling: function getScaling() {
            return this.decompose().scaling;
          },
          getRotation: function getRotation() {
            return this.decompose().rotation;
          },
          applyToContext: function applyToContext(t) {
            this.isIdentity() || t.transform(this._a, this._b, this._c, this._d, this._tx, this._ty);
          }
        }, a.each(["a", "b", "c", "d", "tx", "ty"], function (t) {
          var e = a.capitalize(t),
            n = "_" + t;
          this["get" + e] = function () {
            return this[n];
          }, this["set" + e] = function (t) {
            this[n] = t, this._changed();
          };
        }, {})),
        x = a.extend({
          _class: "Line",
          initialize: function initialize(t, e, n, i, r) {
            var s = !1;
            arguments.length >= 4 ? (this._px = t, this._py = e, this._vx = n, this._vy = i, s = r) : (this._px = t.x, this._py = t.y, this._vx = e.x, this._vy = e.y, s = n), s || (this._vx -= this._px, this._vy -= this._py);
          },
          getPoint: function getPoint() {
            return new _(this._px, this._py);
          },
          getVector: function getVector() {
            return new _(this._vx, this._vy);
          },
          getLength: function getLength() {
            return this.getVector().getLength();
          },
          intersect: function intersect(t, e) {
            return x.intersect(this._px, this._py, this._vx, this._vy, t._px, t._py, t._vx, t._vy, !0, e);
          },
          getSide: function getSide(t, e) {
            return x.getSide(this._px, this._py, this._vx, this._vy, t.x, t.y, !0, e);
          },
          getDistance: function getDistance(t) {
            return Math.abs(this.getSignedDistance(t));
          },
          getSignedDistance: function getSignedDistance(t) {
            return x.getSignedDistance(this._px, this._py, this._vx, this._vy, t.x, t.y, !0);
          },
          isCollinear: function isCollinear(t) {
            return _.isCollinear(this._vx, this._vy, t._vx, t._vy);
          },
          isOrthogonal: function isOrthogonal(t) {
            return _.isOrthogonal(this._vx, this._vy, t._vx, t._vy);
          },
          statics: {
            intersect: function intersect(t, e, n, i, r, s, a, o, h, u) {
              h || (n -= t, i -= e, a -= r, o -= s);
              var l = n * o - i * a;
              if (!f.isMachineZero(l)) {
                var c = t - r,
                  d = e - s,
                  g = (a * d - o * c) / l,
                  v = (n * d - i * c) / l;
                if (u || -1e-12 < g && g < 1 + 1e-12 && -1e-12 < v && v < 1 + 1e-12) return u || (g = g <= 0 ? 0 : g >= 1 ? 1 : g), new _(t + g * n, e + g * i);
              }
            },
            getSide: function getSide(t, e, n, i, r, s, a, o) {
              a || (n -= t, i -= e);
              var h = r - t,
                u = h * i - (s - e) * n;
              return !o && f.isMachineZero(u) && (u = (h * n + h * n) / (n * n + i * i)) >= 0 && u <= 1 && (u = 0), u < 0 ? -1 : u > 0 ? 1 : 0;
            },
            getSignedDistance: function getSignedDistance(t, e, n, i, r, s, a) {
              return a || (n -= t, i -= e), 0 === n ? i > 0 ? r - t : t - r : 0 === i ? n < 0 ? s - e : e - s : ((r - t) * i - (s - e) * n) / (i > n ? i * Math.sqrt(1 + n * n / (i * i)) : n * Math.sqrt(1 + i * i / (n * n)));
            },
            getDistance: function getDistance(t, e, n, i, r, s, a) {
              return Math.abs(x.getSignedDistance(t, e, n, i, r, s, a));
            }
          }
        }),
        b = u.extend({
          _class: "Project",
          _list: "projects",
          _reference: "project",
          _compactSerialize: !0,
          initialize: function initialize(t) {
            u.call(this, !0), this._children = [], this._namedChildren = {}, this._activeLayer = null, this._currentStyle = new Z(null, null, this), this._view = G.create(this, t || rt.getCanvas(1, 1)), this._selectionItems = {}, this._selectionCount = 0, this._updateVersion = 0;
          },
          _serialize: function _serialize(t, e) {
            return a.serialize(this._children, t, !0, e);
          },
          _changed: function _changed(t, e) {
            if (1 & t) {
              var n = this._view;
              n && (n._needsUpdate = !0, !n._requested && n._autoUpdate && n.requestUpdate());
            }
            var i = this._changes;
            if (i && e) {
              var r = this._changesById,
                s = e._id,
                a = r[s];
              a ? a.flags |= t : i.push(r[s] = {
                item: e,
                flags: t
              });
            }
          },
          clear: function clear() {
            for (var t = this._children, e = t.length - 1; e >= 0; e--) t[e].remove();
          },
          isEmpty: function isEmpty() {
            return !this._children.length;
          },
          remove: function t() {
            return !!t.base.call(this) && (this._view && this._view.remove(), !0);
          },
          getView: function getView() {
            return this._view;
          },
          getCurrentStyle: function getCurrentStyle() {
            return this._currentStyle;
          },
          setCurrentStyle: function setCurrentStyle(t) {
            this._currentStyle.set(t);
          },
          getIndex: function getIndex() {
            return this._index;
          },
          getOptions: function getOptions() {
            return this._scope.settings;
          },
          getLayers: function getLayers() {
            return this._children;
          },
          getActiveLayer: function getActiveLayer() {
            return this._activeLayer || new k({
              project: this,
              insert: !0
            });
          },
          getSymbolDefinitions: function getSymbolDefinitions() {
            var t = [],
              e = {};
            return this.getItems({
              class: M,
              match: function match(n) {
                var i = n._definition,
                  r = i._id;
                return e[r] || (e[r] = !0, t.push(i)), !1;
              }
            }), t;
          },
          getSymbols: "getSymbolDefinitions",
          getSelectedItems: function getSelectedItems() {
            var t = this._selectionItems,
              e = [];
            for (var n in t) {
              var i = t[n],
                r = i._selection;
              1 & r && i.isInserted() ? e.push(i) : r || this._updateSelection(i);
            }
            return e;
          },
          _updateSelection: function _updateSelection(t) {
            var e = t._id,
              n = this._selectionItems;
            t._selection ? n[e] !== t && (this._selectionCount++, n[e] = t) : n[e] === t && (this._selectionCount--, delete n[e]);
          },
          selectAll: function selectAll() {
            for (var t = this._children, e = 0, n = t.length; e < n; e++) t[e].setFullySelected(!0);
          },
          deselectAll: function deselectAll() {
            var t = this._selectionItems;
            for (var e in t) t[e].setFullySelected(!1);
          },
          addLayer: function addLayer(t) {
            return this.insertLayer(n, t);
          },
          insertLayer: function insertLayer(t, e) {
            if (e instanceof k) {
              e._remove(!1, !0), a.splice(this._children, [e], t, 0), e._setProject(this, !0);
              var n = e._name;
              n && e.setName(n), this._changes && e._changed(5), this._activeLayer || (this._activeLayer = e);
            } else e = null;
            return e;
          },
          _insertItem: function _insertItem(t, e, i) {
            return e = this.insertLayer(t, e) || (this._activeLayer || this._insertItem(n, new k(C.NO_INSERT), !0)).insertChild(t, e), i && e.activate && e.activate(), e;
          },
          getItems: function getItems(t) {
            return C._getItems(this, t);
          },
          getItem: function getItem(t) {
            return C._getItems(this, t, null, null, !0)[0] || null;
          },
          importJSON: function importJSON(t) {
            this.activate();
            var e = this._activeLayer;
            return a.importJSON(t, e && e.isEmpty() && e);
          },
          removeOn: function removeOn(t) {
            var e = this._removeSets;
            if (e) {
              "mouseup" === t && (e.mousedrag = null);
              var n = e[t];
              if (n) {
                for (var i in n) {
                  var r = n[i];
                  for (var s in e) {
                    var a = e[s];
                    a && a != n && delete a[r._id];
                  }
                  r.remove();
                }
                e[t] = null;
              }
            }
          },
          draw: function draw(t, e, n) {
            this._updateVersion++, t.save(), e.applyToContext(t);
            for (var i = this._children, r = new a({
                offset: new _(0, 0),
                pixelRatio: n,
                viewMatrix: e.isIdentity() ? null : e,
                matrices: [new w()],
                updateMatrix: !0
              }), s = 0, o = i.length; s < o; s++) i[s].draw(t, r);
            if (t.restore(), this._selectionCount > 0) {
              t.save(), t.strokeWidth = 1;
              var h = this._selectionItems,
                u = this._scope.settings.handleSize,
                l = this._updateVersion;
              for (var c in h) h[c]._drawSelection(t, e, u, h, l);
              t.restore();
            }
          }
        }),
        C = a.extend(o, {
          statics: {
            extend: function t(e) {
              return e._serializeFields && (e._serializeFields = a.set({}, this.prototype._serializeFields, e._serializeFields)), t.base.apply(this, arguments);
            },
            NO_INSERT: {
              insert: !1
            }
          },
          _class: "Item",
          _name: null,
          _applyMatrix: !0,
          _canApplyMatrix: !0,
          _canScaleStroke: !1,
          _pivot: null,
          _visible: !0,
          _blendMode: "normal",
          _opacity: 1,
          _locked: !1,
          _guide: !1,
          _clipMask: !1,
          _selection: 0,
          _selectBounds: !0,
          _selectChildren: !1,
          _serializeFields: {
            name: null,
            applyMatrix: null,
            matrix: new w(),
            pivot: null,
            visible: !0,
            blendMode: "normal",
            opacity: 1,
            locked: !1,
            guide: !1,
            clipMask: !1,
            selected: !1,
            data: {}
          },
          _prioritize: ["applyMatrix"]
        }, new function () {
          var t = ["onMouseDown", "onMouseUp", "onMouseDrag", "onClick", "onDoubleClick", "onMouseMove", "onMouseEnter", "onMouseLeave"];
          return a.each(t, function (t) {
            this._events[t] = {
              install: function install(t) {
                this.getView()._countItemEvent(t, 1);
              },
              uninstall: function uninstall(t) {
                this.getView()._countItemEvent(t, -1);
              }
            };
          }, {
            _events: {
              onFrame: {
                install: function install() {
                  this.getView()._animateItem(this, !0);
                },
                uninstall: function uninstall() {
                  this.getView()._animateItem(this, !1);
                }
              },
              onLoad: {},
              onError: {}
            },
            statics: {
              _itemHandlers: t
            }
          });
        }(), {
          initialize: function initialize() {},
          _initialize: function _initialize(t, e) {
            var i = t && a.isPlainObject(t),
              r = i && !0 === t.internal,
              s = this._matrix = new w(),
              o = i && t.project || ht.project,
              h = ht.settings;
            return this._id = r ? null : d.get(), this._parent = this._index = null, this._applyMatrix = this._canApplyMatrix && h.applyMatrix, e && s.translate(e), s._owner = this, this._style = new Z(o._currentStyle, this, o), r || i && 0 == t.insert || !h.insertItems && (!i || !0 !== t.insert) ? this._setProject(o) : (i && t.parent || o)._insertItem(n, this, !0), i && t !== C.NO_INSERT && this.set(t, {
              internal: !0,
              insert: !0,
              project: !0,
              parent: !0
            }), i;
          },
          _serialize: function _serialize(t, e) {
            var n = {},
              i = this;
            function r(r) {
              for (var s in r) {
                var o = i[s];
                a.equals(o, "leading" === s ? 1.2 * r.fontSize : r[s]) || (n[s] = a.serialize(o, t, "data" !== s, e));
              }
            }
            return r(this._serializeFields), this instanceof S || r(this._style._defaults), [this._class, n];
          },
          _changed: function _changed(t) {
            var e = this._symbol,
              i = this._parent || e,
              r = this._project;
            8 & t && (this._bounds = this._position = this._decomposed = n), 16 & t && (this._globalMatrix = n), i && 72 & t && C._clearBoundsCache(i), 2 & t && C._clearBoundsCache(this), r && r._changed(t, this), e && e._changed(t);
          },
          getId: function getId() {
            return this._id;
          },
          getName: function getName() {
            return this._name;
          },
          setName: function setName(t) {
            if (this._name && this._removeNamed(), t === +t + "") throw new Error("Names consisting only of numbers are not supported.");
            var e = this._getOwner();
            if (t && e) {
              var i = e._children,
                r = e._namedChildren;
              (r[t] = r[t] || []).push(this), t in i || (i[t] = this);
            }
            this._name = t || n, this._changed(256);
          },
          getStyle: function getStyle() {
            return this._style;
          },
          setStyle: function setStyle(t) {
            this.getStyle().set(t);
          }
        }, a.each(["locked", "visible", "blendMode", "opacity", "guide"], function (t) {
          var e = a.capitalize(t),
            n = "_" + t,
            i = {
              locked: 256,
              visible: 265
            };
          this["get" + e] = function () {
            return this[n];
          }, this["set" + e] = function (e) {
            e != this[n] && (this[n] = e, this._changed(i[t] || 257));
          };
        }, {}), {
          beans: !0,
          getSelection: function getSelection() {
            return this._selection;
          },
          setSelection: function setSelection(t) {
            if (t !== this._selection) {
              this._selection = t;
              var e = this._project;
              e && (e._updateSelection(this), this._changed(257));
            }
          },
          _changeSelection: function _changeSelection(t, e) {
            var n = this._selection;
            this.setSelection(e ? n | t : n & ~t);
          },
          isSelected: function isSelected() {
            if (this._selectChildren) for (var t = this._children, e = 0, n = t.length; e < n; e++) if (t[e].isSelected()) return !0;
            return !!(1 & this._selection);
          },
          setSelected: function setSelected(t) {
            if (this._selectChildren) for (var e = this._children, n = 0, i = e.length; n < i; n++) e[n].setSelected(t);
            this._changeSelection(1, t);
          },
          isFullySelected: function isFullySelected() {
            var t = this._children,
              e = !!(1 & this._selection);
            if (t && e) {
              for (var n = 0, i = t.length; n < i; n++) if (!t[n].isFullySelected()) return !1;
              return !0;
            }
            return e;
          },
          setFullySelected: function setFullySelected(t) {
            var e = this._children;
            if (e) for (var n = 0, i = e.length; n < i; n++) e[n].setFullySelected(t);
            this._changeSelection(1, t);
          },
          isClipMask: function isClipMask() {
            return this._clipMask;
          },
          setClipMask: function setClipMask(t) {
            this._clipMask != (t = !!t) && (this._clipMask = t, t && (this.setFillColor(null), this.setStrokeColor(null)), this._changed(257), this._parent && this._parent._changed(2048));
          },
          getData: function getData() {
            return this._data || (this._data = {}), this._data;
          },
          setData: function setData(t) {
            this._data = t;
          },
          getPosition: function getPosition(t) {
            var e = t ? _ : g,
              n = this._position || (this._position = this._getPositionFromBounds());
            return new e(n.x, n.y, this, "setPosition");
          },
          setPosition: function setPosition() {
            this.translate(_.read(arguments).subtract(this.getPosition(!0)));
          },
          _getPositionFromBounds: function _getPositionFromBounds(t) {
            return this._pivot ? this._matrix._transformPoint(this._pivot) : (t || this.getBounds()).getCenter(!0);
          },
          getPivot: function getPivot() {
            var t = this._pivot;
            return t ? new g(t.x, t.y, this, "setPivot") : null;
          },
          setPivot: function setPivot() {
            this._pivot = _.read(arguments, 0, {
              clone: !0,
              readNull: !0
            }), this._position = n;
          }
        }, a.each({
          getStrokeBounds: {
            stroke: !0
          },
          getHandleBounds: {
            handle: !0
          },
          getInternalBounds: {
            internal: !0
          }
        }, function (t, e) {
          this[e] = function (e) {
            return this.getBounds(e, t);
          };
        }, {
          beans: !0,
          getBounds: function getBounds(t, e) {
            var n = e || t instanceof w,
              i = a.set({}, n ? e : t, this._boundsOptions);
            i.stroke && !this.getStrokeScaling() || (i.cacheItem = this);
            var r = this._getCachedBounds(n && t, i).rect;
            return arguments.length ? r : new y(r.x, r.y, r.width, r.height, this, "setBounds");
          },
          setBounds: function setBounds() {
            var t = m.read(arguments),
              e = this.getBounds(),
              n = this._matrix,
              i = new w(),
              r = t.getCenter();
            i.translate(r), t.width == e.width && t.height == e.height || (n.isInvertible() || (n.set(n._backup || new w().translate(n.getTranslation())), e = this.getBounds()), i.scale(0 !== e.width ? t.width / e.width : 0, 0 !== e.height ? t.height / e.height : 0)), r = e.getCenter(), i.translate(-r.x, -r.y), this.transform(i);
          },
          _getBounds: function _getBounds(t, e) {
            var n = this._children;
            return n && n.length ? (C._updateBoundsCache(this, e.cacheItem), C._getBounds(n, t, e)) : new m();
          },
          _getBoundsCacheKey: function _getBoundsCacheKey(t, e) {
            return [t.stroke ? 1 : 0, t.handle ? 1 : 0, e ? 1 : 0].join("");
          },
          _getCachedBounds: function _getCachedBounds(t, e, n) {
            t = t && t._orNullIfIdentity();
            var i = e.internal && !n,
              r = e.cacheItem,
              s = i ? null : this._matrix._orNullIfIdentity(),
              a = r && (!t || t.equals(s)) && this._getBoundsCacheKey(e, i),
              o = this._bounds;
            if (C._updateBoundsCache(this._parent || this._symbol, r), a && o && a in o) return {
              rect: (f = o[a]).rect.clone(),
              nonscaling: f.nonscaling
            };
            var h = this._getBounds(t || s, e),
              u = h.rect || h,
              l = this._style,
              c = h.nonscaling || l.hasStroke() && !l.getStrokeScaling();
            if (a) {
              o || (this._bounds = o = {});
              var f = o[a] = {
                rect: u.clone(),
                nonscaling: c,
                internal: i
              };
            }
            return {
              rect: u,
              nonscaling: c
            };
          },
          _getStrokeMatrix: function _getStrokeMatrix(t, e) {
            var n = this.getStrokeScaling() ? null : e && e.internal ? this : this._parent || this._symbol && this._symbol._item,
              i = n ? n.getViewMatrix().invert() : t;
            return i && i._shiftless();
          },
          statics: {
            _updateBoundsCache: function _updateBoundsCache(t, e) {
              if (t && e) {
                var n = e._id,
                  i = t._boundsCache = t._boundsCache || {
                    ids: {},
                    list: []
                  };
                i.ids[n] || (i.list.push(e), i.ids[n] = e);
              }
            },
            _clearBoundsCache: function _clearBoundsCache(t) {
              var e = t._boundsCache;
              if (e) {
                t._bounds = t._position = t._boundsCache = n;
                for (var i = 0, r = e.list, s = r.length; i < s; i++) {
                  var a = r[i];
                  a !== t && (a._bounds = a._position = n, a._boundsCache && C._clearBoundsCache(a));
                }
              }
            },
            _getBounds: function _getBounds(t, e, n) {
              var i = 1 / 0,
                r = -i,
                s = i,
                a = r,
                o = !1;
              n = n || {};
              for (var h = 0, u = t.length; h < u; h++) {
                var l = t[h];
                if (l._visible && !l.isEmpty(!0)) {
                  var c = l._getCachedBounds(e && e.appended(l._matrix), n, !0),
                    f = c.rect;
                  i = Math.min(f.x, i), s = Math.min(f.y, s), r = Math.max(f.x + f.width, r), a = Math.max(f.y + f.height, a), c.nonscaling && (o = !0);
                }
              }
              return {
                rect: isFinite(i) ? new m(i, s, r - i, a - s) : new m(),
                nonscaling: o
              };
            }
          }
        }), {
          beans: !0,
          _decompose: function _decompose() {
            return this._applyMatrix ? null : this._decomposed || (this._decomposed = this._matrix.decompose());
          },
          getRotation: function getRotation() {
            var t = this._decompose();
            return t ? t.rotation : 0;
          },
          setRotation: function setRotation(t) {
            var e = this.getRotation();
            if (null != e && null != t) {
              var n = this._decomposed;
              this.rotate(t - e), n && (n.rotation = t, this._decomposed = n);
            }
          },
          getScaling: function getScaling() {
            var t = this._decompose(),
              e = t && t.scaling;
            return new g(e ? e.x : 1, e ? e.y : 1, this, "setScaling");
          },
          setScaling: function setScaling() {
            var t = this.getScaling(),
              e = _.read(arguments, 0, {
                clone: !0,
                readNull: !0
              });
            if (t && e && !t.equals(e)) {
              var n = this.getRotation(),
                i = this._decomposed,
                r = new w(),
                s = f.isZero;
              if (s(t.x) || s(t.y)) r.translate(i.translation), n && r.rotate(n), r.scale(e.x, e.y), this._matrix.set(r);else {
                var a = this.getPosition(!0);
                r.translate(a), n && r.rotate(n), r.scale(e.x / t.x, e.y / t.y), n && r.rotate(-n), r.translate(a.negate()), this.transform(r);
              }
              i && (i.scaling = e, this._decomposed = i);
            }
          },
          getMatrix: function getMatrix() {
            return this._matrix;
          },
          setMatrix: function setMatrix() {
            var t = this._matrix;
            t.set.apply(t, arguments);
          },
          getGlobalMatrix: function getGlobalMatrix(t) {
            var e = this._globalMatrix;
            if (e) for (var n = this._parent, i = []; n;) {
              if (!n._globalMatrix) {
                e = null;
                for (var r = 0, s = i.length; r < s; r++) i[r]._globalMatrix = null;
                break;
              }
              i.push(n), n = n._parent;
            }
            e || (e = this._globalMatrix = this._matrix.clone(), (n = this._parent) && e.prepend(n.getGlobalMatrix(!0)));
            return t ? e : e.clone();
          },
          getViewMatrix: function getViewMatrix() {
            return this.getGlobalMatrix().prepend(this.getView()._matrix);
          },
          getApplyMatrix: function getApplyMatrix() {
            return this._applyMatrix;
          },
          setApplyMatrix: function setApplyMatrix(t) {
            (this._applyMatrix = this._canApplyMatrix && !!t) && this.transform(null, !0);
          },
          getTransformContent: "#getApplyMatrix",
          setTransformContent: "#setApplyMatrix"
        }, {
          getProject: function getProject() {
            return this._project;
          },
          _setProject: function _setProject(t, e) {
            if (this._project !== t) {
              this._project && this._installEvents(!1), this._project = t;
              for (var n = this._children, i = 0, r = n && n.length; i < r; i++) n[i]._setProject(t);
              e = !0;
            }
            e && this._installEvents(!0);
          },
          getView: function getView() {
            return this._project._view;
          },
          _installEvents: function t(e) {
            t.base.call(this, e);
            for (var n = this._children, i = 0, r = n && n.length; i < r; i++) n[i]._installEvents(e);
          },
          getLayer: function getLayer() {
            for (var t = this; t = t._parent;) if (t instanceof k) return t;
            return null;
          },
          getParent: function getParent() {
            return this._parent;
          },
          setParent: function setParent(t) {
            return t.addChild(this);
          },
          _getOwner: "#getParent",
          getChildren: function getChildren() {
            return this._children;
          },
          setChildren: function setChildren(t) {
            this.removeChildren(), this.addChildren(t);
          },
          getFirstChild: function getFirstChild() {
            return this._children && this._children[0] || null;
          },
          getLastChild: function getLastChild() {
            return this._children && this._children[this._children.length - 1] || null;
          },
          getNextSibling: function getNextSibling() {
            var t = this._getOwner();
            return t && t._children[this._index + 1] || null;
          },
          getPreviousSibling: function getPreviousSibling() {
            var t = this._getOwner();
            return t && t._children[this._index - 1] || null;
          },
          getIndex: function getIndex() {
            return this._index;
          },
          equals: function equals(t) {
            return t === this || t && this._class === t._class && this._style.equals(t._style) && this._matrix.equals(t._matrix) && this._locked === t._locked && this._visible === t._visible && this._blendMode === t._blendMode && this._opacity === t._opacity && this._clipMask === t._clipMask && this._guide === t._guide && this._equals(t) || !1;
          },
          _equals: function _equals(t) {
            return a.equals(this._children, t._children);
          },
          clone: function clone(t) {
            var e = new this.constructor(C.NO_INSERT),
              i = this._children,
              r = a.pick(t ? t.insert : n, t === n || !0 === t),
              s = a.pick(t ? t.deep : n, !0);
            i && e.copyAttributes(this), i && !s || e.copyContent(this), i || e.copyAttributes(this), r && e.insertAbove(this);
            var o = this._name,
              h = this._parent;
            if (o && h) {
              i = h._children;
              for (var u = o, l = 1; i[o];) o = u + " " + l++;
              o !== u && e.setName(o);
            }
            return e;
          },
          copyContent: function copyContent(t) {
            for (var e = t._children, n = 0, i = e && e.length; n < i; n++) this.addChild(e[n].clone(!1), !0);
          },
          copyAttributes: function copyAttributes(t, e) {
            this.setStyle(t._style);
            for (var n = ["_locked", "_visible", "_blendMode", "_opacity", "_clipMask", "_guide"], i = 0, r = n.length; i < r; i++) {
              var s = n[i];
              t.hasOwnProperty(s) && (this[s] = t[s]);
            }
            e || this._matrix.set(t._matrix, !0), this.setApplyMatrix(t._applyMatrix), this.setPivot(t._pivot), this.setSelection(t._selection);
            var o = t._data,
              h = t._name;
            this._data = o ? a.clone(o) : null, h && this.setName(h);
          },
          rasterize: function rasterize(t, e) {
            var i = this.getStrokeBounds(),
              r = (t || this.getView().getResolution()) / 72,
              s = i.getTopLeft().floor(),
              o = i.getBottomRight().ceil(),
              h = new v(o.subtract(s)),
              u = new P(C.NO_INSERT);
            if (!h.isZero()) {
              var l = rt.getCanvas(h.multiply(r)),
                c = l.getContext("2d"),
                f = new w().scale(r).translate(s.negate());
              c.save(), f.applyToContext(c), this.draw(c, new a({
                matrices: [f]
              })), c.restore(), u.setCanvas(l);
            }
            return u.transform(new w().translate(s.add(h.divide(2))).scale(1 / r)), (e === n || e) && u.insertAbove(this), u;
          },
          contains: function contains() {
            var t = this._matrix;
            return t.isInvertible() && !!this._contains(t._inverseTransform(_.read(arguments)));
          },
          _contains: function _contains(t) {
            var e = this._children;
            if (e) {
              for (var n = e.length - 1; n >= 0; n--) if (e[n].contains(t)) return !0;
              return !1;
            }
            return t.isInside(this.getInternalBounds());
          },
          isInside: function isInside() {
            return m.read(arguments).contains(this.getBounds());
          },
          _asPathItem: function _asPathItem() {
            return new B.Rectangle({
              rectangle: this.getInternalBounds(),
              matrix: this._matrix,
              insert: !1
            });
          },
          intersects: function intersects(t, e) {
            return t instanceof C && this._asPathItem().getIntersections(t._asPathItem(), null, e, !0).length > 0;
          }
        }, new function () {
          function t() {
            var t = arguments;
            return this._hitTest(_.read(t), T.getOptions(t));
          }
          function e() {
            var t = arguments,
              e = _.read(t),
              n = T.getOptions(t),
              i = [];
            return this._hitTest(e, new a({
              all: i
            }, n)), i;
          }
          function n(t, e, n, i) {
            var r = this._children;
            if (r) for (var s = r.length - 1; s >= 0; s--) {
              var a = r[s],
                o = a !== i && a._hitTest(t, e, n);
              if (o && !e.all) return o;
            }
            return null;
          }
          return b.inject({
            hitTest: t,
            hitTestAll: e,
            _hitTest: n
          }), {
            hitTest: t,
            hitTestAll: e,
            _hitTestChildren: n
          };
        }(), {
          _hitTest: function _hitTest(t, e, n) {
            if (this._locked || !this._visible || this._guide && !e.guides || this.isEmpty()) return null;
            var i = this._matrix,
              r = n ? n.appended(i) : this.getGlobalMatrix().prepend(this.getView()._matrix),
              s = Math.max(e.tolerance, 1e-12),
              o = e._tolerancePadding = new v(B._getStrokePadding(s, i._shiftless().invert()));
            if (!(t = i._inverseTransform(t)) || !this._children && !this.getBounds({
              internal: !0,
              stroke: !0,
              handle: !0
            }).expand(o.multiply(2))._containsPoint(t)) return null;
            var h,
              u,
              l = !(e.guides && !this._guide || e.selected && !this.isSelected() || e.type && e.type !== a.hyphenate(this._class) || e.class && !(this instanceof e.class)),
              c = e.match,
              f = this;
            function d(t) {
              return t && c && !c(t) && (t = null), t && e.all && e.all.push(t), t;
            }
            function _(e, n) {
              var i = n ? h["get" + n]() : f.getPosition();
              if (t.subtract(i).divide(o).length <= 1) return new T(e, f, {
                name: n ? a.hyphenate(n) : e,
                point: i
              });
            }
            var g = e.position,
              p = e.center,
              m = e.bounds;
            if (l && this._parent && (g || p || m)) {
              if ((p || m) && (h = this.getInternalBounds()), !(u = g && _("position") || p && _("center", "Center")) && m) for (var y = ["TopLeft", "TopRight", "BottomLeft", "BottomRight", "LeftCenter", "TopCenter", "RightCenter", "BottomCenter"], w = 0; w < 8 && !u; w++) u = _("bounds", y[w]);
              u = d(u);
            }
            return u || (u = this._hitTestChildren(t, e, r) || l && d(this._hitTestSelf(t, e, r, this.getStrokeScaling() ? null : r._shiftless().invert())) || null), u && u.point && (u.point = i.transform(u.point)), u;
          },
          _hitTestSelf: function _hitTestSelf(t, e) {
            if (e.fill && this.hasFill() && this._contains(t)) return new T("fill", this);
          },
          matches: function matches(t, e) {
            var n = i(t);
            if ("object" === n) {
              for (var r in t) if (t.hasOwnProperty(r) && !this.matches(r, t[r])) return !1;
              return !0;
            }
            if ("function" === n) return t(this);
            if ("match" === t) return e(this);
            var s = /^(empty|editable)$/.test(t) ? this["is" + a.capitalize(t)]() : "type" === t ? a.hyphenate(this._class) : this[t];
            if ("class" === t) {
              if ("function" == typeof e) return this instanceof e;
              s = this._class;
            }
            if ("function" == typeof e) return !!e(s);
            if (e) {
              if (e.test) return e.test(s);
              if (a.isPlainObject(e)) return function t(e, n) {
                for (var i in e) if (e.hasOwnProperty(i)) {
                  var r = e[i],
                    s = n[i];
                  if (a.isPlainObject(r) && a.isPlainObject(s)) {
                    if (!t(r, s)) return !1;
                  } else if (!a.equals(r, s)) return !1;
                }
                return !0;
              }(e, s);
            }
            return a.equals(s, e);
          },
          getItems: function getItems(t) {
            return C._getItems(this, t, this._matrix);
          },
          getItem: function getItem(t) {
            return C._getItems(this, t, this._matrix, null, !0)[0] || null;
          },
          statics: {
            _getItems: function t(e, n, r, s, o) {
              if (!s) {
                var h = "object" === i(n) && n,
                  u = h && h.overlapping,
                  l = h && h.inside,
                  c = (x = u || l) && m.read([x]);
                s = {
                  items: [],
                  recursive: h && !1 !== h.recursive,
                  inside: !!l,
                  overlapping: !!u,
                  rect: c,
                  path: u && new B.Rectangle({
                    rectangle: c,
                    insert: !1
                  })
                }, h && (n = a.filter({}, n, {
                  recursive: !0,
                  inside: !0,
                  overlapping: !0
                }));
              }
              var f = e._children,
                d = s.items;
              r = (c = s.rect) && (r || new w());
              for (var _ = 0, g = f && f.length; _ < g; _++) {
                var v = f[_],
                  p = r && r.appended(v._matrix),
                  y = !0;
                if (c) {
                  var x = v.getBounds(p);
                  if (!c.intersects(x)) continue;
                  c.contains(x) || s.overlapping && (x.contains(c) || s.path.intersects(v, p)) || (y = !1);
                }
                if (y && v.matches(n) && (d.push(v), o)) break;
                if (!1 !== s.recursive && t(v, n, p, s, o), o && d.length > 0) break;
              }
              return d;
            }
          }
        }, {
          importJSON: function importJSON(t) {
            var e = a.importJSON(t, this);
            return e !== this ? this.addChild(e) : e;
          },
          addChild: function addChild(t) {
            return this.insertChild(n, t);
          },
          insertChild: function insertChild(t, e) {
            var n = e ? this.insertChildren(t, [e]) : null;
            return n && n[0];
          },
          addChildren: function addChildren(t) {
            return this.insertChildren(this._children.length, t);
          },
          insertChildren: function insertChildren(t, e) {
            var n = this._children;
            if (n && e && e.length > 0) {
              for (var i = {}, r = (e = a.slice(e)).length - 1; r >= 0; r--) {
                var s = (l = e[r]) && l._id;
                !l || i[s] ? e.splice(r, 1) : (l._remove(!1, !0), i[s] = !0);
              }
              a.splice(n, e, t, 0);
              for (var o = this._project, h = o._changes, u = (r = 0, e.length); r < u; r++) {
                var l,
                  c = (l = e[r])._name;
                l._parent = this, l._setProject(o, !0), c && l.setName(c), h && l._changed(5);
              }
              this._changed(11);
            } else e = null;
            return e;
          },
          _insertItem: "#insertChild",
          _insertAt: function _insertAt(t, e) {
            var n = t && t._getOwner(),
              i = t !== this && n ? this : null;
            return i && (i._remove(!1, !0), n._insertItem(t._index + e, i)), i;
          },
          insertAbove: function insertAbove(t) {
            return this._insertAt(t, 1);
          },
          insertBelow: function insertBelow(t) {
            return this._insertAt(t, 0);
          },
          sendToBack: function sendToBack() {
            var t = this._getOwner();
            return t ? t._insertItem(0, this) : null;
          },
          bringToFront: function bringToFront() {
            var t = this._getOwner();
            return t ? t._insertItem(n, this) : null;
          },
          appendTop: "#addChild",
          appendBottom: function appendBottom(t) {
            return this.insertChild(0, t);
          },
          moveAbove: "#insertAbove",
          moveBelow: "#insertBelow",
          addTo: function addTo(t) {
            return t._insertItem(n, this);
          },
          copyTo: function copyTo(t) {
            return this.clone(!1).addTo(t);
          },
          reduce: function reduce(t) {
            var e = this._children;
            if (e && 1 === e.length) {
              var n = e[0].reduce(t);
              return this._parent ? (n.insertAbove(this), this.remove()) : n.remove(), n;
            }
            return this;
          },
          _removeNamed: function _removeNamed() {
            var t = this._getOwner();
            if (t) {
              var e = t._children,
                n = t._namedChildren,
                i = this._name,
                r = n[i],
                s = r ? r.indexOf(this) : -1;
              -1 !== s && (e[i] == this && delete e[i], r.splice(s, 1), r.length ? e[i] = r[0] : delete n[i]);
            }
          },
          _remove: function _remove(t, e) {
            var n = this._getOwner(),
              i = this._project,
              r = this._index;
            return this._style && this._style._dispose(), !!n && (this._name && this._removeNamed(), null != r && (i._activeLayer === this && (i._activeLayer = this.getNextSibling() || this.getPreviousSibling()), a.splice(n._children, null, r, 1)), this._installEvents(!1), t && i._changes && this._changed(5), e && n._changed(11, this), this._parent = null, !0);
          },
          remove: function remove() {
            return this._remove(!0, !0);
          },
          replaceWith: function replaceWith(t) {
            var e = t && t.insertBelow(this);
            return e && this.remove(), e;
          },
          removeChildren: function removeChildren(t, e) {
            if (!this._children) return null;
            t = t || 0, e = a.pick(e, this._children.length);
            for (var n = a.splice(this._children, null, t, e - t), i = n.length - 1; i >= 0; i--) n[i]._remove(!0, !1);
            return n.length > 0 && this._changed(11), n;
          },
          clear: "#removeChildren",
          reverseChildren: function reverseChildren() {
            if (this._children) {
              this._children.reverse();
              for (var t = 0, e = this._children.length; t < e; t++) this._children[t]._index = t;
              this._changed(11);
            }
          },
          isEmpty: function isEmpty(t) {
            var e = this._children,
              n = e ? e.length : 0;
            if (t) {
              for (var i = 0; i < n; i++) if (!e[i].isEmpty(t)) return !1;
              return !0;
            }
            return !n;
          },
          isEditable: function isEditable() {
            for (var t = this; t;) {
              if (!t._visible || t._locked) return !1;
              t = t._parent;
            }
            return !0;
          },
          hasFill: function hasFill() {
            return this.getStyle().hasFill();
          },
          hasStroke: function hasStroke() {
            return this.getStyle().hasStroke();
          },
          hasShadow: function hasShadow() {
            return this.getStyle().hasShadow();
          },
          _getOrder: function _getOrder(t) {
            function e(t) {
              var e = [];
              do {
                e.unshift(t);
              } while (t = t._parent);
              return e;
            }
            for (var n = e(this), i = e(t), r = 0, s = Math.min(n.length, i.length); r < s; r++) if (n[r] != i[r]) return n[r]._index < i[r]._index ? 1 : -1;
            return 0;
          },
          hasChildren: function hasChildren() {
            return this._children && this._children.length > 0;
          },
          isInserted: function isInserted() {
            return !!this._parent && this._parent.isInserted();
          },
          isAbove: function isAbove(t) {
            return -1 === this._getOrder(t);
          },
          isBelow: function isBelow(t) {
            return 1 === this._getOrder(t);
          },
          isParent: function isParent(t) {
            return this._parent === t;
          },
          isChild: function isChild(t) {
            return t && t._parent === this;
          },
          isDescendant: function isDescendant(t) {
            for (var e = this; e = e._parent;) if (e === t) return !0;
            return !1;
          },
          isAncestor: function isAncestor(t) {
            return !!t && t.isDescendant(this);
          },
          isSibling: function isSibling(t) {
            return this._parent === t._parent;
          },
          isGroupedWith: function isGroupedWith(t) {
            for (var e = this._parent; e;) {
              if (e._parent && /^(Group|Layer|CompoundPath)$/.test(e._class) && t.isDescendant(e)) return !0;
              e = e._parent;
            }
            return !1;
          }
        }, a.each(["rotate", "scale", "shear", "skew"], function (t) {
          var e = "rotate" === t;
          this[t] = function () {
            var n = arguments,
              i = (e ? a : _).read(n),
              r = _.read(n, 0, {
                readNull: !0
              });
            return this.transform(new w()[t](i, r || this.getPosition(!0)));
          };
        }, {
          translate: function translate() {
            var t = new w();
            return this.transform(t.translate.apply(t, arguments));
          },
          transform: function transform(t, e, n) {
            var i = this._matrix,
              r = t && !t.isIdentity(),
              s = n && this._canApplyMatrix || this._applyMatrix && (r || !i.isIdentity() || e && this._children);
            if (!r && !s) return this;
            if (r) {
              !t.isInvertible() && i.isInvertible() && (i._backup = i.getValues()), i.prepend(t, !0);
              var a = this._style,
                o = a.getFillColor(!0),
                h = a.getStrokeColor(!0);
              o && o.transform(t), h && h.transform(t);
            }
            if (s && (s = this._transformContent(i, e, n))) {
              var u = this._pivot;
              u && i._transformPoint(u, u, !0), i.reset(!0), n && this._canApplyMatrix && (this._applyMatrix = !0);
            }
            var l = this._bounds,
              c = this._position;
            (r || s) && this._changed(25);
            var f = r && l && t.decompose();
            if (f && f.skewing.isZero() && f.rotation % 90 == 0) {
              for (var d in l) {
                var _ = l[d];
                if (_.nonscaling) delete l[d];else if (s || !_.internal) {
                  var g = _.rect;
                  t._transformBounds(g, g);
                }
              }
              this._bounds = l;
              var v = l[this._getBoundsCacheKey(this._boundsOptions || {})];
              v && (this._position = this._getPositionFromBounds(v.rect));
            } else r && c && this._pivot && (this._position = t._transformPoint(c, c));
            return this;
          },
          _transformContent: function _transformContent(t, e, n) {
            var i = this._children;
            if (i) {
              for (var r = 0, s = i.length; r < s; r++) i[r].transform(t, e, n);
              return !0;
            }
          },
          globalToLocal: function globalToLocal() {
            return this.getGlobalMatrix(!0)._inverseTransform(_.read(arguments));
          },
          localToGlobal: function localToGlobal() {
            return this.getGlobalMatrix(!0)._transformPoint(_.read(arguments));
          },
          parentToLocal: function parentToLocal() {
            return this._matrix._inverseTransform(_.read(arguments));
          },
          localToParent: function localToParent() {
            return this._matrix._transformPoint(_.read(arguments));
          },
          fitBounds: function fitBounds(t, e) {
            t = m.read(arguments);
            var n = this.getBounds(),
              i = n.height / n.width,
              r = t.height / t.width,
              s = (e ? i > r : i < r) ? t.width / n.width : t.height / n.height,
              a = new m(new _(), new v(n.width * s, n.height * s));
            a.setCenter(t.getCenter()), this.setBounds(a);
          }
        }), {
          _setStyles: function _setStyles(t, e, n) {
            var i = this._style,
              r = this._matrix;
            if (i.hasFill() && (t.fillStyle = i.getFillColor().toCanvasStyle(t, r)), i.hasStroke()) {
              t.strokeStyle = i.getStrokeColor().toCanvasStyle(t, r), t.lineWidth = i.getStrokeWidth();
              var s = i.getStrokeJoin(),
                a = i.getStrokeCap(),
                o = i.getMiterLimit();
              if (s && (t.lineJoin = s), a && (t.lineCap = a), o && (t.miterLimit = o), ht.support.nativeDash) {
                var h = i.getDashArray(),
                  u = i.getDashOffset();
                h && h.length && ("setLineDash" in t ? (t.setLineDash(h), t.lineDashOffset = u) : (t.mozDash = h, t.mozDashOffset = u));
              }
            }
            if (i.hasShadow()) {
              var l = e.pixelRatio || 1,
                c = n._shiftless().prepend(new w().scale(l, l)),
                f = c.transform(new _(i.getShadowBlur(), 0)),
                d = c.transform(this.getShadowOffset());
              t.shadowColor = i.getShadowColor().toCanvasStyle(t), t.shadowBlur = f.getLength(), t.shadowOffsetX = d.x, t.shadowOffsetY = d.y;
            }
          },
          draw: function draw(t, e, n) {
            this._updateVersion = this._project._updateVersion;
            if (this._visible && 0 !== this._opacity) {
              var i = e.matrices,
                r = e.viewMatrix,
                s = this._matrix,
                a = i[i.length - 1].appended(s);
              if (a.isInvertible()) {
                r = r ? r.appended(a) : a, i.push(a), e.updateMatrix && (this._globalMatrix = a);
                var o,
                  h,
                  u,
                  l = this._blendMode,
                  c = f.clamp(this._opacity, 0, 1),
                  d = "normal" === l,
                  _ = st.nativeModes[l],
                  g = d && 1 === c || e.dontStart || e.clip || (_ || d && c < 1) && this._canComposite(),
                  v = e.pixelRatio || 1;
                if (!g) {
                  var p = this.getStrokeBounds(r);
                  if (!p.width || !p.height) return void i.pop();
                  u = e.offset, h = e.offset = p.getTopLeft().floor(), o = t, t = rt.getContext(p.getSize().ceil().add(1).multiply(v)), 1 !== v && t.scale(v, v);
                }
                t.save();
                var m = n ? n.appended(s) : this._canScaleStroke && !this.getStrokeScaling(!0) && r,
                  y = !g && e.clipItem,
                  w = !m || y;
                if (g ? (t.globalAlpha = c, _ && (t.globalCompositeOperation = l)) : w && t.translate(-h.x, -h.y), w && (g ? s : r).applyToContext(t), y && e.clipItem.draw(t, e.extend({
                  clip: !0
                })), m) {
                  t.setTransform(v, 0, 0, v, 0, 0);
                  var x = e.offset;
                  x && t.translate(-x.x, -x.y);
                }
                this._draw(t, e, r, m), t.restore(), i.pop(), e.clip && !e.dontFinish && t.clip(this.getFillRule()), g || (st.process(l, t, o, c, h.subtract(u).multiply(v)), rt.release(t), e.offset = u);
              }
            }
          },
          _isUpdated: function _isUpdated(t) {
            var e = this._parent;
            if (e instanceof F) return e._isUpdated(t);
            var n = this._updateVersion === t;
            return !n && e && e._visible && e._isUpdated(t) && (this._updateVersion = t, n = !0), n;
          },
          _drawSelection: function _drawSelection(t, e, n, i, r) {
            var s = this._selection,
              a = 1 & s,
              o = 2 & s || a && this._selectBounds,
              h = 4 & s;
            if (this._drawSelected || (a = !1), (a || o || h) && this._isUpdated(r)) {
              var u,
                l = this.getSelectedColor(!0) || (u = this.getLayer()) && u.getSelectedColor(!0),
                c = e.appended(this.getGlobalMatrix(!0)),
                f = n / 2;
              if (t.strokeStyle = t.fillStyle = l ? l.toCanvasStyle(t) : "#009dec", a && this._drawSelected(t, c, i), h) {
                var d = this.getPosition(!0),
                  _ = this._parent,
                  g = _ ? _.localToGlobal(d) : d,
                  v = g.x,
                  p = g.y;
                t.beginPath(), t.arc(v, p, f, 0, 2 * Math.PI, !0), t.stroke();
                for (var m = [[0, -1], [1, 0], [0, 1], [-1, 0]], y = f, w = n + 1, x = 0; x < 4; x++) {
                  var b = m[x],
                    C = b[0],
                    S = b[1];
                  t.moveTo(v + C * y, p + S * y), t.lineTo(v + C * w, p + S * w), t.stroke();
                }
              }
              if (o) {
                var k = c._transformCorners(this.getInternalBounds());
                t.beginPath();
                for (x = 0; x < 8; x++) t[x ? "lineTo" : "moveTo"](k[x], k[++x]);
                t.closePath(), t.stroke();
                for (x = 0; x < 8; x++) t.fillRect(k[x] - f, k[++x] - f, n, n);
              }
            }
          },
          _canComposite: function _canComposite() {
            return !1;
          }
        }, a.each(["down", "drag", "up", "move"], function (t) {
          this["removeOn" + a.capitalize(t)] = function () {
            var e = {};
            return e[t] = !0, this.removeOn(e);
          };
        }, {
          removeOn: function removeOn(t) {
            for (var e in t) if (t[e]) {
              var n = "mouse" + e,
                i = this._project,
                r = i._removeSets = i._removeSets || {};
              r[n] = r[n] || {}, r[n][this._id] = this;
            }
            return this;
          }
        }), {
          tween: function tween(t, e, n) {
            n || (n = e, e = t, t = null, n || (n = e, e = null));
            var i = n && n.easing,
              r = n && n.start,
              s = null != n && ("number" == typeof n ? n : n.duration),
              a = new nt(this, t, e, s, i, r);
            return s && this.on("frame", function t(e) {
              a._handleFrame(1e3 * e.time), a.running || this.off("frame", t);
            }), a;
          },
          tweenTo: function tweenTo(t, e) {
            return this.tween(null, t, e);
          },
          tweenFrom: function tweenFrom(t, e) {
            return this.tween(t, null, e);
          }
        }),
        S = C.extend({
          _class: "Group",
          _selectBounds: !1,
          _selectChildren: !0,
          _serializeFields: {
            children: []
          },
          initialize: function initialize(t) {
            this._children = [], this._namedChildren = {}, this._initialize(t) || this.addChildren(Array.isArray(t) ? t : arguments);
          },
          _changed: function t(e) {
            t.base.call(this, e), 2050 & e && (this._clipItem = n);
          },
          _getClipItem: function _getClipItem() {
            var t = this._clipItem;
            if (t === n) {
              t = null;
              for (var e = this._children, i = 0, r = e.length; i < r; i++) if (e[i]._clipMask) {
                t = e[i];
                break;
              }
              this._clipItem = t;
            }
            return t;
          },
          isClipped: function isClipped() {
            return !!this._getClipItem();
          },
          setClipped: function setClipped(t) {
            var e = this.getFirstChild();
            e && e.setClipMask(t);
          },
          _getBounds: function t(e, n) {
            var i = this._getClipItem();
            return i ? i._getCachedBounds(i._matrix.prepended(e), a.set({}, n, {
              stroke: !1
            })) : t.base.call(this, e, n);
          },
          _hitTestChildren: function t(e, n, i) {
            var r = this._getClipItem();
            return (!r || r.contains(e)) && t.base.call(this, e, n, i, r);
          },
          _draw: function _draw(t, e) {
            var n = e.clip,
              i = !n && this._getClipItem();
            e = e.extend({
              clipItem: i,
              clip: !1
            }), n ? (t.beginPath(), e.dontStart = e.dontFinish = !0) : i && i.draw(t, e.extend({
              clip: !0
            }));
            for (var r = this._children, s = 0, a = r.length; s < a; s++) {
              var o = r[s];
              o !== i && o.draw(t, e);
            }
          }
        }),
        k = S.extend({
          _class: "Layer",
          initialize: function initialize() {
            S.apply(this, arguments);
          },
          _getOwner: function _getOwner() {
            return this._parent || null != this._index && this._project;
          },
          isInserted: function t() {
            return this._parent ? t.base.call(this) : null != this._index;
          },
          activate: function activate() {
            this._project._activeLayer = this;
          },
          _hitTestSelf: function _hitTestSelf() {}
        }),
        I = C.extend({
          _class: "Shape",
          _applyMatrix: !1,
          _canApplyMatrix: !1,
          _canScaleStroke: !0,
          _serializeFields: {
            type: null,
            size: null,
            radius: null
          },
          initialize: function initialize(t, e) {
            this._initialize(t, e);
          },
          _equals: function _equals(t) {
            return this._type === t._type && this._size.equals(t._size) && a.equals(this._radius, t._radius);
          },
          copyContent: function copyContent(t) {
            this.setType(t._type), this.setSize(t._size), this.setRadius(t._radius);
          },
          getType: function getType() {
            return this._type;
          },
          setType: function setType(t) {
            this._type = t;
          },
          getShape: "#getType",
          setShape: "#setType",
          getSize: function getSize() {
            var t = this._size;
            return new p(t.width, t.height, this, "setSize");
          },
          setSize: function setSize() {
            var t = v.read(arguments);
            if (this._size) {
              if (!this._size.equals(t)) {
                var e = this._type,
                  n = t.width,
                  i = t.height;
                "rectangle" === e ? this._radius.set(v.min(this._radius, t.divide(2).abs())) : "circle" === e ? (n = i = (n + i) / 2, this._radius = n / 2) : "ellipse" === e && this._radius._set(n / 2, i / 2), this._size._set(n, i), this._changed(9);
              }
            } else this._size = t.clone();
          },
          getRadius: function getRadius() {
            var t = this._radius;
            return "circle" === this._type ? t : new p(t.width, t.height, this, "setRadius");
          },
          setRadius: function setRadius(t) {
            var e = this._type;
            if ("circle" === e) {
              if (t === this._radius) return;
              var n = 2 * t;
              this._radius = t, this._size._set(n, n);
            } else if (t = v.read(arguments), this._radius) {
              if (this._radius.equals(t)) return;
              if (this._radius.set(t), "rectangle" === e) {
                n = v.max(this._size, t.multiply(2));
                this._size.set(n);
              } else "ellipse" === e && this._size._set(2 * t.width, 2 * t.height);
            } else this._radius = t.clone();
            this._changed(9);
          },
          isEmpty: function isEmpty() {
            return !1;
          },
          toPath: function toPath(t) {
            var e = new B[a.capitalize(this._type)]({
              center: new _(),
              size: this._size,
              radius: this._radius,
              insert: !1
            });
            return e.copyAttributes(this), ht.settings.applyMatrix && e.setApplyMatrix(!0), (t === n || t) && e.insertAbove(this), e;
          },
          toShape: "#clone",
          _asPathItem: function _asPathItem() {
            return this.toPath(!1);
          },
          _draw: function _draw(t, e, n, i) {
            var r = this._style,
              s = r.hasFill(),
              a = r.hasStroke(),
              o = e.dontFinish || e.clip,
              h = !i;
            if (s || a || o) {
              var u = this._type,
                l = this._radius,
                c = "circle" === u;
              if (e.dontStart || t.beginPath(), h && c) t.arc(0, 0, l, 0, 2 * Math.PI, !0);else {
                var f = c ? l : l.width,
                  d = c ? l : l.height,
                  _ = this._size,
                  g = _.width,
                  v = _.height;
                if (h && "rectangle" === u && 0 === f && 0 === d) t.rect(-g / 2, -v / 2, g, v);else {
                  var p = g / 2,
                    m = v / 2,
                    y = .44771525016920644,
                    w = f * y,
                    x = d * y,
                    b = [-p, -m + d, -p, -m + x, -p + w, -m, -p + f, -m, p - f, -m, p - w, -m, p, -m + x, p, -m + d, p, m - d, p, m - x, p - w, m, p - f, m, -p + f, m, -p + w, m, -p, m - x, -p, m - d];
                  i && i.transform(b, b, 32), t.moveTo(b[0], b[1]), t.bezierCurveTo(b[2], b[3], b[4], b[5], b[6], b[7]), p !== f && t.lineTo(b[8], b[9]), t.bezierCurveTo(b[10], b[11], b[12], b[13], b[14], b[15]), m !== d && t.lineTo(b[16], b[17]), t.bezierCurveTo(b[18], b[19], b[20], b[21], b[22], b[23]), p !== f && t.lineTo(b[24], b[25]), t.bezierCurveTo(b[26], b[27], b[28], b[29], b[30], b[31]);
                }
              }
              t.closePath();
            }
            o || !s && !a || (this._setStyles(t, e, n), s && (t.fill(r.getFillRule()), t.shadowColor = "rgba(0,0,0,0)"), a && t.stroke());
          },
          _canComposite: function _canComposite() {
            return !(this.hasFill() && this.hasStroke());
          },
          _getBounds: function _getBounds(t, e) {
            var n = new m(this._size).setCenter(0, 0),
              i = this._style,
              r = e.stroke && i.hasStroke() && i.getStrokeWidth();
            return t && (n = t._transformBounds(n)), r ? n.expand(B._getStrokePadding(r, this._getStrokeMatrix(t, e))) : n;
          }
        }, new function () {
          function t(t, e, n) {
            var i = t._radius;
            if (!i.isZero()) for (var r = t._size.divide(2), s = 1; s <= 4; s++) {
              var a = new _(s > 1 && s < 4 ? -1 : 1, s > 2 ? -1 : 1),
                o = a.multiply(r),
                h = o.subtract(a.multiply(i));
              if (new m(n ? o.add(a.multiply(n)) : o, h).contains(e)) return {
                point: h,
                quadrant: s
              };
            }
          }
          function e(t, e, n, i) {
            var r = t.divide(e);
            return (!i || r.isInQuadrant(i)) && r.subtract(r.normalize()).multiply(e).divide(n).length <= 1;
          }
          return {
            _contains: function e(n) {
              if ("rectangle" === this._type) {
                var i = t(this, n);
                return i ? n.subtract(i.point).divide(this._radius).getLength() <= 1 : e.base.call(this, n);
              }
              return n.divide(this.size).getLength() <= .5;
            },
            _hitTestSelf: function n(i, r, s, a) {
              var o = !1,
                h = this._style,
                u = r.stroke && h.hasStroke(),
                l = r.fill && h.hasFill();
              if (u || l) {
                var c = this._type,
                  f = this._radius,
                  d = u ? h.getStrokeWidth() / 2 : 0,
                  _ = r._tolerancePadding.add(B._getStrokePadding(d, !h.getStrokeScaling() && a));
                if ("rectangle" === c) {
                  var g = _.multiply(2),
                    v = t(this, i, g);
                  if (v) o = e(i.subtract(v.point), f, _, v.quadrant);else {
                    var p = new m(this._size).setCenter(0, 0),
                      y = p.expand(g),
                      w = p.expand(g.negate());
                    o = y._containsPoint(i) && !w._containsPoint(i);
                  }
                } else o = e(i, f, _);
              }
              return o ? new T(u ? "stroke" : "fill", this) : n.base.apply(this, arguments);
            }
          };
        }(), {
          statics: new function () {
            function t(t, e, n, i, r) {
              var s = a.create(I.prototype);
              return s._type = t, s._size = n, s._radius = i, s._initialize(a.getNamed(r), e), s;
            }
            return {
              Circle: function Circle() {
                var e = arguments,
                  n = _.readNamed(e, "center"),
                  i = a.readNamed(e, "radius");
                return t("circle", n, new v(2 * i), i, e);
              },
              Rectangle: function Rectangle() {
                var e = arguments,
                  n = m.readNamed(e, "rectangle"),
                  i = v.min(v.readNamed(e, "radius"), n.getSize(!0).divide(2));
                return t("rectangle", n.getCenter(!0), n.getSize(!0), i, e);
              },
              Ellipse: function Ellipse() {
                var e = arguments,
                  n = I._readEllipse(e),
                  i = n.radius;
                return t("ellipse", n.center, i.multiply(2), i, e);
              },
              _readEllipse: function _readEllipse(t) {
                var e, n;
                if (a.hasNamed(t, "radius")) e = _.readNamed(t, "center"), n = v.readNamed(t, "radius");else {
                  var i = m.readNamed(t, "rectangle");
                  e = i.getCenter(!0), n = i.getSize(!0).divide(2);
                }
                return {
                  center: e,
                  radius: n
                };
              }
            };
          }()
        }),
        P = C.extend({
          _class: "Raster",
          _applyMatrix: !1,
          _canApplyMatrix: !1,
          _boundsOptions: {
            stroke: !1,
            handle: !1
          },
          _serializeFields: {
            crossOrigin: null,
            source: null
          },
          _prioritize: ["crossOrigin"],
          _smoothing: !0,
          beans: !0,
          initialize: function initialize(t, e) {
            if (!this._initialize(t, e !== n && _.read(arguments))) {
              var r,
                a = i(t),
                o = "string" === a ? s.getElementById(t) : "object" === a ? t : null;
              if (o && o !== C.NO_INSERT) if (o.getContext || null != o.naturalHeight) r = o;else if (o) {
                var h = v.read(arguments);
                h.isZero() || (r = rt.getCanvas(h));
              }
              r ? this.setImage(r) : this.setSource(t);
            }
            this._size || (this._size = new v(), this._loaded = !1);
          },
          _equals: function _equals(t) {
            return this.getSource() === t.getSource();
          },
          copyContent: function copyContent(t) {
            var e = t._image,
              n = t._canvas;
            if (e) this._setImage(e);else if (n) {
              var i = rt.getCanvas(t._size);
              i.getContext("2d").drawImage(n, 0, 0), this._setImage(i);
            }
            this._crossOrigin = t._crossOrigin;
          },
          getSize: function getSize() {
            var t = this._size;
            return new p(t ? t.width : 0, t ? t.height : 0, this, "setSize");
          },
          setSize: function setSize() {
            var t = v.read(arguments);
            if (!t.equals(this._size)) if (t.width > 0 && t.height > 0) {
              var e = this.getElement();
              this._setImage(rt.getCanvas(t)), e && this.getContext(!0).drawImage(e, 0, 0, t.width, t.height);
            } else this._canvas && rt.release(this._canvas), this._size = t.clone();
          },
          getWidth: function getWidth() {
            return this._size ? this._size.width : 0;
          },
          setWidth: function setWidth(t) {
            this.setSize(t, this.getHeight());
          },
          getHeight: function getHeight() {
            return this._size ? this._size.height : 0;
          },
          setHeight: function setHeight(t) {
            this.setSize(this.getWidth(), t);
          },
          getLoaded: function getLoaded() {
            return this._loaded;
          },
          isEmpty: function isEmpty() {
            var t = this._size;
            return !t || 0 === t.width && 0 === t.height;
          },
          getResolution: function getResolution() {
            var t = this._matrix,
              e = new _(0, 0).transform(t),
              n = new _(1, 0).transform(t).subtract(e),
              i = new _(0, 1).transform(t).subtract(e);
            return new v(72 / n.getLength(), 72 / i.getLength());
          },
          getPpi: "#getResolution",
          getImage: function getImage() {
            return this._image;
          },
          setImage: function setImage(t) {
            var e = this;
            function n(t) {
              var n = e.getView(),
                i = t && t.type || "load";
              n && e.responds(i) && (ht = n._scope, e.emit(i, new X(t)));
            }
            this._setImage(t), this._loaded ? setTimeout(n, 0) : t && $.add(t, {
              load: function load(i) {
                e._setImage(t), n(i);
              },
              error: n
            });
          },
          _setImage: function _setImage(t) {
            this._canvas && rt.release(this._canvas), t && t.getContext ? (this._image = null, this._canvas = t, this._loaded = !0) : (this._image = t, this._canvas = null, this._loaded = !!(t && t.src && t.complete)), this._size = new v(t ? t.naturalWidth || t.width : 0, t ? t.naturalHeight || t.height : 0), this._context = null, this._changed(1033);
          },
          getCanvas: function getCanvas() {
            if (!this._canvas) {
              var t = rt.getContext(this._size);
              try {
                this._image && t.drawImage(this._image, 0, 0), this._canvas = t.canvas;
              } catch (e) {
                rt.release(t);
              }
            }
            return this._canvas;
          },
          setCanvas: "#setImage",
          getContext: function getContext(t) {
            return this._context || (this._context = this.getCanvas().getContext("2d")), t && (this._image = null, this._changed(1025)), this._context;
          },
          setContext: function setContext(t) {
            this._context = t;
          },
          getSource: function getSource() {
            var t = this._image;
            return t && t.src || this.toDataURL();
          },
          setSource: function setSource(t) {
            var n = new e.Image(),
              i = this._crossOrigin;
            i && (n.crossOrigin = i), t && (n.src = t), this.setImage(n);
          },
          getCrossOrigin: function getCrossOrigin() {
            var t = this._image;
            return t && t.crossOrigin || this._crossOrigin || "";
          },
          setCrossOrigin: function setCrossOrigin(t) {
            this._crossOrigin = t;
            var e = this._image;
            e && (e.crossOrigin = t);
          },
          getSmoothing: function getSmoothing() {
            return this._smoothing;
          },
          setSmoothing: function setSmoothing(t) {
            this._smoothing = t, this._changed(257);
          },
          getElement: function getElement() {
            return this._canvas || this._loaded && this._image;
          }
        }, {
          beans: !1,
          getSubCanvas: function getSubCanvas() {
            var t = m.read(arguments),
              e = rt.getContext(t.getSize());
            return e.drawImage(this.getCanvas(), t.x, t.y, t.width, t.height, 0, 0, t.width, t.height), e.canvas;
          },
          getSubRaster: function getSubRaster() {
            var t = m.read(arguments),
              e = new P(C.NO_INSERT);
            return e._setImage(this.getSubCanvas(t)), e.translate(t.getCenter().subtract(this.getSize().divide(2))), e._matrix.prepend(this._matrix), e.insertAbove(this), e;
          },
          toDataURL: function toDataURL() {
            var t = this._image,
              e = t && t.src;
            if (/^data:/.test(e)) return e;
            var n = this.getCanvas();
            return n ? n.toDataURL.apply(n, arguments) : null;
          },
          drawImage: function drawImage(t) {
            var e = _.read(arguments, 1);
            this.getContext(!0).drawImage(t, e.x, e.y);
          },
          getAverageColor: function getAverageColor(t) {
            var e, n;
            if (t ? t instanceof N ? (n = t, e = t.getBounds()) : "object" === i(t) && ("width" in t ? e = new m(t) : "x" in t && (e = new m(t.x - .5, t.y - .5, 1, 1))) : e = this.getBounds(), !e) return null;
            var r = Math.min(e.width, 32),
              s = Math.min(e.height, 32),
              o = P._sampleContext;
            o ? o.clearRect(0, 0, 33, 33) : o = P._sampleContext = rt.getContext(new v(32)), o.save();
            var h = new w().scale(r / e.width, s / e.height).translate(-e.x, -e.y);
            h.applyToContext(o), n && n.draw(o, new a({
              clip: !0,
              matrices: [h]
            })), this._matrix.applyToContext(o);
            var u = this.getElement(),
              l = this._size;
            u && o.drawImage(u, -l.width / 2, -l.height / 2), o.restore();
            for (var c = o.getImageData(.5, .5, Math.ceil(r), Math.ceil(s)).data, f = [0, 0, 0], d = 0, _ = 0, g = c.length; _ < g; _ += 4) {
              var p = c[_ + 3];
              d += p, p /= 255, f[0] += c[_] * p, f[1] += c[_ + 1] * p, f[2] += c[_ + 2] * p;
            }
            for (_ = 0; _ < 3; _++) f[_] /= d;
            return d ? V.read(f) : null;
          },
          getPixel: function getPixel() {
            var t = _.read(arguments),
              e = this.getContext().getImageData(t.x, t.y, 1, 1).data;
            return new V("rgb", [e[0] / 255, e[1] / 255, e[2] / 255], e[3] / 255);
          },
          setPixel: function setPixel() {
            var t = arguments,
              e = _.read(t),
              n = V.read(t),
              i = n._convert("rgb"),
              r = n._alpha,
              s = this.getContext(!0),
              a = s.createImageData(1, 1),
              o = a.data;
            o[0] = 255 * i[0], o[1] = 255 * i[1], o[2] = 255 * i[2], o[3] = null != r ? 255 * r : 255, s.putImageData(a, e.x, e.y);
          },
          clear: function clear() {
            var t = this._size;
            this.getContext(!0).clearRect(0, 0, t.width + 1, t.height + 1);
          },
          createImageData: function createImageData() {
            var t = v.read(arguments);
            return this.getContext().createImageData(t.width, t.height);
          },
          getImageData: function getImageData() {
            var t = m.read(arguments);
            return t.isEmpty() && (t = new m(this._size)), this.getContext().getImageData(t.x, t.y, t.width, t.height);
          },
          setImageData: function setImageData(t) {
            var e = _.read(arguments, 1);
            this.getContext(!0).putImageData(t, e.x, e.y);
          },
          _getBounds: function _getBounds(t, e) {
            var n = new m(this._size).setCenter(0, 0);
            return t ? t._transformBounds(n) : n;
          },
          _hitTestSelf: function _hitTestSelf(t) {
            if (this._contains(t)) {
              var e = this;
              return new T("pixel", e, {
                offset: t.add(e._size.divide(2)).round(),
                color: {
                  get: function get() {
                    return e.getPixel(this.offset);
                  }
                }
              });
            }
          },
          _draw: function _draw(t, e, n) {
            var i = this.getElement();
            i && i.width > 0 && i.height > 0 && (t.globalAlpha = f.clamp(this._opacity, 0, 1), this._setStyles(t, e, n), W.setPrefixed(t, "imageSmoothingEnabled", this._smoothing), t.drawImage(i, -this._size.width / 2, -this._size.height / 2));
          },
          _canComposite: function _canComposite() {
            return !0;
          }
        }),
        M = C.extend({
          _class: "SymbolItem",
          _applyMatrix: !1,
          _canApplyMatrix: !1,
          _boundsOptions: {
            stroke: !0
          },
          _serializeFields: {
            symbol: null
          },
          initialize: function initialize(t, e) {
            this._initialize(t, e !== n && _.read(arguments, 1)) || this.setDefinition(t instanceof A ? t : new A(t));
          },
          _equals: function _equals(t) {
            return this._definition === t._definition;
          },
          copyContent: function copyContent(t) {
            this.setDefinition(t._definition);
          },
          getDefinition: function getDefinition() {
            return this._definition;
          },
          setDefinition: function setDefinition(t) {
            this._definition = t, this._changed(9);
          },
          getSymbol: "#getDefinition",
          setSymbol: "#setDefinition",
          isEmpty: function isEmpty() {
            return this._definition._item.isEmpty();
          },
          _getBounds: function _getBounds(t, e) {
            var n = this._definition._item;
            return n._getCachedBounds(n._matrix.prepended(t), e);
          },
          _hitTestSelf: function _hitTestSelf(t, e, n) {
            var i = e.extend({
                all: !1
              }),
              r = this._definition._item._hitTest(t, i, n);
            return r && (r.item = this), r;
          },
          _draw: function _draw(t, e) {
            this._definition._item.draw(t, e);
          }
        }),
        A = a.extend({
          _class: "SymbolDefinition",
          initialize: function initialize(t, e) {
            this._id = d.get(), this.project = ht.project, t && this.setItem(t, e);
          },
          _serialize: function _serialize(t, e) {
            return e.add(this, function () {
              return a.serialize([this._class, this._item], t, !1, e);
            });
          },
          _changed: function _changed(t) {
            8 & t && C._clearBoundsCache(this), 1 & t && this.project._changed(t);
          },
          getItem: function getItem() {
            return this._item;
          },
          setItem: function setItem(t, e) {
            t._symbol && (t = t.clone()), this._item && (this._item._symbol = null), this._item = t, t.remove(), t.setSelected(!1), e || t.setPosition(new _()), t._symbol = this, this._changed(9);
          },
          getDefinition: "#getItem",
          setDefinition: "#setItem",
          place: function place(t) {
            return new M(this, t);
          },
          clone: function clone() {
            return new A(this._item.clone(!1));
          },
          equals: function equals(t) {
            return t === this || t && this._item.equals(t._item) || !1;
          }
        }),
        T = a.extend({
          _class: "HitResult",
          initialize: function initialize(t, e, n) {
            this.type = t, this.item = e, n && this.inject(n);
          },
          statics: {
            getOptions: function getOptions(t) {
              var e = t && a.read(t);
              return new a({
                type: null,
                tolerance: ht.settings.hitTolerance,
                fill: !e,
                stroke: !e,
                segments: !e,
                handles: !1,
                ends: !1,
                position: !1,
                center: !1,
                bounds: !1,
                guides: !1,
                selected: !1
              }, e);
            }
          }
        }),
        O = a.extend({
          _class: "Segment",
          beans: !0,
          _selection: 0,
          initialize: function initialize(t, e, r, s, a, o) {
            var h,
              u,
              l,
              c,
              f = arguments.length;
            f > 0 && (null == t || "object" === i(t) ? 1 === f && t && "point" in t ? (h = t.point, u = t.handleIn, l = t.handleOut, c = t.selection) : (h = t, u = e, l = r, c = s) : (h = [t, e], u = r !== n ? [r, s] : null, l = a !== n ? [a, o] : null)), new z(h, this, "_point"), new z(u, this, "_handleIn"), new z(l, this, "_handleOut"), c && this.setSelection(c);
          },
          _serialize: function _serialize(t, e) {
            var n = this._point,
              i = this._selection,
              r = i || this.hasHandles() ? [n, this._handleIn, this._handleOut] : n;
            return i && r.push(i), a.serialize(r, t, !0, e);
          },
          _changed: function _changed(t) {
            var e = this._path;
            if (e) {
              var n,
                i = e._curves,
                r = this._index;
              i && (t && t !== this._point && t !== this._handleIn || !(n = r > 0 ? i[r - 1] : e._closed ? i[i.length - 1] : null) || n._changed(), t && t !== this._point && t !== this._handleOut || !(n = i[r]) || n._changed()), e._changed(41);
            }
          },
          getPoint: function getPoint() {
            return this._point;
          },
          setPoint: function setPoint() {
            this._point.set(_.read(arguments));
          },
          getHandleIn: function getHandleIn() {
            return this._handleIn;
          },
          setHandleIn: function setHandleIn() {
            this._handleIn.set(_.read(arguments));
          },
          getHandleOut: function getHandleOut() {
            return this._handleOut;
          },
          setHandleOut: function setHandleOut() {
            this._handleOut.set(_.read(arguments));
          },
          hasHandles: function hasHandles() {
            return !this._handleIn.isZero() || !this._handleOut.isZero();
          },
          isSmooth: function isSmooth() {
            var t = this._handleIn,
              e = this._handleOut;
            return !t.isZero() && !e.isZero() && t.isCollinear(e);
          },
          clearHandles: function clearHandles() {
            this._handleIn._set(0, 0), this._handleOut._set(0, 0);
          },
          getSelection: function getSelection() {
            return this._selection;
          },
          setSelection: function setSelection(t) {
            var e = this._selection,
              n = this._path;
            this._selection = t = t || 0, n && t !== e && (n._updateSelection(this, e, t), n._changed(257));
          },
          _changeSelection: function _changeSelection(t, e) {
            var n = this._selection;
            this.setSelection(e ? n | t : n & ~t);
          },
          isSelected: function isSelected() {
            return !!(7 & this._selection);
          },
          setSelected: function setSelected(t) {
            this._changeSelection(7, t);
          },
          getIndex: function getIndex() {
            return this._index !== n ? this._index : null;
          },
          getPath: function getPath() {
            return this._path || null;
          },
          getCurve: function getCurve() {
            var t = this._path,
              e = this._index;
            return t ? (e > 0 && !t._closed && e === t._segments.length - 1 && e--, t.getCurves()[e] || null) : null;
          },
          getLocation: function getLocation() {
            var t = this.getCurve();
            return t ? new L(t, this === t._segment1 ? 0 : 1) : null;
          },
          getNext: function getNext() {
            var t = this._path && this._path._segments;
            return t && (t[this._index + 1] || this._path._closed && t[0]) || null;
          },
          smooth: function smooth(t, e, i) {
            var r = t || {},
              s = r.type,
              a = r.factor,
              o = this.getPrevious(),
              h = this.getNext(),
              u = (o || this)._point,
              l = this._point,
              c = (h || this)._point,
              f = u.getDistance(l),
              d = l.getDistance(c);
            if (s && "catmull-rom" !== s) {
              if ("geometric" !== s) throw new Error("Smoothing method '" + s + "' not supported.");
              if (o && h) {
                var g = u.subtract(c),
                  v = a === n ? .4 : a,
                  p = v * f / (f + d);
                e || this.setHandleIn(g.multiply(p)), i || this.setHandleOut(g.multiply(p - v));
              }
            } else {
              var m = a === n ? .5 : a,
                y = Math.pow(f, m),
                w = y * y,
                x = Math.pow(d, m),
                b = x * x;
              if (!e && o) {
                var C = 2 * b + 3 * x * y + w,
                  S = 3 * x * (x + y);
                this.setHandleIn(0 !== S ? new _((b * u._x + C * l._x - w * c._x) / S - l._x, (b * u._y + C * l._y - w * c._y) / S - l._y) : new _());
              }
              if (!i && h) {
                C = 2 * w + 3 * y * x + b, S = 3 * y * (y + x);
                this.setHandleOut(0 !== S ? new _((w * c._x + C * l._x - b * u._x) / S - l._x, (w * c._y + C * l._y - b * u._y) / S - l._y) : new _());
              }
            }
          },
          getPrevious: function getPrevious() {
            var t = this._path && this._path._segments;
            return t && (t[this._index - 1] || this._path._closed && t[t.length - 1]) || null;
          },
          isFirst: function isFirst() {
            return !this._index;
          },
          isLast: function isLast() {
            var t = this._path;
            return t && this._index === t._segments.length - 1 || !1;
          },
          reverse: function reverse() {
            var t = this._handleIn,
              e = this._handleOut,
              n = t.clone();
            t.set(e), e.set(n);
          },
          reversed: function reversed() {
            return new O(this._point, this._handleOut, this._handleIn);
          },
          remove: function remove() {
            return !!this._path && !!this._path.removeSegment(this._index);
          },
          clone: function clone() {
            return new O(this._point, this._handleIn, this._handleOut);
          },
          equals: function equals(t) {
            return t === this || t && this._class === t._class && this._point.equals(t._point) && this._handleIn.equals(t._handleIn) && this._handleOut.equals(t._handleOut) || !1;
          },
          toString: function toString() {
            var t = ["point: " + this._point];
            return this._handleIn.isZero() || t.push("handleIn: " + this._handleIn), this._handleOut.isZero() || t.push("handleOut: " + this._handleOut), "{ " + t.join(", ") + " }";
          },
          transform: function transform(t) {
            this._transformCoordinates(t, new Array(6), !0), this._changed();
          },
          interpolate: function interpolate(t, e, n) {
            var i = 1 - n,
              r = n,
              s = t._point,
              a = e._point,
              o = t._handleIn,
              h = e._handleIn,
              u = e._handleOut,
              l = t._handleOut;
            this._point._set(i * s._x + r * a._x, i * s._y + r * a._y, !0), this._handleIn._set(i * o._x + r * h._x, i * o._y + r * h._y, !0), this._handleOut._set(i * l._x + r * u._x, i * l._y + r * u._y, !0), this._changed();
          },
          _transformCoordinates: function _transformCoordinates(t, e, n) {
            var i = this._point,
              r = n && this._handleIn.isZero() ? null : this._handleIn,
              s = n && this._handleOut.isZero() ? null : this._handleOut,
              a = i._x,
              o = i._y,
              h = 2;
            return e[0] = a, e[1] = o, r && (e[h++] = r._x + a, e[h++] = r._y + o), s && (e[h++] = s._x + a, e[h++] = s._y + o), t && (t._transformCoordinates(e, e, h / 2), a = e[0], o = e[1], n ? (i._x = a, i._y = o, h = 2, r && (r._x = e[h++] - a, r._y = e[h++] - o), s && (s._x = e[h++] - a, s._y = e[h++] - o)) : (r || (e[h++] = a, e[h++] = o), s || (e[h++] = a, e[h++] = o))), e;
          }
        }),
        z = _.extend({
          initialize: function initialize(t, e, i) {
            var r, s, a;
            if (t) {
              if ((r = t[0]) !== n) s = t[1];else {
                var o = t;
                (r = o.x) === n && (r = (o = _.read(arguments)).x), s = o.y, a = o.selected;
              }
            } else r = s = 0;
            this._x = r, this._y = s, this._owner = e, e[i] = this, a && this.setSelected(!0);
          },
          _set: function _set(t, e) {
            return this._x = t, this._y = e, this._owner._changed(this), this;
          },
          getX: function getX() {
            return this._x;
          },
          setX: function setX(t) {
            this._x = t, this._owner._changed(this);
          },
          getY: function getY() {
            return this._y;
          },
          setY: function setY(t) {
            this._y = t, this._owner._changed(this);
          },
          isZero: function isZero() {
            var t = f.isZero;
            return t(this._x) && t(this._y);
          },
          isSelected: function isSelected() {
            return !!(this._owner._selection & this._getSelection());
          },
          setSelected: function setSelected(t) {
            this._owner._changeSelection(this._getSelection(), t);
          },
          _getSelection: function _getSelection() {
            var t = this._owner;
            return this === t._point ? 1 : this === t._handleIn ? 2 : this === t._handleOut ? 4 : 0;
          }
        }),
        E = a.extend({
          _class: "Curve",
          beans: !0,
          initialize: function initialize(t, e, n, i, r, s, a, o) {
            var h,
              u,
              l,
              c,
              f,
              d,
              _ = arguments.length;
            3 === _ ? (this._path = t, h = e, u = n) : _ ? 1 === _ ? "segment1" in t ? (h = new O(t.segment1), u = new O(t.segment2)) : "point1" in t ? (l = t.point1, f = t.handle1, d = t.handle2, c = t.point2) : Array.isArray(t) && (l = [t[0], t[1]], c = [t[6], t[7]], f = [t[2] - t[0], t[3] - t[1]], d = [t[4] - t[6], t[5] - t[7]]) : 2 === _ ? (h = new O(t), u = new O(e)) : 4 === _ ? (l = t, f = e, d = n, c = i) : 8 === _ && (l = [t, e], c = [a, o], f = [n - t, i - e], d = [r - a, s - o]) : (h = new O(), u = new O()), this._segment1 = h || new O(l, null, f), this._segment2 = u || new O(c, d, null);
          },
          _serialize: function _serialize(t, e) {
            return a.serialize(this.hasHandles() ? [this.getPoint1(), this.getHandle1(), this.getHandle2(), this.getPoint2()] : [this.getPoint1(), this.getPoint2()], t, !0, e);
          },
          _changed: function _changed() {
            this._length = this._bounds = n;
          },
          clone: function clone() {
            return new E(this._segment1, this._segment2);
          },
          toString: function toString() {
            var t = ["point1: " + this._segment1._point];
            return this._segment1._handleOut.isZero() || t.push("handle1: " + this._segment1._handleOut), this._segment2._handleIn.isZero() || t.push("handle2: " + this._segment2._handleIn), t.push("point2: " + this._segment2._point), "{ " + t.join(", ") + " }";
          },
          classify: function classify() {
            return E.classify(this.getValues());
          },
          remove: function remove() {
            var t = !1;
            if (this._path) {
              var e = this._segment2,
                n = e._handleOut;
              (t = e.remove()) && this._segment1._handleOut.set(n);
            }
            return t;
          },
          getPoint1: function getPoint1() {
            return this._segment1._point;
          },
          setPoint1: function setPoint1() {
            this._segment1._point.set(_.read(arguments));
          },
          getPoint2: function getPoint2() {
            return this._segment2._point;
          },
          setPoint2: function setPoint2() {
            this._segment2._point.set(_.read(arguments));
          },
          getHandle1: function getHandle1() {
            return this._segment1._handleOut;
          },
          setHandle1: function setHandle1() {
            this._segment1._handleOut.set(_.read(arguments));
          },
          getHandle2: function getHandle2() {
            return this._segment2._handleIn;
          },
          setHandle2: function setHandle2() {
            this._segment2._handleIn.set(_.read(arguments));
          },
          getSegment1: function getSegment1() {
            return this._segment1;
          },
          getSegment2: function getSegment2() {
            return this._segment2;
          },
          getPath: function getPath() {
            return this._path;
          },
          getIndex: function getIndex() {
            return this._segment1._index;
          },
          getNext: function getNext() {
            var t = this._path && this._path._curves;
            return t && (t[this._segment1._index + 1] || this._path._closed && t[0]) || null;
          },
          getPrevious: function getPrevious() {
            var t = this._path && this._path._curves;
            return t && (t[this._segment1._index - 1] || this._path._closed && t[t.length - 1]) || null;
          },
          isFirst: function isFirst() {
            return !this._segment1._index;
          },
          isLast: function isLast() {
            var t = this._path;
            return t && this._segment1._index === t._curves.length - 1 || !1;
          },
          isSelected: function isSelected() {
            return this.getPoint1().isSelected() && this.getHandle1().isSelected() && this.getHandle2().isSelected() && this.getPoint2().isSelected();
          },
          setSelected: function setSelected(t) {
            this.getPoint1().setSelected(t), this.getHandle1().setSelected(t), this.getHandle2().setSelected(t), this.getPoint2().setSelected(t);
          },
          getValues: function getValues(t) {
            return E.getValues(this._segment1, this._segment2, t);
          },
          getPoints: function getPoints() {
            for (var t = this.getValues(), e = [], n = 0; n < 8; n += 2) e.push(new _(t[n], t[n + 1]));
            return e;
          }
        }, {
          getLength: function getLength() {
            return null == this._length && (this._length = E.getLength(this.getValues(), 0, 1)), this._length;
          },
          getArea: function getArea() {
            return E.getArea(this.getValues());
          },
          getLine: function getLine() {
            return new x(this._segment1._point, this._segment2._point);
          },
          getPart: function getPart(t, e) {
            return new E(E.getPart(this.getValues(), t, e));
          },
          getPartLength: function getPartLength(t, e) {
            return E.getLength(this.getValues(), t, e);
          },
          divideAt: function divideAt(t) {
            return this.divideAtTime(t && t.curve === this ? t.time : this.getTimeAt(t));
          },
          divideAtTime: function divideAtTime(t, e) {
            var n = null;
            if (t >= 1e-8 && t <= 1 - 1e-8) {
              var i = E.subdivide(this.getValues(), t),
                r = i[0],
                s = i[1],
                a = e || this.hasHandles(),
                o = this._segment1,
                h = this._segment2,
                u = this._path;
              a && (o._handleOut._set(r[2] - r[0], r[3] - r[1]), h._handleIn._set(s[4] - s[6], s[5] - s[7]));
              var l = r[6],
                c = r[7],
                f = new O(new _(l, c), a && new _(r[4] - l, r[5] - c), a && new _(s[2] - l, s[3] - c));
              u ? (u.insert(o._index + 1, f), n = this.getNext()) : (this._segment2 = f, this._changed(), n = new E(f, h));
            }
            return n;
          },
          splitAt: function splitAt(t) {
            var e = this._path;
            return e ? e.splitAt(t) : null;
          },
          splitAtTime: function splitAtTime(t) {
            return this.splitAt(this.getLocationAtTime(t));
          },
          divide: function divide(t, e) {
            return this.divideAtTime(t === n ? .5 : e ? t : this.getTimeAt(t));
          },
          split: function split(t, e) {
            return this.splitAtTime(t === n ? .5 : e ? t : this.getTimeAt(t));
          },
          reversed: function reversed() {
            return new E(this._segment2.reversed(), this._segment1.reversed());
          },
          clearHandles: function clearHandles() {
            this._segment1._handleOut._set(0, 0), this._segment2._handleIn._set(0, 0);
          },
          statics: {
            getValues: function getValues(t, e, n, i) {
              var r = t._point,
                s = t._handleOut,
                a = e._handleIn,
                o = e._point,
                h = r.x,
                u = r.y,
                l = o.x,
                c = o.y,
                f = i ? [h, u, h, u, l, c, l, c] : [h, u, h + s._x, u + s._y, l + a._x, c + a._y, l, c];
              return n && n._transformCoordinates(f, f, 4), f;
            },
            subdivide: function subdivide(t, e) {
              var i = t[0],
                r = t[1],
                s = t[2],
                a = t[3],
                o = t[4],
                h = t[5],
                u = t[6],
                l = t[7];
              e === n && (e = .5);
              var c = 1 - e,
                f = c * i + e * s,
                d = c * r + e * a,
                _ = c * s + e * o,
                g = c * a + e * h,
                v = c * o + e * u,
                p = c * h + e * l,
                m = c * f + e * _,
                y = c * d + e * g,
                w = c * _ + e * v,
                x = c * g + e * p,
                b = c * m + e * w,
                C = c * y + e * x;
              return [[i, r, f, d, m, y, b, C], [b, C, w, x, v, p, u, l]];
            },
            getMonoCurves: function getMonoCurves(t, e) {
              var n = [],
                i = e ? 0 : 1,
                r = t[i + 0],
                s = t[i + 2],
                a = t[i + 4],
                o = t[i + 6];
              if (r >= s == s >= a && s >= a == a >= o || E.isStraight(t)) n.push(t);else {
                var h = 3 * (s - a) - r + o,
                  u = 2 * (r + a) - 4 * s,
                  l = s - r,
                  c = [],
                  d = f.solveQuadratic(h, u, l, c, 1e-8, 1 - 1e-8);
                if (d) {
                  c.sort();
                  var _ = c[0],
                    g = E.subdivide(t, _);
                  n.push(g[0]), d > 1 && (_ = (c[1] - _) / (1 - _), g = E.subdivide(g[1], _), n.push(g[0])), n.push(g[1]);
                } else n.push(t);
              }
              return n;
            },
            solveCubic: function solveCubic(t, e, n, i, r, s) {
              var a = t[e],
                o = t[e + 2],
                h = t[e + 4],
                u = t[e + 6],
                l = 0;
              if (!(a < n && u < n && o < n && h < n || a > n && u > n && o > n && h > n)) {
                var c = 3 * (o - a),
                  d = 3 * (h - o) - c,
                  _ = u - a - c - d;
                l = f.solveCubic(_, d, c, a - n, i, r, s);
              }
              return l;
            },
            getTimeOf: function getTimeOf(t, e) {
              var n = new _(t[0], t[1]),
                i = new _(t[6], t[7]);
              if (null === (e.isClose(n, 1e-12) ? 0 : e.isClose(i, 1e-12) ? 1 : null)) for (var r = [e.x, e.y], s = [], a = 0; a < 2; a++) for (var o = E.solveCubic(t, a, r[a], s, 0, 1), h = 0; h < o; h++) {
                var u = s[h];
                if (e.isClose(E.getPoint(t, u), 1e-7)) return u;
              }
              return e.isClose(n, 1e-7) ? 0 : e.isClose(i, 1e-7) ? 1 : null;
            },
            getNearestTime: function getNearestTime(t, e) {
              if (E.isStraight(t)) {
                var n = t[0],
                  i = t[1],
                  r = t[6] - n,
                  s = t[7] - i,
                  a = r * r + s * s;
                if (0 === a) return 0;
                var o = ((e.x - n) * r + (e.y - i) * s) / a;
                return o < 1e-12 ? 0 : o > .999999999999 ? 1 : E.getTimeOf(t, new _(n + o * r, i + o * s));
              }
              var h = 1 / 0,
                u = 0;
              function l(n) {
                if (n >= 0 && n <= 1) {
                  var i = e.getDistance(E.getPoint(t, n), !0);
                  if (i < h) return h = i, u = n, !0;
                }
              }
              for (var c = 0; c <= 100; c++) l(c / 100);
              for (var f = .005; f > 1e-8;) l(u - f) || l(u + f) || (f /= 2);
              return u;
            },
            getPart: function getPart(t, e, n) {
              var i = e > n;
              if (i) {
                var r = e;
                e = n, n = r;
              }
              return e > 0 && (t = E.subdivide(t, e)[1]), n < 1 && (t = E.subdivide(t, (n - e) / (1 - e))[0]), i ? [t[6], t[7], t[4], t[5], t[2], t[3], t[0], t[1]] : t;
            },
            isFlatEnough: function isFlatEnough(t, e) {
              var n = t[0],
                i = t[1],
                r = t[2],
                s = t[3],
                a = t[4],
                o = t[5],
                h = t[6],
                u = t[7],
                l = 3 * r - 2 * n - h,
                c = 3 * s - 2 * i - u,
                f = 3 * a - 2 * h - n,
                d = 3 * o - 2 * u - i;
              return Math.max(l * l, f * f) + Math.max(c * c, d * d) <= 16 * e * e;
            },
            getArea: function getArea(t) {
              var e = t[0],
                n = t[1],
                i = t[2],
                r = t[3],
                s = t[4],
                a = t[5],
                o = t[6],
                h = t[7];
              return 3 * ((h - n) * (i + s) - (o - e) * (r + a) + r * (e - s) - i * (n - a) + h * (s + e / 3) - o * (a + n / 3)) / 20;
            },
            getBounds: function getBounds(t) {
              for (var e = t.slice(0, 2), n = e.slice(), i = [0, 0], r = 0; r < 2; r++) E._addBounds(t[r], t[r + 2], t[r + 4], t[r + 6], r, 0, e, n, i);
              return new m(e[0], e[1], n[0] - e[0], n[1] - e[1]);
            },
            _addBounds: function _addBounds(t, e, n, i, r, s, a, o, h) {
              function u(t, e) {
                var n = t - e,
                  i = t + e;
                n < a[r] && (a[r] = n), i > o[r] && (o[r] = i);
              }
              s /= 2;
              var l = a[r] + s,
                c = o[r] - s;
              if (t < l || e < l || n < l || i < l || t > c || e > c || n > c || i > c) if (e < t != e < i && n < t != n < i) u(t, 0), u(i, 0);else {
                var d = 3 * (e - n) - t + i,
                  _ = 2 * (t + n) - 4 * e,
                  g = e - t,
                  v = f.solveQuadratic(d, _, g, h);
                u(i, 0);
                for (var p = 0; p < v; p++) {
                  var m = h[p],
                    y = 1 - m;
                  1e-8 <= m && m <= 1 - 1e-8 && u(y * y * y * t + 3 * y * y * m * e + 3 * y * m * m * n + m * m * m * i, s);
                }
              }
            }
          }
        }, a.each(["getBounds", "getStrokeBounds", "getHandleBounds"], function (t) {
          this[t] = function () {
            this._bounds || (this._bounds = {});
            var e = this._bounds[t];
            return e || (e = this._bounds[t] = B[t]([this._segment1, this._segment2], !1, this._path)), e.clone();
          };
        }, {}), a.each({
          isStraight: function isStraight(t, e, n, i) {
            if (e.isZero() && n.isZero()) return !0;
            var r = i.subtract(t);
            if (r.isZero()) return !1;
            if (r.isCollinear(e) && r.isCollinear(n)) {
              var s = new x(t, i);
              if (s.getDistance(t.add(e)) < 1e-7 && s.getDistance(i.add(n)) < 1e-7) {
                var a = r.dot(r),
                  o = r.dot(e) / a,
                  h = r.dot(n) / a;
                return o >= 0 && o <= 1 && h <= 0 && h >= -1;
              }
            }
            return !1;
          },
          isLinear: function isLinear(t, e, n, i) {
            var r = i.subtract(t).divide(3);
            return e.equals(r) && n.negate().equals(r);
          }
        }, function (t, e) {
          this[e] = function (e) {
            var n = this._segment1,
              i = this._segment2;
            return t(n._point, n._handleOut, i._handleIn, i._point, e);
          }, this.statics[e] = function (e, n) {
            var i = e[0],
              r = e[1],
              s = e[6],
              a = e[7];
            return t(new _(i, r), new _(e[2] - i, e[3] - r), new _(e[4] - s, e[5] - a), new _(s, a), n);
          };
        }, {
          statics: {},
          hasHandles: function hasHandles() {
            return !this._segment1._handleOut.isZero() || !this._segment2._handleIn.isZero();
          },
          hasLength: function hasLength(t) {
            return (!this.getPoint1().equals(this.getPoint2()) || this.hasHandles()) && this.getLength() > (t || 0);
          },
          isCollinear: function isCollinear(t) {
            return t && this.isStraight() && t.isStraight() && this.getLine().isCollinear(t.getLine());
          },
          isHorizontal: function isHorizontal() {
            return this.isStraight() && Math.abs(this.getTangentAtTime(.5).y) < 1e-8;
          },
          isVertical: function isVertical() {
            return this.isStraight() && Math.abs(this.getTangentAtTime(.5).x) < 1e-8;
          }
        }), {
          beans: !1,
          getLocationAt: function getLocationAt(t, e) {
            return this.getLocationAtTime(e ? t : this.getTimeAt(t));
          },
          getLocationAtTime: function getLocationAtTime(t) {
            return null != t && t >= 0 && t <= 1 ? new L(this, t) : null;
          },
          getTimeAt: function getTimeAt(t, e) {
            return E.getTimeAt(this.getValues(), t, e);
          },
          getParameterAt: "#getTimeAt",
          getTimesWithTangent: function getTimesWithTangent() {
            var t = _.read(arguments);
            return t.isZero() ? [] : E.getTimesWithTangent(this.getValues(), t);
          },
          getOffsetAtTime: function getOffsetAtTime(t) {
            return this.getPartLength(0, t);
          },
          getLocationOf: function getLocationOf() {
            return this.getLocationAtTime(this.getTimeOf(_.read(arguments)));
          },
          getOffsetOf: function getOffsetOf() {
            var t = this.getLocationOf.apply(this, arguments);
            return t ? t.getOffset() : null;
          },
          getTimeOf: function getTimeOf() {
            return E.getTimeOf(this.getValues(), _.read(arguments));
          },
          getParameterOf: "#getTimeOf",
          getNearestLocation: function getNearestLocation() {
            var t = _.read(arguments),
              e = this.getValues(),
              n = E.getNearestTime(e, t),
              i = E.getPoint(e, n);
            return new L(this, n, i, null, t.getDistance(i));
          },
          getNearestPoint: function getNearestPoint() {
            var t = this.getNearestLocation.apply(this, arguments);
            return t ? t.getPoint() : t;
          }
        }, new function () {
          var t = ["getPoint", "getTangent", "getNormal", "getWeightedTangent", "getWeightedNormal", "getCurvature"];
          return a.each(t, function (t) {
            this[t + "At"] = function (e, n) {
              var i = this.getValues();
              return E[t](i, n ? e : E.getTimeAt(i, e));
            }, this[t + "AtTime"] = function (e) {
              return E[t](this.getValues(), e);
            };
          }, {
            statics: {
              _evaluateMethods: t
            }
          });
        }(), new function () {
          function t(t) {
            var e = t[0],
              n = t[1],
              i = t[2],
              r = t[3],
              s = t[4],
              a = t[5],
              o = t[6],
              h = t[7],
              u = 9 * (i - s) + 3 * (o - e),
              l = 6 * (e + s) - 12 * i,
              c = 3 * (i - e),
              f = 9 * (r - a) + 3 * (h - n),
              d = 6 * (n + a) - 12 * r,
              _ = 3 * (r - n);
            return function (t) {
              var e = (u * t + l) * t + c,
                n = (f * t + d) * t + _;
              return Math.sqrt(e * e + n * n);
            };
          }
          function e(t, e) {
            return Math.max(2, Math.min(16, Math.ceil(32 * Math.abs(e - t))));
          }
          function i(t, e, n, i) {
            if (null == e || e < 0 || e > 1) return null;
            var r = t[0],
              s = t[1],
              a = t[2],
              o = t[3],
              h = t[4],
              u = t[5],
              l = t[6],
              c = t[7],
              d = f.isZero;
            d(a - r) && d(o - s) && (a = r, o = s), d(h - l) && d(u - c) && (h = l, u = c);
            var g,
              v,
              p = 3 * (a - r),
              m = 3 * (h - a) - p,
              y = l - r - p - m,
              w = 3 * (o - s),
              x = 3 * (u - o) - w,
              b = c - s - w - x;
            if (0 === n) g = 0 === e ? r : 1 === e ? l : ((y * e + m) * e + p) * e + r, v = 0 === e ? s : 1 === e ? c : ((b * e + x) * e + w) * e + s;else {
              if (e < 1e-8 ? (g = p, v = w) : e > 1 - 1e-8 ? (g = 3 * (l - h), v = 3 * (c - u)) : (g = (3 * y * e + 2 * m) * e + p, v = (3 * b * e + 2 * x) * e + w), i) {
                0 === g && 0 === v && (e < 1e-8 || e > 1 - 1e-8) && (g = h - a, v = u - o);
                var C = Math.sqrt(g * g + v * v);
                C && (g /= C, v /= C);
              }
              if (3 === n) {
                h = 6 * y * e + 2 * m, u = 6 * b * e + 2 * x;
                var S = Math.pow(g * g + v * v, 1.5);
                g = 0 !== S ? (g * u - v * h) / S : 0, v = 0;
              }
            }
            return 2 === n ? new _(v, -g) : new _(g, v);
          }
          return {
            statics: {
              classify: function classify(t) {
                var e = t[0],
                  i = t[1],
                  r = t[2],
                  s = t[3],
                  a = t[4],
                  o = t[5],
                  h = t[6],
                  u = t[7],
                  l = r * (i - u) + s * (h - e) + e * u - i * h,
                  c = 3 * (a * (s - i) + o * (e - r) + r * i - s * e),
                  d = c - l,
                  _ = d - l + (e * (u - o) + i * (a - h) + h * o - u * a),
                  g = Math.sqrt(_ * _ + d * d + c * c),
                  v = 0 !== g ? 1 / g : 0,
                  p = f.isZero;
                function m(t, e, i) {
                  var r = e !== n,
                    s = r && e > 0 && e < 1,
                    a = r && i > 0 && i < 1;
                  return !r || (s || a) && ("loop" !== t || s && a) || (t = "arch", s = a = !1), {
                    type: t,
                    roots: s || a ? s && a ? e < i ? [e, i] : [i, e] : [s ? e : i] : null
                  };
                }
                if (d *= v, c *= v, p(_ *= v)) return p(d) ? m(p(c) ? "line" : "quadratic") : m("serpentine", c / (3 * d));
                var y = 3 * d * d - 4 * _ * c;
                if (p(y)) return m("cusp", d / (2 * _));
                var w = y > 0 ? Math.sqrt(y / 3) : Math.sqrt(-y),
                  x = 2 * _;
                return m(y > 0 ? "serpentine" : "loop", (d + w) / x, (d - w) / x);
              },
              getLength: function getLength(i, r, s, a) {
                if (r === n && (r = 0), s === n && (s = 1), E.isStraight(i)) {
                  var o = i;
                  s < 1 && (o = E.subdivide(o, s)[0], r /= s), r > 0 && (o = E.subdivide(o, r)[1]);
                  var h = o[6] - o[0],
                    u = o[7] - o[1];
                  return Math.sqrt(h * h + u * u);
                }
                return f.integrate(a || t(i), r, s, e(r, s));
              },
              getTimeAt: function getTimeAt(i, r, s) {
                if (s === n && (s = r < 0 ? 1 : 0), 0 === r) return s;
                var a = Math.abs,
                  o = r > 0,
                  h = o ? s : 0,
                  u = o ? 1 : s,
                  l = t(i),
                  c = E.getLength(i, h, u, l),
                  d = a(r) - c;
                if (a(d) < 1e-12) return o ? u : h;
                if (d > 1e-12) return null;
                var _ = r / c,
                  g = 0;
                return f.findRoot(function (t) {
                  return g += f.integrate(l, s, t, e(s, t)), s = t, g - r;
                }, l, s + _, h, u, 32, 1e-12);
              },
              getPoint: function getPoint(t, e) {
                return i(t, e, 0, !1);
              },
              getTangent: function getTangent(t, e) {
                return i(t, e, 1, !0);
              },
              getWeightedTangent: function getWeightedTangent(t, e) {
                return i(t, e, 1, !1);
              },
              getNormal: function getNormal(t, e) {
                return i(t, e, 2, !0);
              },
              getWeightedNormal: function getWeightedNormal(t, e) {
                return i(t, e, 2, !1);
              },
              getCurvature: function getCurvature(t, e) {
                return i(t, e, 3, !1).x;
              },
              getPeaks: function getPeaks(t) {
                var e = t[0],
                  n = t[1],
                  i = t[2],
                  r = t[3],
                  s = t[4],
                  a = t[5],
                  o = 3 * i - e - 3 * s + t[6],
                  h = 3 * e - 6 * i + 3 * s,
                  u = -3 * e + 3 * i,
                  l = 3 * r - n - 3 * a + t[7],
                  c = 3 * n - 6 * r + 3 * a,
                  d = -3 * n + 3 * r,
                  _ = [];
                return f.solveCubic(9 * (o * o + l * l), 9 * (o * h + c * l), 2 * (h * h + c * c) + 3 * (u * o + d * l), u * h + c * d, _, 1e-8, 1 - 1e-8), _.sort();
              }
            }
          };
        }(), new function () {
          function t(t, e, n, i, r, s, a) {
            var o = !a && n.getPrevious() === r,
              h = !a && n !== r && n.getNext() === r;
            if (null !== i && i >= (o ? 1e-8 : 0) && i <= (h ? 1 - 1e-8 : 1) && null !== s && s >= (h ? 1e-8 : 0) && s <= (o ? 1 - 1e-8 : 1)) {
              var u = new L(n, i, null, a),
                l = new L(r, s, null, a);
              u._intersection = l, l._intersection = u, e && !e(u) || L.insert(t, u, !0);
            }
          }
          function e(t, e, i, r) {
            return t[0][1] < i ? n(t, !0, i) : e[0][1] > r ? n(e, !1, r) : t[0][0];
          }
          function n(t, e, n) {
            for (var i = t[0][0], r = t[0][1], s = 1, a = t.length; s < a; s++) {
              var o = t[s][0],
                h = t[s][1];
              if (e ? h >= n : h <= n) return h === n ? o : i + (n - r) * (o - i) / (h - r);
              i = o, r = h;
            }
            return null;
          }
          function i(t, e, n, i, r) {
            var s = f.isZero;
            if (s(i) && s(r)) {
              var a = E.getTimeOf(t, new _(e, n));
              return null === a ? [] : [a];
            }
            for (var o = Math.atan2(-r, i), h = Math.sin(o), u = Math.cos(o), l = [], c = [], d = 0; d < 8; d += 2) {
              var g = t[d] - e,
                v = t[d + 1] - n;
              l.push(g * u - v * h, g * h + v * u);
            }
            return E.solveCubic(l, 1, 0, c, 0, 1), c;
          }
          function r(n, r, s, o, h, u) {
            var l = Math.min,
              c = Math.max;
            if (c(n[0], n[2], n[4], n[6]) + 1e-12 > l(r[0], r[2], r[4], r[6]) && l(n[0], n[2], n[4], n[6]) - 1e-12 < c(r[0], r[2], r[4], r[6]) && c(n[1], n[3], n[5], n[7]) + 1e-12 > l(r[1], r[3], r[5], r[7]) && l(n[1], n[3], n[5], n[7]) - 1e-12 < c(r[1], r[3], r[5], r[7])) {
              var f = a(n, r);
              if (f) for (var d = 0; d < 2; d++) {
                var g = f[d];
                t(h, u, s, g[0], o, g[1], !0);
              } else {
                var v = E.isStraight(n),
                  p = E.isStraight(r),
                  m = v && p,
                  y = v && !p,
                  w = h.length;
                if ((m ? function (e, n, i, r, s, a) {
                  var o = x.intersect(e[0], e[1], e[6], e[7], n[0], n[1], n[6], n[7]);
                  o && t(s, a, i, E.getTimeOf(e, o), r, E.getTimeOf(n, o));
                } : v || p ? function (e, n, r, s, a, o, h) {
                  for (var u = n[0], l = n[1], c = i(e, u, l, n[6] - u, n[7] - l), f = 0, d = c.length; f < d; f++) {
                    var _ = c[f],
                      g = E.getPoint(e, _),
                      v = E.getTimeOf(n, g);
                    null !== v && t(a, o, h ? s : r, h ? v : _, h ? r : s, h ? _ : v);
                  }
                } : function n(i, r, s, a, o, h, u, l, c, f, d, _, g) {
                  if (++c >= 4096 || ++l >= 40) return c;
                  var v,
                    p,
                    m = r[0],
                    y = r[1],
                    w = r[6],
                    b = r[7],
                    C = x.getSignedDistance,
                    S = C(m, y, w, b, r[2], r[3]),
                    k = C(m, y, w, b, r[4], r[5]),
                    I = S * k > 0 ? .75 : 4 / 9,
                    P = I * Math.min(0, S, k),
                    M = I * Math.max(0, S, k),
                    A = C(m, y, w, b, i[0], i[1]),
                    T = C(m, y, w, b, i[2], i[3]),
                    O = C(m, y, w, b, i[4], i[5]),
                    z = C(m, y, w, b, i[6], i[7]),
                    L = function (t, e, n, i) {
                      var r,
                        s = [0, t],
                        a = [1 / 3, e],
                        o = [2 / 3, n],
                        h = [1, i],
                        u = e - (2 * t + i) / 3,
                        l = n - (t + 2 * i) / 3;
                      if (u * l < 0) r = [[s, a, h], [s, o, h]];else {
                        var c = u / l;
                        r = [c >= 2 ? [s, a, h] : c <= .5 ? [s, o, h] : [s, a, o, h], [s, h]];
                      }
                      return (u || l) < 0 ? r.reverse() : r;
                    }(A, T, O, z),
                    N = L[0],
                    B = L[1];
                  if (0 === S && 0 === k && 0 === A && 0 === T && 0 === O && 0 === z || null == (v = e(N, B, P, M)) || null == (p = e(N.reverse(), B.reverse(), P, M))) return c;
                  var F = f + (d - f) * v,
                    j = f + (d - f) * p;
                  if (Math.max(g - _, j - F) < 1e-9) {
                    var R = (F + j) / 2,
                      D = (_ + g) / 2;
                    t(o, h, u ? a : s, u ? D : R, u ? s : a, u ? R : D);
                  } else {
                    i = E.getPart(i, v, p);
                    var q = g - _;
                    if (p - v > .8) {
                      if (j - F > q) R = (F + j) / 2, c = n(r, (V = E.subdivide(i, .5))[0], a, s, o, h, !u, l, c, _, g, F, R), c = n(r, V[1], a, s, o, h, !u, l, c, _, g, R, j);else {
                        var V;
                        D = (_ + g) / 2, c = n((V = E.subdivide(r, .5))[0], i, a, s, o, h, !u, l, c, _, D, F, j), c = n(V[1], i, a, s, o, h, !u, l, c, D, g, F, j);
                      }
                    } else c = 0 === q || q >= 1e-9 ? n(r, i, a, s, o, h, !u, l, c, _, g, F, j) : n(i, r, s, a, o, h, u, l, c, F, j, _, g);
                  }
                  return c;
                })(y ? r : n, y ? n : r, y ? o : s, y ? s : o, h, u, y, 0, 0, 0, 1, 0, 1), !m || h.length === w) for (d = 0; d < 4; d++) {
                  var b = d >> 1,
                    C = 1 & d,
                    S = 6 * b,
                    k = 6 * C,
                    I = new _(n[S], n[S + 1]),
                    P = new _(r[k], r[k + 1]);
                  I.isClose(P, 1e-12) && t(h, u, s, b, o, C);
                }
              }
            }
            return h;
          }
          function s(e, n, i, r) {
            var s = E.classify(e);
            if ("loop" === s.type) {
              var a = s.roots;
              t(i, r, n, a[0], n, a[1]);
            }
            return i;
          }
          function a(t, e) {
            function n(t) {
              var e = t[6] - t[0],
                n = t[7] - t[1];
              return e * e + n * n;
            }
            var i = Math.abs,
              r = x.getDistance,
              s = E.isStraight(t),
              a = E.isStraight(e),
              o = s && a,
              h = n(t) < n(e),
              u = h ? e : t,
              l = h ? t : e,
              c = u[0],
              f = u[1],
              d = u[6] - c,
              g = u[7] - f;
            if (r(c, f, d, g, l[0], l[1], !0) < 1e-7 && r(c, f, d, g, l[6], l[7], !0) < 1e-7) !o && r(c, f, d, g, u[2], u[3], !0) < 1e-7 && r(c, f, d, g, u[4], u[5], !0) < 1e-7 && r(c, f, d, g, l[2], l[3], !0) < 1e-7 && r(c, f, d, g, l[4], l[5], !0) < 1e-7 && (s = a = o = !0);else if (o) return null;
            if (s ^ a) return null;
            for (var v = [t, e], p = [], m = 0; m < 4 && p.length < 2; m++) {
              var y = 1 & m,
                w = 1 ^ y,
                b = m >> 1,
                C = E.getTimeOf(v[y], new _(v[w][b ? 6 : 0], v[w][b ? 7 : 1]));
              if (null != C) {
                var S = y ? [b, C] : [C, b];
                (!p.length || i(S[0] - p[0][0]) > 1e-8 && i(S[1] - p[0][1]) > 1e-8) && p.push(S);
              }
              if (m > 2 && !p.length) break;
            }
            if (2 !== p.length) p = null;else if (!o) {
              var k = E.getPart(t, p[0][0], p[1][0]),
                I = E.getPart(e, p[0][1], p[1][1]);
              (i(I[2] - k[2]) > 1e-7 || i(I[3] - k[3]) > 1e-7 || i(I[4] - k[4]) > 1e-7 || i(I[5] - k[5]) > 1e-7) && (p = null);
            }
            return p;
          }
          return {
            getIntersections: function getIntersections(t) {
              var e = this.getValues(),
                n = t && t !== this && t.getValues();
              return n ? r(e, n, this, t, []) : s(e, this, []);
            },
            statics: {
              getOverlaps: a,
              getIntersections: function getIntersections(t, e, n, i, a, o) {
                var h = !e;
                h && (e = t);
                for (var u = t.length, c = e.length, f = new Array(u), d = h ? f : new Array(c), _ = [], g = 0; g < u; g++) f[g] = t[g].getValues(i);
                if (!h) for (g = 0; g < c; g++) d[g] = e[g].getValues(a);
                for (var v = l.findCurveBoundsCollisions(f, d, 1e-7), p = 0; p < u; p++) {
                  var m = t[p],
                    y = f[p];
                  h && s(y, m, _, n);
                  var w = v[p];
                  if (w) for (var x = 0; x < w.length; x++) {
                    if (o && _.length) return _;
                    var b = w[x];
                    if (!h || b > p) {
                      var C = e[b];
                      r(y, d[b], m, C, _, n);
                    }
                  }
                }
                return _;
              },
              getCurveLineIntersections: i,
              getTimesWithTangent: function getTimesWithTangent(t, e) {
                var n = t[0],
                  i = t[1],
                  r = t[2],
                  s = t[3],
                  a = t[4],
                  o = t[5],
                  h = t[6],
                  u = t[7],
                  l = e.normalize(),
                  c = l.x,
                  d = l.y,
                  _ = 3 * h - 9 * a + 9 * r - 3 * n,
                  g = 3 * u - 9 * o + 9 * s - 3 * i,
                  v = 6 * a - 12 * r + 6 * n,
                  p = 6 * o - 12 * s + 6 * i,
                  m = 3 * r - 3 * n,
                  y = 3 * s - 3 * i,
                  w = 2 * _ * d - 2 * g * c,
                  x = [];
                if (Math.abs(w) < f.CURVETIME_EPSILON) {
                  if (0 != (w = _ * p - g * v)) {
                    var b = -(_ * y - g * m) / w;
                    b >= 0 && b <= 1 && x.push(b);
                  }
                } else {
                  var C = (v * v - 4 * _ * m) * d * d + (-2 * v * p + 4 * g * m + 4 * _ * y) * c * d + (p * p - 4 * g * y) * c * c,
                    S = v * d - p * c;
                  if (C >= 0 && 0 != w) {
                    var k = Math.sqrt(C),
                      I = -(S + k) / w,
                      P = (-S + k) / w;
                    I >= 0 && I <= 1 && x.push(I), P >= 0 && P <= 1 && x.push(P);
                  }
                }
                return x;
              }
            }
          };
        }()),
        L = a.extend({
          _class: "CurveLocation",
          initialize: function initialize(t, e, n, i, r) {
            if (e >= .99999999) {
              var s = t.getNext();
              s && (e = 0, t = s);
            }
            this._setCurve(t), this._time = e, this._point = n || t.getPointAtTime(e), this._overlap = i, this._distance = r, this._intersection = this._next = this._previous = null;
          },
          _setPath: function _setPath(t) {
            this._path = t, this._version = t ? t._version : 0;
          },
          _setCurve: function _setCurve(t) {
            this._setPath(t._path), this._curve = t, this._segment = null, this._segment1 = t._segment1, this._segment2 = t._segment2;
          },
          _setSegment: function _setSegment(t) {
            var e = t.getCurve();
            e ? this._setCurve(e) : (this._setPath(t._path), this._segment1 = t, this._segment2 = null), this._segment = t, this._time = t === this._segment1 ? 0 : 1, this._point = t._point.clone();
          },
          getSegment: function getSegment() {
            var t = this._segment;
            if (!t) {
              var e = this.getCurve(),
                n = this.getTime();
              0 === n ? t = e._segment1 : 1 === n ? t = e._segment2 : null != n && (t = e.getPartLength(0, n) < e.getPartLength(n, 1) ? e._segment1 : e._segment2), this._segment = t;
            }
            return t;
          },
          getCurve: function getCurve() {
            var t = this._path,
              e = this;
            function n(t) {
              var n = t && t.getCurve();
              if (n && null != (e._time = n.getTimeOf(e._point))) return e._setCurve(n), n;
            }
            return t && t._version !== this._version && (this._time = this._offset = this._curveOffset = this._curve = null), this._curve || n(this._segment) || n(this._segment1) || n(this._segment2.getPrevious());
          },
          getPath: function getPath() {
            var t = this.getCurve();
            return t && t._path;
          },
          getIndex: function getIndex() {
            var t = this.getCurve();
            return t && t.getIndex();
          },
          getTime: function getTime() {
            var t = this.getCurve(),
              e = this._time;
            return t && null == e ? this._time = t.getTimeOf(this._point) : e;
          },
          getParameter: "#getTime",
          getPoint: function getPoint() {
            return this._point;
          },
          getOffset: function getOffset() {
            var t = this._offset;
            if (null == t) {
              t = 0;
              var e = this.getPath(),
                n = this.getIndex();
              if (e && null != n) for (var i = e.getCurves(), r = 0; r < n; r++) t += i[r].getLength();
              this._offset = t += this.getCurveOffset();
            }
            return t;
          },
          getCurveOffset: function getCurveOffset() {
            var t = this._curveOffset;
            if (null == t) {
              var e = this.getCurve(),
                n = this.getTime();
              this._curveOffset = t = null != n && e && e.getPartLength(0, n);
            }
            return t;
          },
          getIntersection: function getIntersection() {
            return this._intersection;
          },
          getDistance: function getDistance() {
            return this._distance;
          },
          divide: function divide() {
            var t = this.getCurve(),
              e = t && t.divideAtTime(this.getTime());
            return e && this._setSegment(e._segment1), e;
          },
          split: function split() {
            var t = this.getCurve(),
              e = t._path,
              n = t && t.splitAtTime(this.getTime());
            return n && this._setSegment(e.getLastSegment()), n;
          },
          equals: function equals(t, e) {
            var n = this === t;
            if (!n && t instanceof L) {
              var i = this.getCurve(),
                r = t.getCurve(),
                s = i._path;
              if (s === r._path) {
                var a = Math.abs,
                  o = a(this.getOffset() - t.getOffset()),
                  h = !e && this._intersection,
                  u = !e && t._intersection;
                n = (o < 1e-7 || s && a(s.getLength() - o) < 1e-7) && (!h && !u || h && u && h.equals(u, !0));
              }
            }
            return n;
          },
          toString: function toString() {
            var t = [],
              e = this.getPoint(),
              n = c.instance;
            e && t.push("point: " + e);
            var i = this.getIndex();
            null != i && t.push("index: " + i);
            var r = this.getTime();
            return null != r && t.push("time: " + n.number(r)), null != this._distance && t.push("distance: " + n.number(this._distance)), "{ " + t.join(", ") + " }";
          },
          isTouching: function isTouching() {
            var t = this._intersection;
            if (t && this.getTangent().isCollinear(t.getTangent())) {
              var e = this.getCurve(),
                n = t.getCurve();
              return !(e.isStraight() && n.isStraight() && e.getLine().intersect(n.getLine()));
            }
            return !1;
          },
          isCrossing: function isCrossing() {
            var t = this._intersection;
            if (!t) return !1;
            var e = this.getTime(),
              n = t.getTime(),
              i = e >= 1e-8 && e <= 1 - 1e-8,
              r = n >= 1e-8 && n <= 1 - 1e-8;
            if (i && r) return !this.isTouching();
            var s = this.getCurve(),
              a = s && e < 1e-8 ? s.getPrevious() : s,
              o = t.getCurve(),
              h = o && n < 1e-8 ? o.getPrevious() : o;
            if (e > 1 - 1e-8 && (s = s.getNext()), n > 1 - 1e-8 && (o = o.getNext()), !(a && s && h && o)) return !1;
            var u = [];
            function l(t, e) {
              var n = t.getValues(),
                i = E.classify(n).roots || E.getPeaks(n),
                r = i.length,
                s = E.getLength(n, e && r ? i[r - 1] : 0, !e && r ? i[0] : 1);
              u.push(r ? s : s / 32);
            }
            function c(t, e, n) {
              return e < n ? t > e && t < n : t > e || t < n;
            }
            i || (l(a, !0), l(s, !1)), r || (l(h, !0), l(o, !1));
            var f = this.getPoint(),
              d = Math.min.apply(Math, u),
              _ = i ? s.getTangentAtTime(e) : s.getPointAt(d).subtract(f),
              g = i ? _.negate() : a.getPointAt(-d).subtract(f),
              v = r ? o.getTangentAtTime(n) : o.getPointAt(d).subtract(f),
              p = r ? v.negate() : h.getPointAt(-d).subtract(f),
              m = g.getAngle(),
              y = _.getAngle(),
              w = p.getAngle(),
              x = v.getAngle();
            return !!(i ? c(m, w, x) ^ c(y, w, x) && c(m, x, w) ^ c(y, x, w) : c(w, m, y) ^ c(x, m, y) && c(w, y, m) ^ c(x, y, m));
          },
          hasOverlap: function hasOverlap() {
            return !!this._overlap;
          }
        }, a.each(E._evaluateMethods, function (t) {
          var e = t + "At";
          this[t] = function () {
            var t = this.getCurve(),
              n = this.getTime();
            return null != n && t && t[e](n, !0);
          };
        }, {
          preserve: !0
        }), new function () {
          function t(t, e, n) {
            var i = t.length,
              r = 0,
              s = i - 1;
            function a(n, r) {
              for (var s = n + r; s >= -1 && s <= i; s += r) {
                var a = t[(s % i + i) % i];
                if (!e.getPoint().isClose(a.getPoint(), 1e-7)) break;
                if (e.equals(a)) return a;
              }
              return null;
            }
            for (; r <= s;) {
              var o,
                h = r + s >>> 1,
                u = t[h];
              if (n && (o = e.equals(u) ? u : a(h, -1) || a(h, 1))) return e._overlap && (o._overlap = o._intersection._overlap = !0), o;
              var l = e.getPath(),
                c = u.getPath();
              (l !== c ? l._id - c._id : e.getIndex() + e.getTime() - (u.getIndex() + u.getTime())) < 0 ? s = h - 1 : r = h + 1;
            }
            return t.splice(r, 0, e), e;
          }
          return {
            statics: {
              insert: t,
              expand: function expand(e) {
                for (var n = e.slice(), i = e.length - 1; i >= 0; i--) t(n, e[i]._intersection, !1);
                return n;
              }
            }
          };
        }()),
        N = C.extend({
          _class: "PathItem",
          _selectBounds: !1,
          _canScaleStroke: !0,
          beans: !0,
          initialize: function initialize() {},
          statics: {
            create: function create(t) {
              var e, n, i;
              if (a.isPlainObject(t) ? (n = t.segments, e = t.pathData) : Array.isArray(t) ? n = t : "string" == typeof t && (e = t), n) {
                var r = n[0];
                i = r && Array.isArray(r[0]);
              } else e && (i = (e.match(/m/gi) || []).length > 1 || /z\s*\S+/i.test(e));
              return new (i ? F : B)(t);
            }
          },
          _asPathItem: function _asPathItem() {
            return this;
          },
          isClockwise: function isClockwise() {
            return this.getArea() >= 0;
          },
          setClockwise: function setClockwise(t) {
            this.isClockwise() != (t = !!t) && this.reverse();
          },
          setPathData: function setPathData(t) {
            var e,
              n,
              i,
              r = t && t.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/gi),
              s = !1,
              a = new _(),
              o = new _();
            function h(t, n) {
              var i = +e[t];
              return s && (i += a[n]), i;
            }
            function u(t) {
              return new _(h(t, "x"), h(t + 1, "y"));
            }
            this.clear();
            for (var l = 0, c = r && r.length; l < c; l++) {
              var f = r[l],
                d = f[0],
                g = d.toLowerCase(),
                p = (e = f.match(/[+-]?(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?/g)) && e.length;
              switch (s = d === g, "z" !== n || /[mz]/.test(g) || this.moveTo(a), g) {
                case "m":
                case "l":
                  for (var m = "m" === g, y = 0; y < p; y += 2) this[m ? "moveTo" : "lineTo"](a = u(y)), m && (o = a, m = !1);
                  i = a;
                  break;
                case "h":
                case "v":
                  var w = "h" === g ? "x" : "y";
                  a = a.clone();
                  for (y = 0; y < p; y++) a[w] = h(y, w), this.lineTo(a);
                  i = a;
                  break;
                case "c":
                  for (y = 0; y < p; y += 6) this.cubicCurveTo(u(y), i = u(y + 2), a = u(y + 4));
                  break;
                case "s":
                  for (y = 0; y < p; y += 4) this.cubicCurveTo(/[cs]/.test(n) ? a.multiply(2).subtract(i) : a, i = u(y), a = u(y + 2)), n = g;
                  break;
                case "q":
                  for (y = 0; y < p; y += 4) this.quadraticCurveTo(i = u(y), a = u(y + 2));
                  break;
                case "t":
                  for (y = 0; y < p; y += 2) this.quadraticCurveTo(i = /[qt]/.test(n) ? a.multiply(2).subtract(i) : a, a = u(y)), n = g;
                  break;
                case "a":
                  for (y = 0; y < p; y += 7) this.arcTo(a = u(y + 5), new v(+e[y], +e[y + 1]), +e[y + 2], +e[y + 4], +e[y + 3]);
                  break;
                case "z":
                  this.closePath(1e-12), a = o;
              }
              n = g;
            }
          },
          _canComposite: function _canComposite() {
            return !(this.hasFill() && this.hasStroke());
          },
          _contains: function _contains(t) {
            var e = t.isInside(this.getBounds({
              internal: !0,
              handle: !0
            })) ? this._getWinding(t) : {};
            return e.onPath || !!("evenodd" === this.getFillRule() ? 1 & e.windingL || 1 & e.windingR : e.winding);
          },
          getIntersections: function getIntersections(t, e, n, i) {
            var r = this === t || !t,
              s = this._matrix._orNullIfIdentity(),
              a = r ? s : (n || t._matrix)._orNullIfIdentity();
            return r || this.getBounds(s).intersects(t.getBounds(a), 1e-12) ? E.getIntersections(this.getCurves(), !r && t.getCurves(), e, s, a, i) : [];
          },
          getCrossings: function getCrossings(t) {
            return this.getIntersections(t, function (t) {
              return t.isCrossing();
            });
          },
          getNearestLocation: function getNearestLocation() {
            for (var t = _.read(arguments), e = this.getCurves(), n = 1 / 0, i = null, r = 0, s = e.length; r < s; r++) {
              var a = e[r].getNearestLocation(t);
              a._distance < n && (n = a._distance, i = a);
            }
            return i;
          },
          getNearestPoint: function getNearestPoint() {
            var t = this.getNearestLocation.apply(this, arguments);
            return t ? t.getPoint() : t;
          },
          interpolate: function interpolate(t, e, n) {
            var i = !this._children,
              r = i ? "_segments" : "_children",
              s = t[r],
              a = e[r],
              o = this[r];
            if (!s || !a || s.length !== a.length) throw new Error("Invalid operands in interpolate() call: " + t + ", " + e);
            var h = o.length,
              u = a.length;
            if (h < u) for (var l = i ? O : B, c = h; c < u; c++) this.add(new l());else h > u && this[i ? "removeSegments" : "removeChildren"](u, h);
            for (c = 0; c < u; c++) o[c].interpolate(s[c], a[c], n);
            i && (this.setClosed(t._closed), this._changed(9));
          },
          compare: function compare(t) {
            var e = !1;
            if (t) {
              var n = this._children || [this],
                i = t._children ? t._children.slice() : [t],
                r = n.length,
                s = i.length,
                a = [],
                o = 0;
              e = !0;
              for (var h = l.findItemBoundsCollisions(n, i, f.GEOMETRIC_EPSILON), u = r - 1; u >= 0 && e; u--) {
                var c = n[u];
                e = !1;
                var d = h[u];
                if (d) for (var _ = d.length - 1; _ >= 0 && !e; _--) c.compare(i[d[_]]) && (a[d[_]] || (a[d[_]] = !0, o++), e = !0);
              }
              e = e && o === s;
            }
            return e;
          }
        }),
        B = N.extend({
          _class: "Path",
          _serializeFields: {
            segments: [],
            closed: !1
          },
          initialize: function initialize(t) {
            this._closed = !1, this._segments = [], this._version = 0;
            var e = arguments,
              r = Array.isArray(t) ? "object" === i(t[0]) ? t : e : !t || t.size !== n || t.x === n && t.point === n ? null : e;
            r && r.length > 0 ? this.setSegments(r) : (this._curves = n, this._segmentSelection = 0, r || "string" != typeof t || (this.setPathData(t), t = null)), this._initialize(!r && t);
          },
          _equals: function _equals(t) {
            return this._closed === t._closed && a.equals(this._segments, t._segments);
          },
          copyContent: function copyContent(t) {
            this.setSegments(t._segments), this._closed = t._closed;
          },
          _changed: function t(e) {
            if (t.base.call(this, e), 8 & e) {
              if (this._length = this._area = n, 32 & e) this._version++;else if (this._curves) for (var i = 0, r = this._curves.length; i < r; i++) this._curves[i]._changed();
            } else 64 & e && (this._bounds = n);
          },
          getStyle: function getStyle() {
            var t = this._parent;
            return (t instanceof F ? t : this)._style;
          },
          getSegments: function getSegments() {
            return this._segments;
          },
          setSegments: function setSegments(t) {
            var e = this.isFullySelected(),
              i = t && t.length;
            if (this._segments.length = 0, this._segmentSelection = 0, this._curves = n, i) {
              var r = t[i - 1];
              "boolean" == typeof r && (this.setClosed(r), i--), this._add(O.readList(t, 0, {}, i));
            }
            e && this.setFullySelected(!0);
          },
          getFirstSegment: function getFirstSegment() {
            return this._segments[0];
          },
          getLastSegment: function getLastSegment() {
            return this._segments[this._segments.length - 1];
          },
          getCurves: function getCurves() {
            var t = this._curves,
              e = this._segments;
            if (!t) {
              var n = this._countCurves();
              t = this._curves = new Array(n);
              for (var i = 0; i < n; i++) t[i] = new E(this, e[i], e[i + 1] || e[0]);
            }
            return t;
          },
          getFirstCurve: function getFirstCurve() {
            return this.getCurves()[0];
          },
          getLastCurve: function getLastCurve() {
            var t = this.getCurves();
            return t[t.length - 1];
          },
          isClosed: function isClosed() {
            return this._closed;
          },
          setClosed: function setClosed(t) {
            if (this._closed != (t = !!t)) {
              if (this._closed = t, this._curves) {
                var e = this._curves.length = this._countCurves();
                t && (this._curves[e - 1] = new E(this, this._segments[e - 1], this._segments[0]));
              }
              this._changed(41);
            }
          }
        }, {
          beans: !0,
          getPathData: function getPathData(t, e) {
            var n,
              i,
              r,
              s,
              a,
              o,
              h,
              u,
              l = this._segments,
              f = l.length,
              d = new c(e),
              _ = new Array(6),
              g = !0,
              v = [];
            function p(e, l) {
              if (e._transformCoordinates(t, _), n = _[0], i = _[1], g) v.push("M" + d.pair(n, i)), g = !1;else if (a = _[2], o = _[3], a === n && o === i && h === r && u === s) {
                if (!l) {
                  var c = n - r,
                    f = i - s;
                  v.push(0 === c ? "v" + d.number(f) : 0 === f ? "h" + d.number(c) : "l" + d.pair(c, f));
                }
              } else v.push("c" + d.pair(h - r, u - s) + " " + d.pair(a - r, o - s) + " " + d.pair(n - r, i - s));
              r = n, s = i, h = _[4], u = _[5];
            }
            if (!f) return "";
            for (var m = 0; m < f; m++) p(l[m]);
            return this._closed && f > 0 && (p(l[0], !0), v.push("z")), v.join("");
          },
          isEmpty: function isEmpty() {
            return !this._segments.length;
          },
          _transformContent: function _transformContent(t) {
            for (var e = this._segments, n = new Array(6), i = 0, r = e.length; i < r; i++) e[i]._transformCoordinates(t, n, !0);
            return !0;
          },
          _add: function _add(t, e) {
            for (var n = this._segments, i = this._curves, r = t.length, s = null == e, o = (e = s ? n.length : e, 0); o < r; o++) {
              var h = t[o];
              h._path && (h = t[o] = h.clone()), h._path = this, h._index = e + o, h._selection && this._updateSelection(h, 0, h._selection);
            }
            if (s) a.push(n, t);else {
              n.splice.apply(n, [e, 0].concat(t));
              o = e + r;
              for (var u = n.length; o < u; o++) n[o]._index = o;
            }
            if (i) {
              var l = this._countCurves(),
                c = e > 0 && e + r - 1 === l ? e - 1 : e,
                f = c,
                d = Math.min(c + r, l);
              t._curves && (i.splice.apply(i, [c, 0].concat(t._curves)), f += t._curves.length);
              for (o = f; o < d; o++) i.splice(o, 0, new E(this, null, null));
              this._adjustCurves(c, d);
            }
            return this._changed(41), t;
          },
          _adjustCurves: function _adjustCurves(t, e) {
            for (var n, i = this._segments, r = this._curves, s = t; s < e; s++) (n = r[s])._path = this, n._segment1 = i[s], n._segment2 = i[s + 1] || i[0], n._changed();
            (n = r[this._closed && !t ? i.length - 1 : t - 1]) && (n._segment2 = i[t] || i[0], n._changed()), (n = r[e]) && (n._segment1 = i[e], n._changed());
          },
          _countCurves: function _countCurves() {
            var t = this._segments.length;
            return !this._closed && t > 0 ? t - 1 : t;
          },
          add: function add(t) {
            var e = arguments;
            return e.length > 1 && "number" != typeof t ? this._add(O.readList(e)) : this._add([O.read(e)])[0];
          },
          insert: function insert(t, e) {
            var n = arguments;
            return n.length > 2 && "number" != typeof e ? this._add(O.readList(n, 1), t) : this._add([O.read(n, 1)], t)[0];
          },
          addSegment: function addSegment() {
            return this._add([O.read(arguments)])[0];
          },
          insertSegment: function insertSegment(t) {
            return this._add([O.read(arguments, 1)], t)[0];
          },
          addSegments: function addSegments(t) {
            return this._add(O.readList(t));
          },
          insertSegments: function insertSegments(t, e) {
            return this._add(O.readList(e), t);
          },
          removeSegment: function removeSegment(t) {
            return this.removeSegments(t, t + 1)[0] || null;
          },
          removeSegments: function removeSegments(t, e, n) {
            t = t || 0, e = a.pick(e, this._segments.length);
            var i = this._segments,
              r = this._curves,
              s = i.length,
              o = i.splice(t, e - t),
              h = o.length;
            if (!h) return o;
            for (var u = 0; u < h; u++) {
              var l = o[u];
              l._selection && this._updateSelection(l, l._selection, 0), l._index = l._path = null;
            }
            u = t;
            for (var c = i.length; u < c; u++) i[u]._index = u;
            if (r) {
              var f = t > 0 && e === s + (this._closed ? 1 : 0) ? t - 1 : t;
              for (u = (r = r.splice(f, h)).length - 1; u >= 0; u--) r[u]._path = null;
              n && (o._curves = r.slice(1)), this._adjustCurves(f, f);
            }
            return this._changed(41), o;
          },
          clear: "#removeSegments",
          hasHandles: function hasHandles() {
            for (var t = this._segments, e = 0, n = t.length; e < n; e++) if (t[e].hasHandles()) return !0;
            return !1;
          },
          clearHandles: function clearHandles() {
            for (var t = this._segments, e = 0, n = t.length; e < n; e++) t[e].clearHandles();
          },
          getLength: function getLength() {
            if (null == this._length) {
              for (var t = this.getCurves(), e = 0, n = 0, i = t.length; n < i; n++) e += t[n].getLength();
              this._length = e;
            }
            return this._length;
          },
          getArea: function getArea() {
            var t = this._area;
            if (null == t) {
              var e = this._segments,
                n = this._closed;
              t = 0;
              for (var i = 0, r = e.length; i < r; i++) {
                var s = i + 1 === r;
                t += E.getArea(E.getValues(e[i], e[s ? 0 : i + 1], null, s && !n));
              }
              this._area = t;
            }
            return t;
          },
          isFullySelected: function isFullySelected() {
            var t = this._segments.length;
            return this.isSelected() && t > 0 && this._segmentSelection === 7 * t;
          },
          setFullySelected: function setFullySelected(t) {
            t && this._selectSegments(!0), this.setSelected(t);
          },
          setSelection: function t(e) {
            1 & e || this._selectSegments(!1), t.base.call(this, e);
          },
          _selectSegments: function _selectSegments(t) {
            var e = this._segments,
              n = e.length,
              i = t ? 7 : 0;
            this._segmentSelection = i * n;
            for (var r = 0; r < n; r++) e[r]._selection = i;
          },
          _updateSelection: function _updateSelection(t, e, n) {
            t._selection = n, (this._segmentSelection += n - e) > 0 && this.setSelected(!0);
          },
          divideAt: function divideAt(t) {
            var e,
              n = this.getLocationAt(t);
            return n && (e = n.getCurve().divideAt(n.getCurveOffset())) ? e._segment1 : null;
          },
          splitAt: function splitAt(t) {
            var e = this.getLocationAt(t),
              n = e && e.index,
              i = e && e.time;
            i > 1 - 1e-8 && (n++, i = 0);
            var r = this.getCurves();
            if (n >= 0 && n < r.length) {
              i >= 1e-8 && r[n++].divideAtTime(i);
              var s,
                a = this.removeSegments(n, this._segments.length, !0);
              return this._closed ? (this.setClosed(!1), s = this) : ((s = new B(C.NO_INSERT)).insertAbove(this), s.copyAttributes(this)), s._add(a, 0), this.addSegment(a[0]), s;
            }
            return null;
          },
          split: function split(t, e) {
            var i,
              r = e === n ? t : (i = this.getCurves()[t]) && i.getLocationAtTime(e);
            return null != r ? this.splitAt(r) : null;
          },
          join: function join(t, e) {
            var n = e || 0;
            if (t && t !== this) {
              var i = t._segments,
                r = this.getLastSegment(),
                s = t.getLastSegment();
              if (!s) return this;
              r && r._point.isClose(s._point, n) && t.reverse();
              var a = t.getFirstSegment();
              if (r && r._point.isClose(a._point, n)) r.setHandleOut(a._handleOut), this._add(i.slice(1));else {
                var o = this.getFirstSegment();
                o && o._point.isClose(a._point, n) && t.reverse(), s = t.getLastSegment(), o && o._point.isClose(s._point, n) ? (o.setHandleIn(s._handleIn), this._add(i.slice(0, i.length - 1), 0)) : this._add(i.slice());
              }
              t._closed && this._add([i[0]]), t.remove();
            }
            var h = this.getFirstSegment(),
              u = this.getLastSegment();
            return h !== u && h._point.isClose(u._point, n) && (h.setHandleIn(u._handleIn), u.remove(), this.setClosed(!0)), this;
          },
          reduce: function reduce(t) {
            for (var e = this.getCurves(), n = t && t.simplify, i = n ? 1e-7 : 0, r = e.length - 1; r >= 0; r--) {
              var s = e[r];
              !s.hasHandles() && (!s.hasLength(i) || n && s.isCollinear(s.getNext())) && s.remove();
            }
            return this;
          },
          reverse: function reverse() {
            this._segments.reverse();
            for (var t = 0, e = this._segments.length; t < e; t++) {
              var n = this._segments[t],
                i = n._handleIn;
              n._handleIn = n._handleOut, n._handleOut = i, n._index = t;
            }
            this._curves = null, this._changed(9);
          },
          flatten: function flatten(t) {
            for (var e = new j(this, t || .25, 256, !0).parts, n = e.length, i = [], r = 0; r < n; r++) i.push(new O(e[r].curve.slice(0, 2)));
            !this._closed && n > 0 && i.push(new O(e[n - 1].curve.slice(6))), this.setSegments(i);
          },
          simplify: function simplify(t) {
            var e = new R(this).fit(t || 2.5);
            return e && this.setSegments(e), !!e;
          },
          smooth: function smooth(t) {
            var e = this,
              i = t || {},
              r = i.type || "asymmetric",
              s = this._segments,
              a = s.length,
              o = this._closed;
            function h(t, n) {
              var i = t && t.index;
              if (null != i) {
                var r = t.path;
                if (r && r !== e) throw new Error(t._class + " " + i + " of " + r + " is not part of " + e);
                n && t instanceof E && i++;
              } else i = "number" == typeof t ? t : n;
              return Math.min(i < 0 && o ? i % a : i < 0 ? i + a : i, a - 1);
            }
            var u = o && i.from === n && i.to === n,
              l = h(i.from, 0),
              c = h(i.to, a - 1);
            if (l > c) if (o) l -= a;else {
              var f = l;
              l = c, c = f;
            }
            if (/^(?:asymmetric|continuous)$/.test(r)) {
              var d = "asymmetric" === r,
                _ = Math.min,
                g = c - l + 1,
                v = g - 1,
                p = u ? _(g, 4) : 1,
                m = p,
                y = p,
                w = [];
              if (o || (m = _(1, l), y = _(1, a - c - 1)), (v += m + y) <= 1) return;
              for (var x = 0, b = l - m; x <= v; x++, b++) w[x] = s[(b < 0 ? b + a : b) % a]._point;
              var C = w[0]._x + 2 * w[1]._x,
                S = w[0]._y + 2 * w[1]._y,
                k = 2,
                I = v - 1,
                P = [C],
                M = [S],
                A = [k],
                T = [],
                O = [];
              for (x = 1; x < v; x++) {
                var z = x < I,
                  L = z ? 4 : d ? 2 : 7,
                  N = z ? 4 : d ? 3 : 8,
                  B = z ? 2 : d ? 0 : 1,
                  F = (z ? 1 : d ? 1 : 2) / k;
                k = A[x] = L - F, C = P[x] = N * w[x]._x + B * w[x + 1]._x - F * C, S = M[x] = N * w[x]._y + B * w[x + 1]._y - F * S;
              }
              T[I] = P[I] / A[I], O[I] = M[I] / A[I];
              for (x = v - 2; x >= 0; x--) T[x] = (P[x] - T[x + 1]) / A[x], O[x] = (M[x] - O[x + 1]) / A[x];
              T[v] = (3 * w[v]._x - T[I]) / 2, O[v] = (3 * w[v]._y - O[I]) / 2;
              x = m;
              var j = v - y;
              for (b = l; x <= j; x++, b++) {
                var R = s[b < 0 ? b + a : b],
                  D = R._point,
                  q = T[x] - D._x,
                  V = O[x] - D._y;
                (u || x < j) && R.setHandleOut(q, V), (u || x > m) && R.setHandleIn(-q, -V);
              }
            } else for (x = l; x <= c; x++) s[x < 0 ? x + a : x].smooth(i, !u && x === l, !u && x === c);
          },
          toShape: function toShape(t) {
            if (!this._closed) return null;
            var e,
              i,
              r,
              s,
              a,
              o,
              h,
              u = this._segments;
            function l(t, e) {
              var n = u[t],
                i = n.getNext(),
                r = u[e],
                s = r.getNext();
              return n._handleOut.isZero() && i._handleIn.isZero() && r._handleOut.isZero() && s._handleIn.isZero() && i._point.subtract(n._point).isCollinear(s._point.subtract(r._point));
            }
            function c(t) {
              var e = u[t],
                n = e.getNext(),
                i = e._handleOut,
                r = n._handleIn;
              if (i.isOrthogonal(r)) {
                var s = e._point,
                  a = n._point,
                  o = new x(s, i, !0).intersect(new x(a, r, !0), !0);
                return o && f.isZero(i.getLength() / o.subtract(s).getLength() - .5522847498307936) && f.isZero(r.getLength() / o.subtract(a).getLength() - .5522847498307936);
              }
              return !1;
            }
            function d(t, e) {
              return u[t]._point.getDistance(u[e]._point);
            }
            if (!this.hasHandles() && 4 === u.length && l(0, 2) && l(1, 3) && (a = u[1], o = a.getPrevious(), h = a.getNext(), o._handleOut.isZero() && a._handleIn.isZero() && a._handleOut.isZero() && h._handleIn.isZero() && a._point.subtract(o._point).isOrthogonal(h._point.subtract(a._point))) ? (e = I.Rectangle, i = new v(d(0, 3), d(0, 1)), s = u[1]._point.add(u[2]._point).divide(2)) : 8 === u.length && c(0) && c(2) && c(4) && c(6) && l(1, 5) && l(3, 7) ? (e = I.Rectangle, r = (i = new v(d(1, 6), d(0, 3))).subtract(new v(d(0, 7), d(1, 2))).divide(2), s = u[3]._point.add(u[4]._point).divide(2)) : 4 === u.length && c(0) && c(1) && c(2) && c(3) && (f.isZero(d(0, 2) - d(1, 3)) ? (e = I.Circle, r = d(0, 2) / 2) : (e = I.Ellipse, r = new v(d(2, 0) / 2, d(3, 1) / 2)), s = u[1]._point), e) {
              var _ = this.getPosition(!0),
                g = new e({
                  center: _,
                  size: i,
                  radius: r,
                  insert: !1
                });
              return g.copyAttributes(this, !0), g._matrix.prepend(this._matrix), g.rotate(s.subtract(_).getAngle() + 90), (t === n || t) && g.insertAbove(this), g;
            }
            return null;
          },
          toPath: "#clone",
          compare: function t(e) {
            if (!e || e instanceof F) return t.base.call(this, e);
            var n = this.getCurves(),
              i = e.getCurves(),
              r = n.length,
              s = i.length;
            if (!r || !s) return r == s;
            for (var a, o, h = n[0].getValues(), u = [], l = 0, c = 0, f = 0; f < s; f++) {
              var d = i[f].getValues();
              if (u.push(d), v = E.getOverlaps(h, d)) {
                a = !f && v[0][0] > 0 ? s - 1 : f, o = v[0][1];
                break;
              }
            }
            var _,
              g = Math.abs;
            for (d = u[a]; h && d;) {
              var v;
              if (v = E.getOverlaps(h, d)) if (g(v[0][0] - c) < 1e-8) {
                1 === (c = v[1][0]) && (h = ++l < r ? n[l].getValues() : null, c = 0);
                var p = v[0][1];
                if (g(p - o) < 1e-8) {
                  if (_ || (_ = [a, p]), 1 === (o = v[1][1]) && (++a >= s && (a = 0), d = u[a] || i[a].getValues(), o = 0), !h) return _[0] === a && _[1] === o;
                  continue;
                }
              }
              break;
            }
            return !1;
          },
          _hitTestSelf: function _hitTestSelf(t, e, n, i) {
            var r,
              s,
              a,
              o,
              h,
              u,
              l = this,
              c = this.getStyle(),
              f = this._segments,
              d = f.length,
              _ = this._closed,
              g = e._tolerancePadding,
              v = g,
              p = e.stroke && c.hasStroke(),
              m = e.fill && c.hasFill(),
              y = e.curves,
              w = p ? c.getStrokeWidth() / 2 : m && e.tolerance > 0 || y ? 0 : null;
            function x(e, n) {
              return t.subtract(e).divide(n).length <= 1;
            }
            function b(t, n, i) {
              if (!e.selected || n.isSelected()) {
                var r = t._point;
                if (n !== r && (n = n.add(r)), x(n, v)) return new T(i, l, {
                  segment: t,
                  point: n
                });
              }
            }
            function C(t, n) {
              return (n || e.segments) && b(t, t._point, "segment") || !n && e.handles && (b(t, t._handleIn, "handle-in") || b(t, t._handleOut, "handle-out"));
            }
            function S(t) {
              o.add(t);
            }
            function k(e) {
              var n,
                h = _ || e._index > 0 && e._index < d - 1;
              return "round" === (h ? r : s) ? x(e._point, v) : (o = new B({
                internal: !0,
                closed: !0
              }), h ? e.isSmooth() || B._addBevelJoin(e, r, w, a, null, i, S, !0) : "square" === s && B._addSquareCap(e, s, w, null, i, S, !0), o.isEmpty() ? void 0 : o.contains(t) || (n = o.getNearestLocation(t)) && x(n.getPoint(), g));
            }
            if (null !== w && (w > 0 ? (r = c.getStrokeJoin(), s = c.getStrokeCap(), a = c.getMiterLimit(), v = v.add(B._getStrokePadding(w, i))) : r = s = "round"), !e.ends || e.segments || _) {
              if (e.segments || e.handles) for (var I = 0; I < d; I++) if (u = C(f[I])) return u;
            } else if (u = C(f[0], !0) || C(f[d - 1], !0)) return u;
            if (null !== w) {
              if (h = this.getNearestLocation(t)) {
                var P = h.getTime();
                0 === P || 1 === P && d > 1 ? k(h.getSegment()) || (h = null) : x(h.getPoint(), v) || (h = null);
              }
              if (!h && "miter" === r && d > 1) for (I = 0; I < d; I++) {
                var M = f[I];
                if (t.getDistance(M._point) <= a * w && k(M)) {
                  h = M.getLocation();
                  break;
                }
              }
            }
            return !h && m && this._contains(t) || h && !p && !y ? new T("fill", this) : h ? new T(p ? "stroke" : "curve", this, {
              location: h,
              point: h.getPoint()
            }) : null;
          }
        }, a.each(E._evaluateMethods, function (t) {
          this[t + "At"] = function (e) {
            var n = this.getLocationAt(e);
            return n && n[t]();
          };
        }, {
          beans: !1,
          getLocationOf: function getLocationOf() {
            for (var t = _.read(arguments), e = this.getCurves(), n = 0, i = e.length; n < i; n++) {
              var r = e[n].getLocationOf(t);
              if (r) return r;
            }
            return null;
          },
          getOffsetOf: function getOffsetOf() {
            var t = this.getLocationOf.apply(this, arguments);
            return t ? t.getOffset() : null;
          },
          getLocationAt: function getLocationAt(t) {
            if ("number" == typeof t) {
              for (var e = this.getCurves(), n = 0, i = 0, r = e.length; i < r; i++) {
                var s = n,
                  a = e[i];
                if ((n += a.getLength()) > t) return a.getLocationAt(t - s);
              }
              if (e.length > 0 && t <= this.getLength()) return new L(e[e.length - 1], 1);
            } else if (t && t.getPath && t.getPath() === this) return t;
            return null;
          },
          getOffsetsWithTangent: function getOffsetsWithTangent() {
            var t = _.read(arguments);
            if (t.isZero()) return [];
            for (var e = [], n = 0, i = this.getCurves(), r = 0, s = i.length; r < s; r++) {
              for (var a = i[r], o = a.getTimesWithTangent(t), h = 0, u = o.length; h < u; h++) {
                var l = n + a.getOffsetAtTime(o[h]);
                e.indexOf(l) < 0 && e.push(l);
              }
              n += a.length;
            }
            return e;
          }
        }), new function () {
          function t(t, e, n) {
            var i,
              r,
              s,
              a,
              o,
              h,
              u,
              l,
              c = e._segments,
              f = c.length,
              d = new Array(6),
              _ = !0;
            function g(e) {
              if (n) e._transformCoordinates(n, d), i = d[0], r = d[1];else {
                var c = e._point;
                i = c._x, r = c._y;
              }
              if (_) t.moveTo(i, r), _ = !1;else {
                if (n) o = d[2], h = d[3];else {
                  var f = e._handleIn;
                  o = i + f._x, h = r + f._y;
                }
                o === i && h === r && u === s && l === a ? t.lineTo(i, r) : t.bezierCurveTo(u, l, o, h, i, r);
              }
              if (s = i, a = r, n) u = d[4], l = d[5];else {
                f = e._handleOut;
                u = s + f._x, l = a + f._y;
              }
            }
            for (var v = 0; v < f; v++) g(c[v]);
            e._closed && f > 0 && g(c[0]);
          }
          return {
            _draw: function _draw(e, n, i, r) {
              var s = n.dontStart,
                a = n.dontFinish || n.clip,
                o = this.getStyle(),
                h = o.hasFill(),
                u = o.hasStroke(),
                l = o.getDashArray(),
                c = !ht.support.nativeDash && u && l && l.length;
              function f(t) {
                return l[(t % c + c) % c];
              }
              if (s || e.beginPath(), (h || u && !c || a) && (t(e, this, r), this._closed && e.closePath()), !a && (h || u) && (this._setStyles(e, n, i), h && (e.fill(o.getFillRule()), e.shadowColor = "rgba(0,0,0,0)"), u)) {
                if (c) {
                  s || e.beginPath();
                  for (var d, _ = new j(this, .25, 32, !1, r), g = _.length, v = -o.getDashOffset(), p = 0; v > 0;) v -= f(p--) + f(p--);
                  for (; v < g;) d = v + f(p++), (v > 0 || d > 0) && _.drawPart(e, Math.max(v, 0), Math.max(d, 0)), v = d + f(p++);
                }
                e.stroke();
              }
            },
            _drawSelected: function _drawSelected(e, n) {
              e.beginPath(), t(e, this, n), e.stroke(), function (t, e, n, i) {
                if (!(i <= 0)) for (var r, s, a = i / 2, o = i - 2, h = a - 1, u = new Array(6), l = 0, c = e.length; l < c; l++) {
                  var f = e[l],
                    d = f._selection;
                  if (f._transformCoordinates(n, u), r = u[0], s = u[1], 2 & d && g(2), 4 & d && g(4), t.fillRect(r - a, s - a, i, i), o > 0 && !(1 & d)) {
                    var _ = t.fillStyle;
                    t.fillStyle = "#ffffff", t.fillRect(r - h, s - h, o, o), t.fillStyle = _;
                  }
                }
                function g(e) {
                  var n = u[e],
                    i = u[e + 1];
                  r == n && s == i || (t.beginPath(), t.moveTo(r, s), t.lineTo(n, i), t.stroke(), t.beginPath(), t.arc(n, i, a, 0, 2 * Math.PI, !0), t.fill());
                }
              }(e, this._segments, n, ht.settings.handleSize);
            }
          };
        }(), new function () {
          function t(t) {
            var e = t._segments;
            if (!e.length) throw new Error("Use a moveTo() command first");
            return e[e.length - 1];
          }
          return {
            moveTo: function moveTo() {
              var t = this._segments;
              1 === t.length && this.removeSegment(0), t.length || this._add([new O(_.read(arguments))]);
            },
            moveBy: function moveBy() {
              throw new Error("moveBy() is unsupported on Path items.");
            },
            lineTo: function lineTo() {
              this._add([new O(_.read(arguments))]);
            },
            cubicCurveTo: function cubicCurveTo() {
              var e = arguments,
                n = _.read(e),
                i = _.read(e),
                r = _.read(e),
                s = t(this);
              s.setHandleOut(n.subtract(s._point)), this._add([new O(r, i.subtract(r))]);
            },
            quadraticCurveTo: function quadraticCurveTo() {
              var e = arguments,
                n = _.read(e),
                i = _.read(e),
                r = t(this)._point;
              this.cubicCurveTo(n.add(r.subtract(n).multiply(1 / 3)), n.add(i.subtract(n).multiply(1 / 3)), i);
            },
            curveTo: function curveTo() {
              var e = arguments,
                n = _.read(e),
                i = _.read(e),
                r = a.pick(a.read(e), .5),
                s = 1 - r,
                o = t(this)._point,
                h = n.subtract(o.multiply(s * s)).subtract(i.multiply(r * r)).divide(2 * r * s);
              if (h.isNaN()) throw new Error("Cannot put a curve through points with parameter = " + r);
              this.quadraticCurveTo(h, i);
            },
            arcTo: function arcTo() {
              var e,
                n,
                i,
                r,
                s = arguments,
                o = Math.abs,
                h = Math.sqrt,
                u = t(this),
                l = u._point,
                c = _.read(s),
                d = a.peek(s);
              if ("boolean" == typeof (b = a.pick(d, !0))) var g = (S = l.add(c).divide(2)).add(S.subtract(l).rotate(b ? -90 : 90));else if (a.remain(s) <= 2) g = c, c = _.read(s);else if (!l.equals(c)) {
                var p = v.read(s),
                  m = f.isZero;
                if (m(p.width) || m(p.height)) return this.lineTo(c);
                var y = a.read(s),
                  b = !!a.read(s),
                  C = !!a.read(s),
                  S = l.add(c).divide(2),
                  k = ($ = l.subtract(S).rotate(-y)).x,
                  I = $.y,
                  P = o(p.width),
                  M = o(p.height),
                  A = P * P,
                  T = M * M,
                  z = k * k,
                  E = I * I,
                  L = h(z / A + E / T);
                if (L > 1 && (A = (P *= L) * P, T = (M *= L) * M), o(L = (A * T - A * E - T * z) / (A * E + T * z)) < 1e-12 && (L = 0), L < 0) throw new Error("Cannot create an arc with the given arguments");
                e = new _(P * I / M, -M * k / P).multiply((C === b ? -1 : 1) * h(L)).rotate(y).add(S), n = (i = (r = new w().translate(e).rotate(y).scale(P, M))._inverseTransform(l)).getDirectedAngle(r._inverseTransform(c)), !b && n > 0 ? n -= 360 : b && n < 0 && (n += 360);
              }
              if (g) {
                var N = new x(l.add(g).divide(2), g.subtract(l).rotate(90), !0),
                  B = new x(g.add(c).divide(2), c.subtract(g).rotate(90), !0),
                  F = new x(l, c),
                  j = F.getSide(g);
                if (!(e = N.intersect(B, !0))) {
                  if (!j) return this.lineTo(c);
                  throw new Error("Cannot create an arc with the given arguments");
                }
                n = (i = l.subtract(e)).getDirectedAngle(c.subtract(e));
                var R = F.getSide(e, !0);
                0 === R ? n = j * o(n) : j === R && (n += n < 0 ? 360 : -360);
              }
              if (n) {
                for (var D = o(n), q = D >= 360 ? 4 : Math.ceil((D - 1e-7) / 90), V = n / q, U = V * Math.PI / 360, H = 4 / 3 * Math.sin(U) / (1 + Math.cos(U)), Z = [], W = 0; W <= q; W++) {
                  var $ = c,
                    G = null;
                  if (W < q && (G = i.rotate(90).multiply(H), r ? ($ = r._transformPoint(i), G = r._transformPoint(i.add(G)).subtract($)) : $ = e.add(i)), W) {
                    var J = i.rotate(-90).multiply(H);
                    r && (J = r._transformPoint(i.add(J)).subtract($)), Z.push(new O($, J, G));
                  } else u.setHandleOut(G);
                  i = i.rotate(V);
                }
                this._add(Z);
              }
            },
            lineBy: function lineBy() {
              var e = _.read(arguments),
                n = t(this)._point;
              this.lineTo(n.add(e));
            },
            curveBy: function curveBy() {
              var e = arguments,
                n = _.read(e),
                i = _.read(e),
                r = a.read(e),
                s = t(this)._point;
              this.curveTo(s.add(n), s.add(i), r);
            },
            cubicCurveBy: function cubicCurveBy() {
              var e = arguments,
                n = _.read(e),
                i = _.read(e),
                r = _.read(e),
                s = t(this)._point;
              this.cubicCurveTo(s.add(n), s.add(i), s.add(r));
            },
            quadraticCurveBy: function quadraticCurveBy() {
              var e = arguments,
                n = _.read(e),
                i = _.read(e),
                r = t(this)._point;
              this.quadraticCurveTo(r.add(n), r.add(i));
            },
            arcBy: function arcBy() {
              var e = arguments,
                n = t(this)._point,
                i = n.add(_.read(e)),
                r = a.pick(a.peek(e), !0);
              "boolean" == typeof r ? this.arcTo(i, r) : this.arcTo(i, n.add(_.read(e)));
            },
            closePath: function closePath(t) {
              this.setClosed(!0), this.join(this, t);
            }
          };
        }(), {
          _getBounds: function _getBounds(t, e) {
            var n = e.handle ? "getHandleBounds" : e.stroke ? "getStrokeBounds" : "getBounds";
            return B[n](this._segments, this._closed, this, t, e);
          },
          statics: {
            getBounds: function getBounds(t, e, n, i, r, s) {
              var a = t[0];
              if (!a) return new m();
              var o = new Array(6),
                h = a._transformCoordinates(i, new Array(6)),
                u = h.slice(0, 2),
                l = u.slice(),
                c = new Array(2);
              function f(t) {
                t._transformCoordinates(i, o);
                for (var e = 0; e < 2; e++) E._addBounds(h[e], h[e + 4], o[e + 2], o[e], e, s ? s[e] : 0, u, l, c);
                var n = h;
                h = o, o = n;
              }
              for (var d = 1, _ = t.length; d < _; d++) f(t[d]);
              return e && f(a), new m(u[0], u[1], l[0] - u[0], l[1] - u[1]);
            },
            getStrokeBounds: function getStrokeBounds(t, e, n, i, r) {
              var s = n.getStyle(),
                a = s.hasStroke(),
                o = s.getStrokeWidth(),
                h = a && n._getStrokeMatrix(i, r),
                u = a && B._getStrokePadding(o, h),
                l = B.getBounds(t, e, n, i, r, u);
              if (!a) return l;
              var c = o / 2,
                f = s.getStrokeJoin(),
                d = s.getStrokeCap(),
                _ = s.getMiterLimit(),
                g = new m(new v(u));
              function p(t) {
                l = l.include(t);
              }
              function y(t) {
                l = l.unite(g.setCenter(t._point.transform(i)));
              }
              function w(t, e) {
                "round" === e || t.isSmooth() ? y(t) : B._addBevelJoin(t, e, c, _, i, h, p);
              }
              function x(t, e) {
                "round" === e ? y(t) : B._addSquareCap(t, e, c, i, h, p);
              }
              var b = t.length - (e ? 0 : 1);
              if (b > 0) {
                for (var C = 1; C < b; C++) w(t[C], f);
                e ? w(t[0], f) : (x(t[0], d), x(t[t.length - 1], d));
              }
              return l;
            },
            _getStrokePadding: function _getStrokePadding(t, e) {
              if (!e) return [t, t];
              var n = new _(t, 0).transform(e),
                i = new _(0, t).transform(e),
                r = n.getAngleInRadians(),
                s = n.getLength(),
                a = i.getLength(),
                o = Math.sin(r),
                h = Math.cos(r),
                u = Math.tan(r),
                l = Math.atan2(a * u, s),
                c = Math.atan2(a, u * s);
              return [Math.abs(s * Math.cos(l) * h + a * Math.sin(l) * o), Math.abs(a * Math.sin(c) * h + s * Math.cos(c) * o)];
            },
            _addBevelJoin: function _addBevelJoin(t, e, n, i, r, s, a, o) {
              var h = t.getCurve(),
                u = h.getPrevious(),
                l = h.getPoint1().transform(r),
                c = u.getNormalAtTime(1).multiply(n).transform(s),
                f = h.getNormalAtTime(0).multiply(n).transform(s),
                d = c.getDirectedAngle(f);
              if ((d < 0 || d >= 180) && (c = c.negate(), f = f.negate()), o && a(l), a(l.add(c)), "miter" === e) {
                var g = new x(l.add(c), new _(-c.y, c.x), !0).intersect(new x(l.add(f), new _(-f.y, f.x), !0), !0);
                g && l.getDistance(g) <= i * n && a(g);
              }
              a(l.add(f));
            },
            _addSquareCap: function _addSquareCap(t, e, n, i, r, s, a) {
              var o = t._point.transform(i),
                h = t.getLocation(),
                u = h.getNormal().multiply(0 === h.getTime() ? n : -n).transform(r);
              "square" === e && (a && (s(o.subtract(u)), s(o.add(u))), o = o.add(u.rotate(-90))), s(o.add(u)), s(o.subtract(u));
            },
            getHandleBounds: function getHandleBounds(t, e, n, i, r) {
              var s,
                a,
                o = n.getStyle();
              if (r.stroke && o.hasStroke()) {
                var h = n._getStrokeMatrix(i, r),
                  u = o.getStrokeWidth() / 2,
                  l = u;
                "miter" === o.getStrokeJoin() && (l = u * o.getMiterLimit()), "square" === o.getStrokeCap() && (l = Math.max(l, u * Math.SQRT2)), s = B._getStrokePadding(u, h), a = B._getStrokePadding(l, h);
              }
              for (var c = new Array(6), f = 1 / 0, d = -f, _ = f, g = d, v = 0, p = t.length; v < p; v++) {
                t[v]._transformCoordinates(i, c);
                for (var y = 0; y < 6; y += 2) {
                  var w = y ? s : a,
                    x = w ? w[0] : 0,
                    b = w ? w[1] : 0,
                    C = c[y],
                    S = c[y + 1],
                    k = C - x,
                    I = C + x,
                    P = S - b,
                    M = S + b;
                  k < f && (f = k), I > d && (d = I), P < _ && (_ = P), M > g && (g = M);
                }
              }
              return new m(f, _, d - f, g - _);
            }
          }
        });
      B.inject({
        statics: new function () {
          var t = .5522847498307936,
            e = [new O([-1, 0], [0, t], [0, -t]), new O([0, -1], [-t, 0], [t, 0]), new O([1, 0], [0, -t], [0, t]), new O([0, 1], [t, 0], [-t, 0])];
          function n(t, e, n) {
            var i = a.getNamed(n),
              r = new B(i && 0 == i.insert && C.NO_INSERT);
            return r._add(t), r._closed = e, r.set(i, {
              insert: !0
            });
          }
          function i(t, i, r) {
            for (var s = new Array(4), a = 0; a < 4; a++) {
              var o = e[a];
              s[a] = new O(o._point.multiply(i).add(t), o._handleIn.multiply(i), o._handleOut.multiply(i));
            }
            return n(s, !0, r);
          }
          return {
            Line: function Line() {
              var t = arguments;
              return n([new O(_.readNamed(t, "from")), new O(_.readNamed(t, "to"))], !1, t);
            },
            Circle: function Circle() {
              var t = arguments,
                e = _.readNamed(t, "center"),
                n = a.readNamed(t, "radius");
              return i(e, new v(n), t);
            },
            Rectangle: function Rectangle() {
              var e,
                i = arguments,
                r = m.readNamed(i, "rectangle"),
                s = v.readNamed(i, "radius", 0, {
                  readNull: !0
                }),
                a = r.getBottomLeft(!0),
                o = r.getTopLeft(!0),
                h = r.getTopRight(!0),
                u = r.getBottomRight(!0);
              if (!s || s.isZero()) e = [new O(a), new O(o), new O(h), new O(u)];else {
                var l = (s = v.min(s, r.getSize(!0).divide(2))).width,
                  c = s.height,
                  f = l * t,
                  d = c * t;
                e = [new O(a.add(l, 0), null, [-f, 0]), new O(a.subtract(0, c), [0, d]), new O(o.add(0, c), null, [0, -d]), new O(o.add(l, 0), [-f, 0], null), new O(h.subtract(l, 0), null, [f, 0]), new O(h.add(0, c), [0, -d], null), new O(u.subtract(0, c), null, [0, d]), new O(u.subtract(l, 0), [f, 0])];
              }
              return n(e, !0, i);
            },
            RoundRectangle: "#Rectangle",
            Ellipse: function Ellipse() {
              var t = arguments,
                e = I._readEllipse(t);
              return i(e.center, e.radius, t);
            },
            Oval: "#Ellipse",
            Arc: function Arc() {
              var t = arguments,
                e = _.readNamed(t, "from"),
                n = _.readNamed(t, "through"),
                i = _.readNamed(t, "to"),
                r = a.getNamed(t),
                s = new B(r && 0 == r.insert && C.NO_INSERT);
              return s.moveTo(e), s.arcTo(n, i), s.set(r);
            },
            RegularPolygon: function RegularPolygon() {
              for (var t = arguments, e = _.readNamed(t, "center"), i = a.readNamed(t, "sides"), r = a.readNamed(t, "radius"), s = 360 / i, o = i % 3 == 0, h = new _(0, o ? -r : r), u = o ? -1 : .5, l = new Array(i), c = 0; c < i; c++) l[c] = new O(e.add(h.rotate((c + u) * s)));
              return n(l, !0, t);
            },
            Star: function Star() {
              for (var t = arguments, e = _.readNamed(t, "center"), i = 2 * a.readNamed(t, "points"), r = a.readNamed(t, "radius1"), s = a.readNamed(t, "radius2"), o = 360 / i, h = new _(0, -1), u = new Array(i), l = 0; l < i; l++) u[l] = new O(e.add(h.rotate(o * l).multiply(l % 2 ? s : r)));
              return n(u, !0, t);
            }
          };
        }()
      });
      var F = N.extend({
        _class: "CompoundPath",
        _serializeFields: {
          children: []
        },
        beans: !0,
        initialize: function initialize(t) {
          this._children = [], this._namedChildren = {}, this._initialize(t) || ("string" == typeof t ? this.setPathData(t) : this.addChildren(Array.isArray(t) ? t : arguments));
        },
        insertChildren: function t(e, n) {
          var i = n,
            r = i[0];
          r && "number" == typeof r[0] && (i = [i]);
          for (var s = n.length - 1; s >= 0; s--) {
            var o = i[s];
            i !== n || o instanceof B || (i = a.slice(i)), Array.isArray(o) ? i[s] = new B({
              segments: o,
              insert: !1
            }) : o instanceof F && (i.splice.apply(i, [s, 1].concat(o.removeChildren())), o.remove());
          }
          return t.base.call(this, e, i);
        },
        reduce: function t(e) {
          for (var n = this._children, i = n.length - 1; i >= 0; i--) {
            var r;
            (r = n[i].reduce(e)).isEmpty() && r.remove();
          }
          return n.length ? t.base.call(this) : ((r = new B(C.NO_INSERT)).copyAttributes(this), r.insertAbove(this), this.remove(), r);
        },
        isClosed: function isClosed() {
          for (var t = this._children, e = 0, n = t.length; e < n; e++) if (!t[e]._closed) return !1;
          return !0;
        },
        setClosed: function setClosed(t) {
          for (var e = this._children, n = 0, i = e.length; n < i; n++) e[n].setClosed(t);
        },
        getFirstSegment: function getFirstSegment() {
          var t = this.getFirstChild();
          return t && t.getFirstSegment();
        },
        getLastSegment: function getLastSegment() {
          var t = this.getLastChild();
          return t && t.getLastSegment();
        },
        getCurves: function getCurves() {
          for (var t = this._children, e = [], n = 0, i = t.length; n < i; n++) a.push(e, t[n].getCurves());
          return e;
        },
        getFirstCurve: function getFirstCurve() {
          var t = this.getFirstChild();
          return t && t.getFirstCurve();
        },
        getLastCurve: function getLastCurve() {
          var t = this.getLastChild();
          return t && t.getLastCurve();
        },
        getArea: function getArea() {
          for (var t = this._children, e = 0, n = 0, i = t.length; n < i; n++) e += t[n].getArea();
          return e;
        },
        getLength: function getLength() {
          for (var t = this._children, e = 0, n = 0, i = t.length; n < i; n++) e += t[n].getLength();
          return e;
        },
        getPathData: function getPathData(t, e) {
          for (var n = this._children, i = [], r = 0, s = n.length; r < s; r++) {
            var a = n[r],
              o = a._matrix;
            i.push(a.getPathData(t && !o.isIdentity() ? t.appended(o) : t, e));
          }
          return i.join("");
        },
        _hitTestChildren: function t(e, n, i) {
          return t.base.call(this, e, n.class === B || "path" === n.type ? n : a.set({}, n, {
            fill: !1
          }), i);
        },
        _draw: function _draw(t, e, n, i) {
          var r = this._children;
          if (r.length) {
            e = e.extend({
              dontStart: !0,
              dontFinish: !0
            }), t.beginPath();
            for (var s = 0, a = r.length; s < a; s++) r[s].draw(t, e, i);
            if (!e.clip) {
              this._setStyles(t, e, n);
              var o = this._style;
              o.hasFill() && (t.fill(o.getFillRule()), t.shadowColor = "rgba(0,0,0,0)"), o.hasStroke() && t.stroke();
            }
          }
        },
        _drawSelected: function _drawSelected(t, e, n) {
          for (var i = this._children, r = 0, s = i.length; r < s; r++) {
            var a = i[r],
              o = a._matrix;
            n[a._id] || a._drawSelected(t, o.isIdentity() ? e : e.appended(o));
          }
        }
      }, new function () {
        function t(t, e) {
          var n = t._children;
          if (e && !n.length) throw new Error("Use a moveTo() command first");
          return n[n.length - 1];
        }
        return a.each(["lineTo", "cubicCurveTo", "quadraticCurveTo", "curveTo", "arcTo", "lineBy", "cubicCurveBy", "quadraticCurveBy", "curveBy", "arcBy"], function (e) {
          this[e] = function () {
            var n = t(this, !0);
            n[e].apply(n, arguments);
          };
        }, {
          moveTo: function moveTo() {
            var e = t(this),
              n = e && e.isEmpty() ? e : new B(C.NO_INSERT);
            n !== e && this.addChild(n), n.moveTo.apply(n, arguments);
          },
          moveBy: function moveBy() {
            var e = t(this, !0),
              n = e && e.getLastSegment(),
              i = _.read(arguments);
            this.moveTo(n ? i.add(n._point) : i);
          },
          closePath: function closePath(e) {
            t(this, !0).closePath(e);
          }
        });
      }(), a.each(["reverse", "flatten", "simplify", "smooth"], function (t) {
        this[t] = function (e) {
          for (var n, i = this._children, r = 0, s = i.length; r < s; r++) n = i[r][t](e) || n;
          return n;
        };
      }, {}));
      N.inject(new function () {
        var t = Math.min,
          e = Math.max,
          i = Math.abs,
          r = {
            unite: {
              1: !0,
              2: !0
            },
            intersect: {
              2: !0
            },
            subtract: {
              1: !0
            },
            exclude: {
              1: !0,
              "-1": !0
            }
          };
        function s(t) {
          return t._children || [t];
        }
        function o(t, e) {
          var n = t.clone(!1).reduce({
            simplify: !0
          }).transform(null, !0, !0);
          if (e) {
            for (var i = s(n), r = 0, a = i.length; r < a; r++) {
              (t = i[r])._closed || t.isEmpty() || (t.closePath(1e-12), t.getFirstSegment().setHandleIn(0, 0), t.getLastSegment().setHandleOut(0, 0));
            }
            n = n.resolveCrossings().reorient("nonzero" === n.getFillRule(), !0);
          }
          return n;
        }
        function h(t, e, n, i, r) {
          var s = new F(C.NO_INSERT);
          return s.addChildren(t, !0), s = s.reduce({
            simplify: e
          }), r && 0 == r.insert || s.insertAbove(i && n.isSibling(i) && n.getIndex() < i.getIndex() ? i : n), s.copyAttributes(n, !0), s;
        }
        function u(t) {
          return t.hasOverlap() || t.isCrossing();
        }
        function c(t, e, n, i) {
          if (i && (0 == i.trace || i.stroke) && /^(subtract|intersect)$/.test(n)) return d(t, e, n);
          var c = o(t, !0),
            f = e && t !== e && o(e, !0),
            _ = r[n];
          _[n] = !0, f && (_.subtract || _.exclude) ^ f.isClockwise() ^ c.isClockwise() && f.reverse();
          var g,
            m = p(L.expand(c.getIntersections(f, u))),
            x = s(c),
            b = f && s(f),
            C = [],
            S = [];
          function k(t) {
            for (var e = 0, n = t.length; e < n; e++) {
              var i = t[e];
              a.push(C, i._segments), a.push(S, i.getCurves()), i._overlapsOnly = !0;
            }
          }
          function I(t) {
            for (var e = [], n = 0, i = t && t.length; n < i; n++) e.push(S[t[n]]);
            return e;
          }
          if (m.length) {
            k(x), b && k(b);
            for (var P = new Array(S.length), M = 0, A = S.length; M < A; M++) P[M] = S[M].getValues();
            var T = l.findCurveBoundsCollisions(P, P, 0, !0),
              O = {};
            for (M = 0; M < S.length; M++) {
              var z = S[M],
                E = z._path._id;
              (O[E] = O[E] || {})[z.getIndex()] = {
                hor: I(T[M].hor),
                ver: I(T[M].ver)
              };
            }
            for (M = 0, A = m.length; M < A; M++) y(m[M]._segment, c, f, O, _);
            for (M = 0, A = C.length; M < A; M++) {
              var N = C[M],
                B = N._intersection;
              N._winding || y(N, c, f, O, _), B && B._overlap || (N._path._overlapsOnly = !1);
            }
            g = w(C, _);
          } else g = v(b ? x.concat(b) : x.slice(), function (t) {
            return !!_[t];
          });
          return h(g, !0, t, e, i);
        }
        function d(t, e, n) {
          var i = o(t),
            r = o(e),
            s = i.getIntersections(r, u),
            a = "subtract" === n,
            l = "divide" === n,
            c = {},
            f = [];
          function d(t) {
            if (!c[t._id] && (l || r.contains(t.getPointAt(t.getLength() / 2)) ^ a)) return f.unshift(t), c[t._id] = !0;
          }
          for (var _ = s.length - 1; _ >= 0; _--) {
            var g = s[_].split();
            g && (d(g) && g.getFirstSegment().setHandleIn(0, 0), i.getLastSegment().setHandleOut(0, 0));
          }
          return d(i), h(f, !1, t, e);
        }
        function _(t, e) {
          for (var n = t; n;) {
            if (n === e) return;
            n = n._previous;
          }
          for (; t._next && t._next !== e;) t = t._next;
          if (!t._next) {
            for (; e._previous;) e = e._previous;
            t._next = e, e._previous = t;
          }
        }
        function g(t) {
          for (var e = t.length - 1; e >= 0; e--) t[e].clearHandles();
        }
        function v(t, e, n) {
          var r = t && t.length;
          if (r) {
            var s = a.each(t, function (t, e) {
                this[t._id] = {
                  container: null,
                  winding: t.isClockwise() ? 1 : -1,
                  index: e
                };
              }, {}),
              o = t.slice().sort(function (t, e) {
                return i(e.getArea()) - i(t.getArea());
              }),
              h = o[0],
              u = l.findItemBoundsCollisions(o, null, f.GEOMETRIC_EPSILON);
            null == n && (n = h.isClockwise());
            for (var c = 0; c < r; c++) {
              var d = o[c],
                _ = s[d._id],
                g = 0,
                v = u[c];
              if (v) for (var p = null, m = v.length - 1; m >= 0; m--) if (v[m] < c) {
                p = p || d.getInteriorPoint();
                var y = o[v[m]];
                if (y.contains(p)) {
                  var w = s[y._id];
                  g = w.winding, _.winding += g, _.container = w.exclude ? w.container : y;
                  break;
                }
              }
              if (e(_.winding) === e(g)) _.exclude = !0, t[_.index] = null;else {
                var x = _.container;
                d.setClockwise(x ? !x.isClockwise() : n);
              }
            }
          }
          return t;
        }
        function p(t, e, n) {
          var i,
            r,
            s,
            a = e && [],
            o = !1,
            h = n || [],
            u = n && {};
          function l(t) {
            return t._path._id + "." + t._segment1._index;
          }
          for (var c = (n && n.length) - 1; c >= 0; c--) {
            (f = n[c])._path && (u[l(f)] = !0);
          }
          for (c = t.length - 1; c >= 0; c--) {
            var f,
              d,
              v = t[c],
              p = v._time,
              m = p,
              y = e && !e(v);
            if ((f = v._curve) && (f !== r ? (o = !f.hasHandles() || u && u[l(f)], i = [], s = null, r = f) : s >= 1e-8 && (p /= s)), y) i && i.push(v);else {
              if (e && a.unshift(v), s = m, p < 1e-8) d = f._segment1;else if (p > 1 - 1e-8) d = f._segment2;else {
                var w = f.divideAtTime(p, !0);
                o && h.push(f, w), d = w._segment1;
                for (var x = i.length - 1; x >= 0; x--) {
                  var b = i[x];
                  b._time = (b._time - p) / (1 - p);
                }
              }
              v._setSegment(d);
              var C = d._intersection,
                S = v._intersection;
              if (C) {
                _(C, S);
                for (var k = C; k;) _(k._intersection, C), k = k._next;
              } else d._intersection = S;
            }
          }
          return n || g(h), a || t;
        }
        function m(n, r, s, a, o) {
          var h,
            u,
            l = Array.isArray(r) ? r : r[s ? "hor" : "ver"],
            c = s ? 1 : 0,
            f = 1 ^ c,
            d = [n.x, n.y],
            _ = d[c],
            g = d[f],
            v = 1e-6,
            p = _ - 1e-9,
            y = _ + 1e-9,
            w = 0,
            x = 0,
            b = 0,
            C = 0,
            S = !1,
            k = !1,
            I = 1,
            P = [];
          function M(i) {
            var u = i[f + 0],
              l = i[f + 6];
            if (!(g < t(u, l) || g > e(u, l))) {
              var d = i[c + 0],
                w = i[c + 2],
                x = i[c + 4],
                k = i[c + 6];
              if (u !== l) {
                var M = g === u ? 0 : g === l ? 1 : p > e(d, w, x, k) || y < t(d, w, x, k) ? 1 : E.solveCubic(i, f, g, P, 0, 1) > 0 ? P[0] : 1,
                  A = 0 === M ? d : 1 === M ? k : E.getPoint(i, M)[s ? "y" : "x"],
                  T = u > l ? 1 : -1,
                  O = h[f] > h[f + 6] ? 1 : -1,
                  z = h[c + 6];
                return g !== u ? (A < p ? b += T : A > y ? C += T : S = !0, A > _ - v && A < _ + v && (I /= 2)) : (T !== O ? d < p ? b += T : d > y && (C += T) : d != z && (z < y && A > y ? (C += T, S = !0) : z > p && A < p && (b += T, S = !0)), I /= 4), h = i, !o && A > p && A < y && 0 === E.getTangent(i, M)[s ? "x" : "y"] && m(n, r, !s, a, !0);
              }
              (d < y && k > p || k < y && d > p) && (S = !0);
            }
          }
          function A(n) {
            var i = n[f + 0],
              r = n[f + 2],
              a = n[f + 4],
              o = n[f + 6];
            if (g <= e(i, r, a, o) && g >= t(i, r, a, o)) for (var h, u = n[c + 0], l = n[c + 2], d = n[c + 4], _ = n[c + 6], v = p > e(u, l, d, _) || y < t(u, l, d, _) ? [n] : E.getMonoCurves(n, s), m = 0, w = v.length; m < w; m++) if (h = M(v[m])) return h;
          }
          for (var T = 0, O = l.length; T < O; T++) {
            var z,
              L = l[T],
              N = L._path,
              B = L.getValues();
            if (!(T && l[T - 1]._path === N || (h = null, N._closed || (u = E.getValues(N.getLastCurve().getSegment2(), L.getSegment1(), null, !a))[f] !== u[f + 6] && (h = u), h))) {
              h = B;
              for (var F = N.getLastCurve(); F && F !== L;) {
                var j = F.getValues();
                if (j[f] !== j[f + 6]) {
                  h = j;
                  break;
                }
                F = F.getPrevious();
              }
            }
            if (z = A(B)) return z;
            if (T + 1 === O || l[T + 1]._path !== N) {
              if (u && (z = A(u))) return z;
              !S || b || C || (b = C = N.isClockwise(a) ^ s ? 1 : -1), w += b, x += C, b = C = 0, S && (k = !0, S = !1), u = null;
            }
          }
          return w = i(w), x = i(x), {
            winding: e(w, x),
            windingL: w,
            windingR: x,
            quality: I,
            onPath: k
          };
        }
        function y(t, e, n, r, s) {
          var a = [],
            o = t,
            h = 0;
          do {
            if (y = t.getCurve()) {
              var u = y.getLength();
              a.push({
                segment: t,
                curve: y,
                length: u
              }), h += u;
            }
            t = t.getNext();
          } while (t && !t._intersection && t !== o);
          for (var l = [.5, .25, .75], c = {
              winding: 0,
              quality: -1
            }, d = 0; d < l.length && c.quality < .5; d++) {
            u = h * l[d];
            for (var _ = 0, g = a.length; _ < g; _++) {
              var v = a[_],
                p = v.length;
              if (u <= p) {
                var y,
                  w = (y = v.curve)._path,
                  x = w._parent,
                  b = x instanceof F ? x : w,
                  C = f.clamp(y.getTimeAt(u), .001, .999),
                  S = y.getPointAtTime(C),
                  k = i(y.getTangentAtTime(C).y) < Math.SQRT1_2,
                  I = null;
                if (s.subtract && n) {
                  var P = (b === e ? n : e)._getWinding(S, k, !0);
                  if (b === e && P.winding || b === n && !P.winding) {
                    if (P.quality < 1) continue;
                    I = {
                      winding: 0,
                      quality: 1
                    };
                  }
                }
                (I = I || m(S, r[w._id][y.getIndex()], k, !0)).quality > c.quality && (c = I);
                break;
              }
              u -= p;
            }
          }
          for (_ = a.length - 1; _ >= 0; _--) a[_].segment._winding = c;
        }
        function w(t, e) {
          var n,
            i = [];
          function r(t) {
            var n;
            return !(!t || t._visited || e && (!e[(n = t._winding || {}).winding] || e.unite && 2 === n.winding && n.windingL && n.windingR));
          }
          function s(t) {
            if (t) for (var e = 0, i = n.length; e < i; e++) if (t === n[e]) return !0;
            return !1;
          }
          function a(t) {
            for (var e = t._segments, n = 0, i = e.length; n < i; n++) e[n]._visited = !0;
          }
          function o(t, e) {
            var i = t._intersection,
              a = i,
              o = [];
            function h(i, a) {
              for (; i && i !== a;) {
                var h = i._segment,
                  u = h && h._path;
                if (u) {
                  var l = h.getNext() || u.getFirstSegment(),
                    c = l._intersection;
                  h !== t && (s(h) || s(l) || l && r(h) && (r(l) || c && r(c._segment))) && o.push(h), e && n.push(h);
                }
                i = i._next;
              }
            }
            if (e && (n = [t]), i) {
              for (h(i); i && i._previous;) i = i._previous;
              h(i, a);
            }
            return o;
          }
          t.sort(function (t, e) {
            var n = t._intersection,
              i = e._intersection,
              r = !(!n || !n._overlap),
              s = !(!i || !i._overlap),
              a = t._path,
              o = e._path;
            return r ^ s ? r ? 1 : -1 : !n ^ !i ? n ? 1 : -1 : a !== o ? a._id - o._id : t._index - e._index;
          });
          for (var h = 0, u = t.length; h < u; h++) {
            var l,
              c,
              f,
              d = t[h],
              _ = r(d),
              g = null,
              v = !1,
              p = !0,
              m = [];
            if (_ && d._path._overlapsOnly) {
              var y = d._path,
                w = d._intersection._segment._path;
              y.compare(w) && (y.getArea() && i.push(y.clone(!1)), a(y), a(w), _ = !1);
            }
            for (; _;) {
              var x = !g,
                b = o(d, x),
                S = b.shift(),
                k = !(v = !x && (s(d) || s(S))) && S;
              if (x && (g = new B(C.NO_INSERT), l = null), v) {
                (d.isFirst() || d.isLast()) && (p = d._path._closed), d._visited = !0;
                break;
              }
              if (k && l && (m.push(l), l = null), l || (k && b.push(d), l = {
                start: g._segments.length,
                crossings: b,
                visited: c = [],
                handleIn: f
              }), k && (d = S), !r(d)) {
                g.removeSegments(l.start);
                for (var I = 0, P = c.length; I < P; I++) c[I]._visited = !1;
                c.length = 0;
                do {
                  (d = l && l.crossings.shift()) && d._path || (d = null, (l = m.pop()) && (c = l.visited, f = l.handleIn));
                } while (l && !r(d));
                if (!d) break;
              }
              var M = d.getNext();
              g.add(new O(d._point, f, M && d._handleOut)), d._visited = !0, c.push(d), d = M || d._path.getFirstSegment(), f = M && M._handleIn;
            }
            v && (p && (g.getFirstSegment().setHandleIn(f), g.setClosed(p)), 0 !== g.getArea() && i.push(g));
          }
          return i;
        }
        return {
          _getWinding: function _getWinding(t, e, n) {
            return m(t, this.getCurves(), e, n);
          },
          unite: function unite(t, e) {
            return c(this, t, "unite", e);
          },
          intersect: function intersect(t, e) {
            return c(this, t, "intersect", e);
          },
          subtract: function subtract(t, e) {
            return c(this, t, "subtract", e);
          },
          exclude: function exclude(t, e) {
            return c(this, t, "exclude", e);
          },
          divide: function divide(t, e) {
            return e && (0 == e.trace || e.stroke) ? d(this, t, "divide") : h([this.subtract(t, e), this.intersect(t, e)], !0, this, t, e);
          },
          resolveCrossings: function resolveCrossings() {
            var t = this._children,
              e = t || [this];
            function n(t, e) {
              var n = t && t._intersection;
              return n && n._overlap && n._path === e;
            }
            var i = !1,
              r = !1,
              s = this.getIntersections(null, function (t) {
                return t.hasOverlap() && (i = !0) || t.isCrossing() && (r = !0);
              }),
              o = i && r && [];
            if (s = L.expand(s), i) for (var h = p(s, function (t) {
                return t.hasOverlap();
              }, o), u = h.length - 1; u >= 0; u--) {
              var l = h[u],
                c = l._path,
                f = l._segment,
                d = f.getPrevious(),
                _ = f.getNext();
              n(d, c) && n(_, c) && (f.remove(), d._handleOut._set(0, 0), _._handleIn._set(0, 0), d === f || d.getCurve().hasLength() || (_._handleIn.set(d._handleIn), d.remove()));
            }
            r && (p(s, i && function (t) {
              var e = t.getCurve(),
                n = t.getSegment(),
                i = t._intersection,
                r = i._curve,
                s = i._segment;
              if (e && r && e._path && r._path) return !0;
              n && (n._intersection = null), s && (s._intersection = null);
            }, o), o && g(o), e = w(a.each(e, function (t) {
              a.push(this, t._segments);
            }, [])));
            var v,
              m = e.length;
            return m > 1 && t ? (e !== t && this.setChildren(e), v = this) : 1 !== m || t || (e[0] !== this && this.setSegments(e[0].removeSegments()), v = this), v || ((v = new F(C.NO_INSERT)).addChildren(e), (v = v.reduce()).copyAttributes(this), this.replaceWith(v)), v;
          },
          reorient: function reorient(t, e) {
            var i = this._children;
            return i && i.length ? this.setChildren(v(this.removeChildren(), function (e) {
              return !!(t ? e : 1 & e);
            }, e)) : e !== n && this.setClockwise(e), this;
          },
          getInteriorPoint: function getInteriorPoint() {
            var n = this.getBounds().getCenter(!0);
            if (!this.contains(n)) {
              for (var i = this.getCurves(), r = n.y, s = [], a = [], o = 0, h = i.length; o < h; o++) {
                var u = i[o].getValues(),
                  l = u[1],
                  c = u[3],
                  f = u[5],
                  d = u[7];
                if (r >= t(l, c, f, d) && r <= e(l, c, f, d)) for (var _ = E.getMonoCurves(u), g = 0, v = _.length; g < v; g++) {
                  var p = _[g],
                    m = p[1],
                    y = p[7];
                  if (m !== y && (r >= m && r <= y || r >= y && r <= m)) {
                    var w = r === m ? p[0] : r === y ? p[6] : 1 === E.solveCubic(p, 1, r, a, 0, 1) ? E.getPoint(p, a[0]).x : (p[0] + p[6]) / 2;
                    s.push(w);
                  }
                }
              }
              s.length > 1 && (s.sort(function (t, e) {
                return t - e;
              }), n.x = (s[0] + s[1]) / 2);
            }
            return n;
          }
        };
      }());
      var j = a.extend({
          _class: "PathFlattener",
          initialize: function initialize(t, e, n, i, r) {
            var s,
              a = [],
              o = [],
              h = 0,
              u = 1 / (n || 32),
              l = t._segments,
              c = l[0];
            function f(t, n) {
              var s = E.getValues(t, n, r);
              a.push(s), function t(n, r, s, a) {
                if (!(a - s > u) || i && E.isStraight(n) || E.isFlatEnough(n, e || .25)) {
                  var l = n[6] - n[0],
                    c = n[7] - n[1],
                    f = Math.sqrt(l * l + c * c);
                  f > 0 && (h += f, o.push({
                    offset: h,
                    curve: n,
                    index: r,
                    time: a
                  }));
                } else {
                  var d = E.subdivide(n, .5),
                    _ = (s + a) / 2;
                  t(d[0], r, s, _), t(d[1], r, _, a);
                }
              }(s, t._index, 0, 1);
            }
            for (var d = 1, _ = l.length; d < _; d++) f(c, s = l[d]), c = s;
            t._closed && f(s || c, l[0]), this.curves = a, this.parts = o, this.length = h, this.index = 0;
          },
          _get: function _get(t) {
            for (var e, n = this.parts, i = n.length, r = this.index; e = r, r && !(n[--r].offset < t););
            for (; e < i; e++) {
              var s = n[e];
              if (s.offset >= t) {
                this.index = e;
                var a = n[e - 1],
                  o = a && a.index === s.index ? a.time : 0,
                  h = a ? a.offset : 0;
                return {
                  index: s.index,
                  time: o + (s.time - o) * (t - h) / (s.offset - h)
                };
              }
            }
            return {
              index: n[i - 1].index,
              time: 1
            };
          },
          drawPart: function drawPart(t, e, n) {
            for (var i = this._get(e), r = this._get(n), s = i.index, a = r.index; s <= a; s++) {
              var o = E.getPart(this.curves[s], s === i.index ? i.time : 0, s === r.index ? r.time : 1);
              s === i.index && t.moveTo(o[0], o[1]), t.bezierCurveTo.apply(t, o.slice(2));
            }
          }
        }, a.each(E._evaluateMethods, function (t) {
          this[t + "At"] = function (e) {
            var n = this._get(e);
            return E[t](this.curves[n.index], n.time);
          };
        }, {})),
        R = a.extend({
          initialize: function initialize(t) {
            for (var e, n = this.points = [], i = t._segments, r = t._closed, s = 0, a = i.length; s < a; s++) {
              var o = i[s].point;
              e && e.equals(o) || n.push(e = o.clone());
            }
            r && (n.unshift(n[n.length - 1]), n.push(n[1])), this.closed = r;
          },
          fit: function fit(t) {
            var e = this.points,
              n = e.length,
              i = null;
            return n > 0 && (i = [new O(e[0])], n > 1 && (this.fitCubic(i, t, 0, n - 1, e[1].subtract(e[0]), e[n - 2].subtract(e[n - 1])), this.closed && (i.shift(), i.pop()))), i;
          },
          fitCubic: function fitCubic(t, e, n, i, r, s) {
            var a = this.points;
            if (i - n != 1) {
              for (var o, h = this.chordLengthParameterize(n, i), u = Math.max(e, e * e), l = !0, c = 0; c <= 4; c++) {
                var f = this.generateBezier(n, i, h, r, s),
                  d = this.findMaxError(n, i, f, h);
                if (d.error < e && l) return void this.addCurve(t, f);
                if (o = d.index, d.error >= u) break;
                l = this.reparameterize(n, i, h, f), u = d.error;
              }
              var _ = a[o - 1].subtract(a[o + 1]);
              this.fitCubic(t, e, n, o, r, _), this.fitCubic(t, e, o, i, _.negate(), s);
            } else {
              var g = a[n],
                v = a[i],
                p = g.getDistance(v) / 3;
              this.addCurve(t, [g, g.add(r.normalize(p)), v.add(s.normalize(p)), v]);
            }
          },
          addCurve: function addCurve(t, e) {
            t[t.length - 1].setHandleOut(e[1].subtract(e[0])), t.push(new O(e[3], e[2].subtract(e[3])));
          },
          generateBezier: function generateBezier(t, e, n, i, r) {
            for (var s = Math.abs, a = this.points, o = a[t], h = a[e], u = [[0, 0], [0, 0]], l = [0, 0], c = 0, f = e - t + 1; c < f; c++) {
              var d = n[c],
                _ = 1 - d,
                g = 3 * d * _,
                v = _ * _ * _,
                p = g * _,
                m = g * d,
                y = d * d * d,
                w = i.normalize(p),
                x = r.normalize(m),
                b = a[t + c].subtract(o.multiply(v + p)).subtract(h.multiply(m + y));
              u[0][0] += w.dot(w), u[0][1] += w.dot(x), u[1][0] = u[0][1], u[1][1] += x.dot(x), l[0] += w.dot(b), l[1] += x.dot(b);
            }
            var C,
              S,
              k = u[0][0] * u[1][1] - u[1][0] * u[0][1];
            if (s(k) > 1e-12) {
              var I = u[0][0] * l[1] - u[1][0] * l[0];
              C = (l[0] * u[1][1] - l[1] * u[0][1]) / k, S = I / k;
            } else {
              var P = u[0][0] + u[0][1],
                M = u[1][0] + u[1][1];
              C = S = s(P) > 1e-12 ? l[0] / P : s(M) > 1e-12 ? l[1] / M : 0;
            }
            var A,
              T,
              O = h.getDistance(o),
              z = 1e-12 * O;
            if (C < z || S < z) C = S = O / 3;else {
              var E = h.subtract(o);
              A = i.normalize(C), T = r.normalize(S), A.dot(E) - T.dot(E) > O * O && (C = S = O / 3, A = T = null);
            }
            return [o, o.add(A || i.normalize(C)), h.add(T || r.normalize(S)), h];
          },
          reparameterize: function reparameterize(t, e, n, i) {
            for (var r = t; r <= e; r++) n[r - t] = this.findRoot(i, this.points[r], n[r - t]);
            r = 1;
            for (var s = n.length; r < s; r++) if (n[r] <= n[r - 1]) return !1;
            return !0;
          },
          findRoot: function findRoot(t, e, n) {
            for (var i = [], r = [], s = 0; s <= 2; s++) i[s] = t[s + 1].subtract(t[s]).multiply(3);
            for (s = 0; s <= 1; s++) r[s] = i[s + 1].subtract(i[s]).multiply(2);
            var a = this.evaluate(3, t, n),
              o = this.evaluate(2, i, n),
              h = this.evaluate(1, r, n),
              u = a.subtract(e),
              l = o.dot(o) + u.dot(h);
            return f.isMachineZero(l) ? n : n - u.dot(o) / l;
          },
          evaluate: function evaluate(t, e, n) {
            for (var i = e.slice(), r = 1; r <= t; r++) for (var s = 0; s <= t - r; s++) i[s] = i[s].multiply(1 - n).add(i[s + 1].multiply(n));
            return i[0];
          },
          chordLengthParameterize: function chordLengthParameterize(t, e) {
            for (var n = [0], i = t + 1; i <= e; i++) n[i - t] = n[i - t - 1] + this.points[i].getDistance(this.points[i - 1]);
            i = 1;
            for (var r = e - t; i <= r; i++) n[i] /= n[r];
            return n;
          },
          findMaxError: function findMaxError(t, e, n, i) {
            for (var r = Math.floor((e - t + 1) / 2), s = 0, a = t + 1; a < e; a++) {
              var o = this.evaluate(3, n, i[a - t]).subtract(this.points[a]),
                h = o.x * o.x + o.y * o.y;
              h >= s && (s = h, r = a);
            }
            return {
              error: s,
              index: r
            };
          }
        }),
        D = C.extend({
          _class: "TextItem",
          _applyMatrix: !1,
          _canApplyMatrix: !1,
          _serializeFields: {
            content: null
          },
          _boundsOptions: {
            stroke: !1,
            handle: !1
          },
          initialize: function initialize(t) {
            this._content = "", this._lines = [];
            var e = t && a.isPlainObject(t) && t.x === n && t.y === n;
            this._initialize(e && t, !e && _.read(arguments));
          },
          _equals: function _equals(t) {
            return this._content === t._content;
          },
          copyContent: function copyContent(t) {
            this.setContent(t._content);
          },
          getContent: function getContent() {
            return this._content;
          },
          setContent: function setContent(t) {
            this._content = "" + t, this._lines = this._content.split(/\r\n|\n|\r/gm), this._changed(521);
          },
          isEmpty: function isEmpty() {
            return !this._content;
          },
          getCharacterStyle: "#getStyle",
          setCharacterStyle: "#setStyle",
          getParagraphStyle: "#getStyle",
          setParagraphStyle: "#setStyle"
        }),
        q = D.extend({
          _class: "PointText",
          initialize: function initialize() {
            D.apply(this, arguments);
          },
          getPoint: function getPoint() {
            var t = this._matrix.getTranslation();
            return new g(t.x, t.y, this, "setPoint");
          },
          setPoint: function setPoint() {
            var t = _.read(arguments);
            this.translate(t.subtract(this._matrix.getTranslation()));
          },
          _draw: function _draw(t, e, n) {
            if (this._content) {
              this._setStyles(t, e, n);
              var i = this._lines,
                r = this._style,
                s = r.hasFill(),
                a = r.hasStroke(),
                o = r.getLeading(),
                h = t.shadowColor;
              t.font = r.getFontStyle(), t.textAlign = r.getJustification();
              for (var u = 0, l = i.length; u < l; u++) {
                t.shadowColor = h;
                var c = i[u];
                s && (t.fillText(c, 0, 0), t.shadowColor = "rgba(0,0,0,0)"), a && t.strokeText(c, 0, 0), t.translate(0, o);
              }
            }
          },
          _getBounds: function _getBounds(t, e) {
            var n = this._style,
              i = this._lines,
              r = i.length,
              s = n.getJustification(),
              a = n.getLeading(),
              o = this.getView().getTextWidth(n.getFontStyle(), i),
              h = 0;
            "left" !== s && (h -= o / ("center" === s ? 2 : 1));
            var u = new m(h, r ? -.75 * a : 0, o, r * a);
            return t ? t._transformBounds(u, u) : u;
          }
        }),
        V = a.extend(new function () {
          var t,
            e = {
              gray: ["gray"],
              rgb: ["red", "green", "blue"],
              hsb: ["hue", "saturation", "brightness"],
              hsl: ["hue", "saturation", "lightness"],
              gradient: ["gradient", "origin", "destination", "highlight"]
            },
            n = {},
            s = {
              transparent: [0, 0, 0, 0]
            };
          var o = [[0, 3, 1], [2, 0, 1], [1, 0, 3], [1, 2, 0], [3, 1, 0], [0, 1, 2]],
            h = {
              "rgb-hsb": function rgbHsb(t, e, n) {
                var i = Math.max(t, e, n),
                  r = i - Math.min(t, e, n);
                return [0 === r ? 0 : 60 * (i == t ? (e - n) / r + (e < n ? 6 : 0) : i == e ? (n - t) / r + 2 : (t - e) / r + 4), 0 === i ? 0 : r / i, i];
              },
              "hsb-rgb": function hsbRgb(t, e, n) {
                var i,
                  r = (t = (t / 60 % 6 + 6) % 6) - (i = Math.floor(t)),
                  s = [n, n * (1 - e), n * (1 - e * r), n * (1 - e * (1 - r))];
                return [s[(i = o[i])[0]], s[i[1]], s[i[2]]];
              },
              "rgb-hsl": function rgbHsl(t, e, n) {
                var i = Math.max(t, e, n),
                  r = Math.min(t, e, n),
                  s = i - r,
                  a = 0 === s,
                  o = (i + r) / 2;
                return [a ? 0 : 60 * (i == t ? (e - n) / s + (e < n ? 6 : 0) : i == e ? (n - t) / s + 2 : (t - e) / s + 4), a ? 0 : o < .5 ? s / (i + r) : s / (2 - i - r), o];
              },
              "hsl-rgb": function hslRgb(t, e, n) {
                if (0 === e) return [n, n, n];
                for (var i = [(t = (t / 360 % 1 + 1) % 1) + 1 / 3, t, t - 1 / 3], r = n < .5 ? n * (1 + e) : n + e - n * e, s = 2 * n - r, a = [], o = 0; o < 3; o++) {
                  var h = i[o];
                  h < 0 && (h += 1), h > 1 && (h -= 1), a[o] = 6 * h < 1 ? s + 6 * (r - s) * h : 2 * h < 1 ? r : 3 * h < 2 ? s + (r - s) * (2 / 3 - h) * 6 : s;
                }
                return a;
              },
              "rgb-gray": function rgbGray(t, e, n) {
                return [.2989 * t + .587 * e + .114 * n];
              },
              "gray-rgb": function grayRgb(t) {
                return [t, t, t];
              },
              "gray-hsb": function grayHsb(t) {
                return [0, 0, t];
              },
              "gray-hsl": function grayHsl(t) {
                return [0, 0, t];
              },
              "gradient-rgb": function gradientRgb() {
                return [];
              },
              "rgb-gradient": function rgbGradient() {
                return [];
              }
            };
          return a.each(e, function (t, i) {
            n[i] = [], a.each(t, function (t, r) {
              var s = a.capitalize(t),
                o = /^(hue|saturation)$/.test(t),
                h = n[i][r] = "gradient" === i ? "gradient" === t ? function (t) {
                  var e = this._components[0];
                  return e !== (t = U.read(Array.isArray(t) ? t : arguments, 0, {
                    readNull: !0
                  })) && (e && e._removeOwner(this), t && t._addOwner(this)), t;
                } : function () {
                  return _.read(arguments, 0, {
                    readNull: "highlight" === t,
                    clone: !0
                  });
                } : function (t) {
                  return null == t || isNaN(t) ? 0 : +t;
                };
              this["get" + s] = function () {
                return this._type === i || o && /^hs[bl]$/.test(this._type) ? this._components[r] : this._convert(i)[r];
              }, this["set" + s] = function (t) {
                this._type === i || o && /^hs[bl]$/.test(this._type) || (this._components = this._convert(i), this._properties = e[i], this._type = i), this._components[r] = h.call(this, t), this._changed();
              };
            }, this);
          }, {
            _class: "Color",
            _readIndex: !0,
            initialize: function o(h) {
              var u,
                l,
                c,
                f,
                d = arguments,
                _ = this.__read,
                g = 0;
              Array.isArray(h) && (h = (d = h)[0]);
              var v = null != h && i(h);
              if ("string" === v && h in e && (u = h, h = d[1], Array.isArray(h) ? (l = h, c = d[2]) : (_ && (g = 1), d = a.slice(d, 1), v = i(h))), !l) {
                if (f = "number" === v ? d : "object" === v && null != h.length ? h : null) {
                  u || (u = f.length >= 3 ? "rgb" : "gray");
                  var p = e[u].length;
                  c = f[p], _ && (g += f === arguments ? p + (null != c ? 1 : 0) : 1), f.length > p && (f = a.slice(f, 0, p));
                } else if ("string" === v) {
                  var m = function (e) {
                    var n,
                      i = e.match(/^#([\da-f]{2})([\da-f]{2})([\da-f]{2})([\da-f]{2})?$/i) || e.match(/^#([\da-f])([\da-f])([\da-f])([\da-f])?$/i),
                      a = "rgb";
                    if (i) {
                      var o = i[4] ? 4 : 3;
                      n = new Array(o);
                      for (var h = 0; h < o; h++) {
                        var u = i[h + 1];
                        n[h] = parseInt(1 == u.length ? u + u : u, 16) / 255;
                      }
                    } else if (i = e.match(/^(rgb|hsl)a?\((.*)\)$/)) {
                      a = i[1], n = i[2].trim().split(/[,\s]+/g);
                      for (var l = "hsl" === a, c = (h = 0, Math.min(n.length, 4)); h < c; h++) {
                        var f = n[h];
                        if (u = parseFloat(f), l) {
                          if (0 === h) {
                            var d = f.match(/([a-z]*)$/)[1];
                            u *= {
                              turn: 360,
                              rad: 180 / Math.PI,
                              grad: .9
                            }[d] || 1;
                          } else h < 3 && (u /= 100);
                        } else h < 3 && (u /= /%$/.test(f) ? 100 : 255);
                        n[h] = u;
                      }
                    } else {
                      var _ = s[e];
                      if (!_) if (r) {
                        t || ((t = rt.getContext(1, 1)).globalCompositeOperation = "copy"), t.fillStyle = "rgba(0,0,0,0)", t.fillStyle = e, t.fillRect(0, 0, 1, 1);
                        var g = t.getImageData(0, 0, 1, 1).data;
                        _ = s[e] = [g[0] / 255, g[1] / 255, g[2] / 255];
                      } else _ = [0, 0, 0];
                      n = _.slice();
                    }
                    return [a, n];
                  }(h);
                  u = m[0], 4 === (l = m[1]).length && (c = l[3], l.length--);
                } else if ("object" === v) if (h.constructor === o) {
                  if (u = h._type, l = h._components.slice(), c = h._alpha, "gradient" === u) for (var y = 1, w = l.length; y < w; y++) {
                    var x = l[y];
                    x && (l[y] = x.clone());
                  }
                } else if (h.constructor === U) u = "gradient", f = d;else {
                  var b = e[u = "hue" in h ? "lightness" in h ? "hsl" : "hsb" : "gradient" in h || "stops" in h || "radial" in h ? "gradient" : "gray" in h ? "gray" : "rgb"],
                    C = n[u];
                  this._components = l = [];
                  for (y = 0, w = b.length; y < w; y++) {
                    null == (S = h[b[y]]) && !y && "gradient" === u && "stops" in h && (S = {
                      stops: h.stops,
                      radial: h.radial
                    }), null != (S = C[y].call(this, S)) && (l[y] = S);
                  }
                  c = h.alpha;
                }
                _ && u && (g = 1);
              }
              if (this._type = u || "rgb", !l) {
                this._components = l = [];
                for (y = 0, w = (C = n[this._type]).length; y < w; y++) {
                  var S;
                  null != (S = C[y].call(this, f && f[y])) && (l[y] = S);
                }
              }
              return this._components = l, this._properties = e[this._type], this._alpha = c, _ && (this.__read = g), this;
            },
            set: "#initialize",
            _serialize: function _serialize(t, e) {
              var n = this.getComponents();
              return a.serialize(/^(gray|rgb)$/.test(this._type) ? n : [this._type].concat(n), t, !0, e);
            },
            _changed: function _changed() {
              this._canvasStyle = null, this._owner && (this._setter ? this._owner[this._setter](this) : this._owner._changed(129));
            },
            _convert: function _convert(t) {
              var e;
              return this._type === t ? this._components.slice() : (e = h[this._type + "-" + t]) ? e.apply(this, this._components) : h["rgb-" + t].apply(this, h[this._type + "-rgb"].apply(this, this._components));
            },
            convert: function convert(t) {
              return new V(t, this._convert(t), this._alpha);
            },
            getType: function getType() {
              return this._type;
            },
            setType: function setType(t) {
              this._components = this._convert(t), this._properties = e[t], this._type = t;
            },
            getComponents: function getComponents() {
              var t = this._components.slice();
              return null != this._alpha && t.push(this._alpha), t;
            },
            getAlpha: function getAlpha() {
              return null != this._alpha ? this._alpha : 1;
            },
            setAlpha: function setAlpha(t) {
              this._alpha = null == t ? null : Math.min(Math.max(t, 0), 1), this._changed();
            },
            hasAlpha: function hasAlpha() {
              return null != this._alpha;
            },
            equals: function equals(t) {
              var e = a.isPlainValue(t, !0) ? V.read(arguments) : t;
              return e === this || e && this._class === e._class && this._type === e._type && this.getAlpha() === e.getAlpha() && a.equals(this._components, e._components) || !1;
            },
            toString: function toString() {
              for (var t = this._properties, e = [], n = "gradient" === this._type, i = c.instance, r = 0, s = t.length; r < s; r++) {
                var a = this._components[r];
                null != a && e.push(t[r] + ": " + (n ? a : i.number(a)));
              }
              return null != this._alpha && e.push("alpha: " + i.number(this._alpha)), "{ " + e.join(", ") + " }";
            },
            toCSS: function toCSS(t) {
              var e = this._convert("rgb"),
                n = t || null == this._alpha ? 1 : this._alpha;
              function i(t) {
                return Math.round(255 * (t < 0 ? 0 : t > 1 ? 1 : t));
              }
              return e = [i(e[0]), i(e[1]), i(e[2])], n < 1 && e.push(n < 0 ? 0 : n), t ? "#" + ((1 << 24) + (e[0] << 16) + (e[1] << 8) + e[2]).toString(16).slice(1) : (4 == e.length ? "rgba(" : "rgb(") + e.join(",") + ")";
            },
            toCanvasStyle: function toCanvasStyle(t, e) {
              if (this._canvasStyle) return this._canvasStyle;
              if ("gradient" !== this._type) return this._canvasStyle = this.toCSS();
              var n,
                i = this._components,
                r = i[0],
                s = r._stops,
                a = i[1],
                o = i[2],
                h = i[3],
                u = e && e.inverted();
              if (u && (a = u._transformPoint(a), o = u._transformPoint(o), h && (h = u._transformPoint(h))), r._radial) {
                var l = o.getDistance(a);
                if (h) {
                  var c = h.subtract(a);
                  c.getLength() > l && (h = a.add(c.normalize(l - .1)));
                }
                var f = h || a;
                n = t.createRadialGradient(f.x, f.y, 0, a.x, a.y, l);
              } else n = t.createLinearGradient(a.x, a.y, o.x, o.y);
              for (var d = 0, _ = s.length; d < _; d++) {
                var g = s[d],
                  v = g._offset;
                n.addColorStop(null == v ? d / (_ - 1) : v, g._color.toCanvasStyle());
              }
              return this._canvasStyle = n;
            },
            transform: function transform(t) {
              if ("gradient" === this._type) {
                for (var e = this._components, n = 1, i = e.length; n < i; n++) {
                  var r = e[n];
                  t._transformPoint(r, r, !0);
                }
                this._changed();
              }
            },
            statics: {
              _types: e,
              random: function random() {
                var t = Math.random;
                return new V(t(), t(), t());
              },
              _setOwner: function _setOwner(t, e, n) {
                return t && (t._owner && e && t._owner !== e && (t = t.clone()), !t._owner ^ !e && (t._owner = e || null, t._setter = n || null)), t;
              }
            }
          });
        }(), new function () {
          return a.each({
            add: function add(t, e) {
              return t + e;
            },
            subtract: function subtract(t, e) {
              return t - e;
            },
            multiply: function multiply(t, e) {
              return t * e;
            },
            divide: function divide(t, e) {
              return t / e;
            }
          }, function (t, e) {
            this[e] = function (e) {
              e = V.read(arguments);
              for (var n = this._type, i = this._components, r = e._convert(n), s = 0, a = i.length; s < a; s++) r[s] = t(i[s], r[s]);
              return new V(n, r, null != this._alpha ? t(this._alpha, e.getAlpha()) : null);
            };
          }, {});
        }()),
        U = a.extend({
          _class: "Gradient",
          initialize: function initialize(t, e) {
            this._id = d.get(), t && a.isPlainObject(t) && (this.set(t), t = e = null), null == this._stops && this.setStops(t || ["white", "black"]), null == this._radial && this.setRadial("string" == typeof e && "radial" === e || e || !1);
          },
          _serialize: function _serialize(t, e) {
            return e.add(this, function () {
              return a.serialize([this._stops, this._radial], t, !0, e);
            });
          },
          _changed: function _changed() {
            for (var t = 0, e = this._owners && this._owners.length; t < e; t++) this._owners[t]._changed();
          },
          _addOwner: function _addOwner(t) {
            this._owners || (this._owners = []), this._owners.push(t);
          },
          _removeOwner: function _removeOwner(t) {
            var e = this._owners ? this._owners.indexOf(t) : -1;
            -1 != e && (this._owners.splice(e, 1), this._owners.length || (this._owners = n));
          },
          clone: function clone() {
            for (var t = [], e = 0, n = this._stops.length; e < n; e++) t[e] = this._stops[e].clone();
            return new U(t, this._radial);
          },
          getStops: function getStops() {
            return this._stops;
          },
          setStops: function setStops(t) {
            if (t.length < 2) throw new Error("Gradient stop list needs to contain at least two stops.");
            var e = this._stops;
            if (e) for (var i = 0, r = e.length; i < r; i++) e[i]._owner = n;
            for (i = 0, r = (e = this._stops = H.readList(t, 0, {
              clone: !0
            })).length; i < r; i++) e[i]._owner = this;
            this._changed();
          },
          getRadial: function getRadial() {
            return this._radial;
          },
          setRadial: function setRadial(t) {
            this._radial = t, this._changed();
          },
          equals: function equals(t) {
            if (t === this) return !0;
            if (t && this._class === t._class) {
              var e = this._stops,
                n = t._stops,
                i = e.length;
              if (i === n.length) {
                for (var r = 0; r < i; r++) if (!e[r].equals(n[r])) return !1;
                return !0;
              }
            }
            return !1;
          }
        }),
        H = a.extend({
          _class: "GradientStop",
          initialize: function initialize(t, e) {
            var r = t,
              s = e;
            "object" === i(t) && e === n && (Array.isArray(t) && "number" != typeof t[0] ? (r = t[0], s = t[1]) : ("color" in t || "offset" in t || "rampPoint" in t) && (r = t.color, s = t.offset || t.rampPoint || 0)), this.setColor(r), this.setOffset(s);
          },
          clone: function clone() {
            return new H(this._color.clone(), this._offset);
          },
          _serialize: function _serialize(t, e) {
            var n = this._color,
              i = this._offset;
            return a.serialize(null == i ? [n] : [n, i], t, !0, e);
          },
          _changed: function _changed() {
            this._owner && this._owner._changed(129);
          },
          getOffset: function getOffset() {
            return this._offset;
          },
          setOffset: function setOffset(t) {
            this._offset = t, this._changed();
          },
          getRampPoint: "#getOffset",
          setRampPoint: "#setOffset",
          getColor: function getColor() {
            return this._color;
          },
          setColor: function setColor() {
            V._setOwner(this._color, null), this._color = V._setOwner(V.read(arguments, 0), this, "setColor"), this._changed();
          },
          equals: function equals(t) {
            return t === this || t && this._class === t._class && this._color.equals(t._color) && this._offset == t._offset || !1;
          }
        }),
        Z = a.extend(new function () {
          var t = {
              fillColor: null,
              fillRule: "nonzero",
              strokeColor: null,
              strokeWidth: 1,
              strokeCap: "butt",
              strokeJoin: "miter",
              strokeScaling: !0,
              miterLimit: 10,
              dashOffset: 0,
              dashArray: [],
              shadowColor: null,
              shadowBlur: 0,
              shadowOffset: new _(),
              selectedColor: null
            },
            e = a.set({}, t, {
              fontFamily: "sans-serif",
              fontWeight: "normal",
              fontSize: 12,
              leading: null,
              justification: "left"
            }),
            i = a.set({}, e, {
              fillColor: new V()
            }),
            r = {
              strokeWidth: 193,
              strokeCap: 193,
              strokeJoin: 193,
              strokeScaling: 201,
              miterLimit: 193,
              fontFamily: 9,
              fontWeight: 9,
              fontSize: 9,
              font: 9,
              leading: 9,
              justification: 9
            },
            s = {
              beans: !0
            },
            o = {
              _class: "Style",
              beans: !0,
              initialize: function initialize(n, r, s) {
                this._values = {}, this._owner = r, this._project = r && r._project || s || ht.project, this._defaults = !r || r instanceof S ? e : r instanceof D ? i : t, n && this.set(n);
              }
            };
          return a.each(e, function (t, e) {
            var i = /Color$/.test(e),
              h = "shadowOffset" === e,
              u = a.capitalize(e),
              l = r[e],
              c = "set" + u,
              f = "get" + u;
            o[c] = function (t) {
              var n = this._owner,
                r = n && n._children,
                s = r && r.length > 0 && !(n instanceof F);
              if (s) for (var a = 0, o = r.length; a < o; a++) r[a]._style[c](t);
              if (("selectedColor" === e || !s) && e in this._defaults) {
                var h = this._values[e];
                h !== t && (i && (h && (V._setOwner(h, null), h._canvasStyle = null), t && t.constructor === V && (t = V._setOwner(t, n, s && c))), this._values[e] = t, n && n._changed(l || 129));
              }
            }, o[f] = function (t) {
              var r = this._owner,
                s = r && r._children,
                o = s && s.length > 0 && !(r instanceof F);
              if (o && !t) for (var u = 0, l = s.length; u < l; u++) {
                var d = s[u]._style[f]();
                if (u) {
                  if (!a.equals(g, d)) return n;
                } else g = d;
              } else if (e in this._defaults) {
                var g;
                if ((g = this._values[e]) === n) (g = this._defaults[e]) && g.clone && (g = g.clone());else {
                  var v = i ? V : h ? _ : null;
                  !v || g && g.constructor === v || (this._values[e] = g = v.read([g], 0, {
                    readNull: !0,
                    clone: !0
                  }));
                }
              }
              return g && i && (g = V._setOwner(g, r, o && c)), g;
            }, s[f] = function (t) {
              return this._style[f](t);
            }, s[c] = function (t) {
              this._style[c](t);
            };
          }), a.each({
            Font: "FontFamily",
            WindingRule: "FillRule"
          }, function (t, e) {
            var n = "get" + e,
              i = "set" + e;
            o[n] = s[n] = "#get" + t, o[i] = s[i] = "#set" + t;
          }), C.inject(s), o;
        }(), {
          set: function set(t) {
            var e = t instanceof Z,
              n = e ? t._values : t;
            if (n) for (var i in n) if (i in this._defaults) {
              var r = n[i];
              this[i] = r && e && r.clone ? r.clone() : r;
            }
          },
          equals: function equals(t) {
            function e(t, e, i) {
              var r = t._values,
                s = e._values,
                o = e._defaults;
              for (var h in r) {
                var u = r[h],
                  l = s[h];
                if (!(i && h in s || a.equals(u, l === n ? o[h] : l))) return !1;
              }
              return !0;
            }
            return t === this || t && this._class === t._class && e(this, t) && e(t, this, !0) || !1;
          },
          _dispose: function _dispose() {
            var t;
            (t = this.getFillColor()) && (t._canvasStyle = null), (t = this.getStrokeColor()) && (t._canvasStyle = null), (t = this.getShadowColor()) && (t._canvasStyle = null);
          },
          hasFill: function hasFill() {
            var t = this.getFillColor();
            return !!t && t.alpha > 0;
          },
          hasStroke: function hasStroke() {
            var t = this.getStrokeColor();
            return !!t && t.alpha > 0 && this.getStrokeWidth() > 0;
          },
          hasShadow: function hasShadow() {
            var t = this.getShadowColor();
            return !!t && t.alpha > 0 && (this.getShadowBlur() > 0 || !this.getShadowOffset().isZero());
          },
          getView: function getView() {
            return this._project._view;
          },
          getFontStyle: function getFontStyle() {
            var t = this.getFontSize();
            return this.getFontWeight() + " " + t + (/[a-z]/i.test(t + "") ? " " : "px ") + this.getFontFamily();
          },
          getFont: "#getFontFamily",
          setFont: "#setFontFamily",
          getLeading: function t() {
            var e = t.base.call(this),
              n = this.getFontSize();
            return /pt|em|%|px/.test(n) && (n = this.getView().getPixelSize(n)), null != e ? e : 1.2 * n;
          }
        }),
        W = new function () {
          function t(t, e, n, i) {
            for (var r = ["", "webkit", "moz", "Moz", "ms", "o"], s = e[0].toUpperCase() + e.substring(1), a = 0; a < 6; a++) {
              var o = r[a],
                h = o ? o + s : e;
              if (h in t) {
                if (!n) return t[h];
                t[h] = i;
                break;
              }
            }
          }
          return {
            getStyles: function getStyles(t) {
              var e = t && 9 !== t.nodeType ? t.ownerDocument : t,
                n = e && e.defaultView;
              return n && n.getComputedStyle(t, "");
            },
            getBounds: function getBounds(t, e) {
              var n,
                i = t.ownerDocument,
                r = i.body,
                s = i.documentElement;
              try {
                n = t.getBoundingClientRect();
              } catch (u) {
                n = {
                  left: 0,
                  top: 0,
                  width: 0,
                  height: 0
                };
              }
              var a = n.left - (s.clientLeft || r.clientLeft || 0),
                o = n.top - (s.clientTop || r.clientTop || 0);
              if (!e) {
                var h = i.defaultView;
                a += h.pageXOffset || s.scrollLeft || r.scrollLeft, o += h.pageYOffset || s.scrollTop || r.scrollTop;
              }
              return new m(a, o, n.width, n.height);
            },
            getViewportBounds: function getViewportBounds(t) {
              var e = t.ownerDocument,
                n = e.defaultView,
                i = e.documentElement;
              return new m(0, 0, n.innerWidth || i.clientWidth, n.innerHeight || i.clientHeight);
            },
            getOffset: function getOffset(t, e) {
              return W.getBounds(t, e).getPoint();
            },
            getSize: function getSize(t) {
              return W.getBounds(t, !0).getSize();
            },
            isInvisible: function isInvisible(t) {
              return W.getSize(t).equals(new v(0, 0));
            },
            isInView: function isInView(t) {
              return !W.isInvisible(t) && W.getViewportBounds(t).intersects(W.getBounds(t, !0));
            },
            isInserted: function isInserted(t) {
              return s.body.contains(t);
            },
            getPrefixed: function getPrefixed(e, n) {
              return e && t(e, n);
            },
            setPrefixed: function setPrefixed(e, n, r) {
              if ("object" === i(n)) for (var s in n) t(e, s, !0, n[s]);else t(e, n, !0, r);
            }
          };
        }(),
        $ = {
          add: function add(t, e) {
            if (t) for (var n in e) for (var i = e[n], r = n.split(/[\s,]+/g), a = 0, o = r.length; a < o; a++) {
              var h = r[a],
                u = t === s && ("touchstart" === h || "touchmove" === h) && {
                  passive: !1
                };
              t.addEventListener(h, i, u);
            }
          },
          remove: function remove(t, e) {
            if (t) for (var n in e) for (var i = e[n], r = n.split(/[\s,]+/g), s = 0, a = r.length; s < a; s++) t.removeEventListener(r[s], i, !1);
          },
          getPoint: function getPoint(t) {
            var e = t.targetTouches ? t.targetTouches.length ? t.targetTouches[0] : t.changedTouches[0] : t;
            return new _(e.pageX || e.clientX + s.documentElement.scrollLeft, e.pageY || e.clientY + s.documentElement.scrollTop);
          },
          getTarget: function getTarget(t) {
            return t.target || t.srcElement;
          },
          getRelatedTarget: function getRelatedTarget(t) {
            return t.relatedTarget || t.toElement;
          },
          getOffset: function getOffset(t, e) {
            return $.getPoint(t).subtract(W.getOffset(e || $.getTarget(t)));
          }
        };
      $.requestAnimationFrame = new function () {
        var t,
          e = W.getPrefixed(r, "requestAnimationFrame"),
          n = !1,
          i = [];
        function s() {
          var t = i;
          i = [];
          for (var r = 0, a = t.length; r < a; r++) t[r]();
          (n = e && i.length) && e(s);
        }
        return function (r) {
          i.push(r), e ? n || (e(s), n = !0) : t || (t = setInterval(s, 1e3 / 60));
        };
      }();
      var G = a.extend(o, {
          _class: "View",
          initialize: function t(e, n) {
            function i(t) {
              return n[t] || parseInt(n.getAttribute(t), 10);
            }
            function a() {
              var t = W.getSize(n);
              return t.isNaN() || t.isZero() ? new v(i("width"), i("height")) : t;
            }
            var o;
            if (r && n) {
              this._id = n.getAttribute("id"), null == this._id && n.setAttribute("id", this._id = "paper-view-" + t._id++), $.add(n, this._viewEvents);
              if (W.setPrefixed(n.style, {
                userDrag: "none",
                userSelect: "none",
                touchCallout: "none",
                contentZooming: "none",
                tapHighlightColor: "rgba(0,0,0,0)"
              }), h.hasAttribute(n, "resize")) {
                var u = this;
                $.add(r, this._windowEvents = {
                  resize: function resize() {
                    u.setViewSize(a());
                  }
                });
              }
              if (o = a(), h.hasAttribute(n, "stats") && "undefined" != typeof Stats) {
                this._stats = new Stats();
                var l = this._stats.domElement,
                  c = l.style,
                  f = W.getOffset(n);
                c.position = "absolute", c.left = f.x + "px", c.top = f.y + "px", s.body.appendChild(l);
              }
            } else o = new v(n), n = null;
            this._project = e, this._scope = e._scope, this._element = n, this._pixelRatio || (this._pixelRatio = r && r.devicePixelRatio || 1), this._setElementSize(o.width, o.height), this._viewSize = o, t._views.push(this), t._viewsById[this._id] = this, (this._matrix = new w())._owner = this, t._focused || (t._focused = this), this._frameItems = {}, this._frameItemCount = 0, this._itemEvents = {
              native: {},
              virtual: {}
            }, this._autoUpdate = !ht.agent.node, this._needsUpdate = !1;
          },
          remove: function remove() {
            if (!this._project) return !1;
            G._focused === this && (G._focused = null), G._views.splice(G._views.indexOf(this), 1), delete G._viewsById[this._id];
            var t = this._project;
            return t._view === this && (t._view = null), $.remove(this._element, this._viewEvents), $.remove(r, this._windowEvents), this._element = this._project = null, this.off("frame"), this._animate = !1, this._frameItems = {}, !0;
          },
          _events: a.each(C._itemHandlers.concat(["onResize", "onKeyDown", "onKeyUp"]), function (t) {
            this[t] = {};
          }, {
            onFrame: {
              install: function install() {
                this.play();
              },
              uninstall: function uninstall() {
                this.pause();
              }
            }
          }),
          _animate: !1,
          _time: 0,
          _count: 0,
          getAutoUpdate: function getAutoUpdate() {
            return this._autoUpdate;
          },
          setAutoUpdate: function setAutoUpdate(t) {
            this._autoUpdate = t, t && this.requestUpdate();
          },
          update: function update() {},
          draw: function draw() {
            this.update();
          },
          requestUpdate: function requestUpdate() {
            if (!this._requested) {
              var t = this;
              $.requestAnimationFrame(function () {
                if (t._requested = !1, t._animate) {
                  t.requestUpdate();
                  var e = t._element;
                  W.getPrefixed(s, "hidden") && "true" !== h.getAttribute(e, "keepalive") || !W.isInView(e) || t._handleFrame();
                }
                t._autoUpdate && t.update();
              }), this._requested = !0;
            }
          },
          play: function play() {
            this._animate = !0, this.requestUpdate();
          },
          pause: function pause() {
            this._animate = !1;
          },
          _handleFrame: function _handleFrame() {
            ht = this._scope;
            var t = Date.now() / 1e3,
              e = this._last ? t - this._last : 0;
            this._last = t, this.emit("frame", new a({
              delta: e,
              time: this._time += e,
              count: this._count++
            })), this._stats && this._stats.update();
          },
          _animateItem: function _animateItem(t, e) {
            var n = this._frameItems;
            e ? (n[t._id] = {
              item: t,
              time: 0,
              count: 0
            }, 1 == ++this._frameItemCount && this.on("frame", this._handleFrameItems)) : (delete n[t._id], 0 == --this._frameItemCount && this.off("frame", this._handleFrameItems));
          },
          _handleFrameItems: function _handleFrameItems(t) {
            for (var e in this._frameItems) {
              var n = this._frameItems[e];
              n.item.emit("frame", new a(t, {
                time: n.time += t.delta,
                count: n.count++
              }));
            }
          },
          _changed: function _changed() {
            this._project._changed(4097), this._bounds = this._decomposed = n;
          },
          getElement: function getElement() {
            return this._element;
          },
          getPixelRatio: function getPixelRatio() {
            return this._pixelRatio;
          },
          getResolution: function getResolution() {
            return 72 * this._pixelRatio;
          },
          getViewSize: function getViewSize() {
            var t = this._viewSize;
            return new p(t.width, t.height, this, "setViewSize");
          },
          setViewSize: function setViewSize() {
            var t = v.read(arguments),
              e = t.subtract(this._viewSize);
            e.isZero() || (this._setElementSize(t.width, t.height), this._viewSize.set(t), this._changed(), this.emit("resize", {
              size: t,
              delta: e
            }), this._autoUpdate && this.update());
          },
          _setElementSize: function _setElementSize(t, e) {
            var n = this._element;
            n && (n.width !== t && (n.width = t), n.height !== e && (n.height = e));
          },
          getBounds: function getBounds() {
            return this._bounds || (this._bounds = this._matrix.inverted()._transformBounds(new m(new _(), this._viewSize))), this._bounds;
          },
          getSize: function getSize() {
            return this.getBounds().getSize();
          },
          isVisible: function isVisible() {
            return W.isInView(this._element);
          },
          isInserted: function isInserted() {
            return W.isInserted(this._element);
          },
          getPixelSize: function getPixelSize(t) {
            var e,
              n = this._element;
            if (n) {
              var i = n.parentNode,
                r = s.createElement("div");
              r.style.fontSize = t, i.appendChild(r), e = parseFloat(W.getStyles(r).fontSize), i.removeChild(r);
            } else e = parseFloat(e);
            return e;
          },
          getTextWidth: function getTextWidth(t, e) {
            return 0;
          }
        }, a.each(["rotate", "scale", "shear", "skew"], function (t) {
          var e = "rotate" === t;
          this[t] = function () {
            var n = arguments,
              i = (e ? a : _).read(n),
              r = _.read(n, 0, {
                readNull: !0
              });
            return this.transform(new w()[t](i, r || this.getCenter(!0)));
          };
        }, {
          _decompose: function _decompose() {
            return this._decomposed || (this._decomposed = this._matrix.decompose());
          },
          translate: function translate() {
            var t = new w();
            return this.transform(t.translate.apply(t, arguments));
          },
          getCenter: function getCenter() {
            return this.getBounds().getCenter();
          },
          setCenter: function setCenter() {
            var t = _.read(arguments);
            this.translate(this.getCenter().subtract(t));
          },
          getZoom: function getZoom() {
            var t = this._decompose().scaling;
            return (t.x + t.y) / 2;
          },
          setZoom: function setZoom(t) {
            this.transform(new w().scale(t / this.getZoom(), this.getCenter()));
          },
          getRotation: function getRotation() {
            return this._decompose().rotation;
          },
          setRotation: function setRotation(t) {
            var e = this.getRotation();
            null != e && null != t && this.rotate(t - e);
          },
          getScaling: function getScaling() {
            var t = this._decompose().scaling;
            return new g(t.x, t.y, this, "setScaling");
          },
          setScaling: function setScaling() {
            var t = this.getScaling(),
              e = _.read(arguments, 0, {
                clone: !0,
                readNull: !0
              });
            t && e && this.scale(e.x / t.x, e.y / t.y);
          },
          getMatrix: function getMatrix() {
            return this._matrix;
          },
          setMatrix: function setMatrix() {
            var t = this._matrix;
            t.set.apply(t, arguments);
          },
          transform: function transform(t) {
            this._matrix.append(t);
          },
          scrollBy: function scrollBy() {
            this.translate(_.read(arguments).negate());
          }
        }), {
          projectToView: function projectToView() {
            return this._matrix._transformPoint(_.read(arguments));
          },
          viewToProject: function viewToProject() {
            return this._matrix._inverseTransform(_.read(arguments));
          },
          getEventPoint: function getEventPoint(t) {
            return this.viewToProject($.getOffset(t, this._element));
          }
        }, {
          statics: {
            _views: [],
            _viewsById: {},
            _id: 0,
            create: function create(t, e) {
              return s && "string" == typeof e && (e = s.getElementById(e)), new (r ? J : G)(t, e);
            }
          }
        }, new function () {
          if (r) {
            var t,
              e,
              n,
              i,
              a,
              o = !1,
              h = !1,
              u = r.navigator;
            u.pointerEnabled || u.msPointerEnabled ? (n = "pointerdown MSPointerDown", i = "pointermove MSPointerMove", a = "pointerup pointercancel MSPointerUp MSPointerCancel") : (n = "touchstart", i = "touchmove", a = "touchend touchcancel", "ontouchstart" in r && u.userAgent.match(/mobile|tablet|ip(ad|hone|od)|android|silk/i) || (n += " mousedown", i += " mousemove", a += " mouseup"));
            var l = {},
              c = {
                mouseout: function mouseout(t) {
                  var e = G._focused,
                    n = $.getRelatedTarget(t);
                  if (e && (!n || "HTML" === n.nodeName)) {
                    var i = $.getOffset(t, e._element),
                      r = i.x,
                      s = Math.abs,
                      a = s(r),
                      o = a - (1 << 25);
                    i.x = s(o) < a ? o * (r < 0 ? -1 : 1) : r, P(e, t, e.viewToProject(i));
                  }
                },
                scroll: I
              };
            l[n] = function (t) {
              var e = G._focused = k(t);
              o || (o = !0, e._handleMouseEvent("mousedown", t));
            }, c[i] = function (n) {
              var i = G._focused;
              if (!h) {
                var r = k(n);
                r ? i !== r && (i && P(i, n), t || (t = i), i = G._focused = e = r) : e && e === i && (t && !t.isInserted() && (t = null), i = G._focused = t, t = null, I());
              }
              i && P(i, n);
            }, c[n] = function () {
              h = !0;
            }, c[a] = function (t) {
              var e = G._focused;
              e && o && e._handleMouseEvent("mouseup", t), h = o = !1;
            }, $.add(s, c), $.add(r, {
              load: I
            });
            var f,
              d,
              _,
              g,
              v,
              p,
              m,
              y,
              w = !1,
              x = !1,
              b = {
                doubleclick: "click",
                mousedrag: "mousemove"
              },
              C = !1,
              S = {
                mousedown: {
                  mousedown: 1,
                  mousedrag: 1,
                  click: 1,
                  doubleclick: 1
                },
                mouseup: {
                  mouseup: 1,
                  mousedrag: 1,
                  click: 1,
                  doubleclick: 1
                },
                mousemove: {
                  mousedrag: 1,
                  mousemove: 1,
                  mouseenter: 1,
                  mouseleave: 1
                }
              };
            return {
              _viewEvents: l,
              _handleMouseEvent: function _handleMouseEvent(t, e, n) {
                var i = this._itemEvents,
                  r = i.native[t],
                  s = "mousemove" === t,
                  a = this._scope.tool,
                  h = this;
                function u(t) {
                  return i.virtual[t] || h.responds(t) || a && a.responds(t);
                }
                s && o && u("mousedrag") && (t = "mousedrag"), n || (n = this.getEventPoint(e));
                var l = this.getBounds().contains(n),
                  c = r && l && h._project.hitTest(n, {
                    tolerance: 0,
                    fill: !0,
                    stroke: !0
                  }),
                  b = c && c.item || null,
                  S = !1,
                  k = {};
                if (k[t.substr(5)] = !0, r && b !== g && (g && M(g, null, "mouseleave", e, n), b && M(b, null, "mouseenter", e, n), g = b), C ^ l && (M(this, null, l ? "mouseenter" : "mouseleave", e, n), l ? this : null, S = !0), !l && !k.drag || n.equals(d) || (A(this, b, s ? t : "mousemove", e, n, d), S = !0), C = l, k.down && l || k.up && f) {
                  if (A(this, b, t, e, n, f), k.down) {
                    if (y = b === p && Date.now() - m < 300, _ = p = b, !x && b) {
                      for (var I = b; I && !I.responds("mousedrag");) I = I._parent;
                      I && (v = b);
                    }
                    f = n;
                  } else k.up && (x || b !== _ || (m = Date.now(), A(this, b, y ? "doubleclick" : "click", e, n, f), y = !1), _ = v = null);
                  C = !1, S = !0;
                }
                d = n, S && a && (w = a._handleMouseEvent(t, e, n, k) || w), !1 !== e.cancelable && (w && !k.move || k.down && u("mouseup")) && e.preventDefault();
              },
              _handleKeyEvent: function _handleKeyEvent(t, e, n, i) {
                var r,
                  s = this._scope,
                  a = s.tool;
                function o(a) {
                  a.responds(t) && (ht = s, a.emit(t, r = r || new K(t, e, n, i)));
                }
                this.isVisible() && (o(this), a && a.responds(t) && o(a));
              },
              _countItemEvent: function _countItemEvent(t, e) {
                var n = this._itemEvents,
                  i = n.native,
                  r = n.virtual;
                for (var s in S) i[s] = (i[s] || 0) + (S[s][t] || 0) * e;
                r[t] = (r[t] || 0) + e;
              },
              statics: {
                updateFocus: I,
                _resetState: function _resetState() {
                  o = h = w = C = !1, t = e = f = d = _ = g = v = p = m = y = null;
                }
              }
            };
          }
          function k(t) {
            var e = $.getTarget(t);
            return e.getAttribute && G._viewsById[e.getAttribute("id")];
          }
          function I() {
            var t = G._focused;
            if (!t || !t.isVisible()) for (var n = 0, i = G._views.length; n < i; n++) if ((t = G._views[n]).isVisible()) {
              G._focused = e = t;
              break;
            }
          }
          function P(t, e, n) {
            t._handleMouseEvent("mousemove", e, n);
          }
          function M(t, e, n, i, r, s, a) {
            var o,
              h = !1;
            function u(t, n) {
              if (t.responds(n)) {
                if (o || (o = new Y(n, i, r, e || t, s ? r.subtract(s) : null)), t.emit(n, o) && (w = !0, o.prevented && (x = !0), o.stopped)) return h = !0;
              } else {
                var a = b[n];
                if (a) return u(t, a);
              }
            }
            for (; t && t !== a && !u(t, n);) t = t._parent;
            return h;
          }
          function A(t, e, n, i, r, s) {
            return t._project.removeOn(n), x = w = !1, v && M(v, null, n, i, r, s) || e && e !== v && !e.isDescendant(v) && M(e, null, "mousedrag" === n ? "mousemove" : n, i, r, s, v) || M(t, v || e || t, n, i, r, s);
          }
        }()),
        J = G.extend({
          _class: "CanvasView",
          initialize: function initialize(t, e) {
            if (!(e instanceof r.HTMLCanvasElement)) {
              var n = v.read(arguments, 1);
              if (n.isZero()) throw new Error("Cannot create CanvasView with the provided argument: " + a.slice(arguments, 1));
              e = rt.getCanvas(n);
            }
            var i = this._context = e.getContext("2d");
            if (i.save(), this._pixelRatio = 1, !/^off|false$/.test(h.getAttribute(e, "hidpi"))) {
              var s = r.devicePixelRatio || 1,
                o = W.getPrefixed(i, "backingStorePixelRatio") || 1;
              this._pixelRatio = s / o;
            }
            G.call(this, t, e), this._needsUpdate = !0;
          },
          remove: function t() {
            return this._context.restore(), t.base.call(this);
          },
          _setElementSize: function t(e, n) {
            var i = this._pixelRatio;
            if (t.base.call(this, e * i, n * i), 1 !== i) {
              var r = this._element,
                s = this._context;
              if (!h.hasAttribute(r, "resize")) {
                var a = r.style;
                a.width = e + "px", a.height = n + "px";
              }
              s.restore(), s.save(), s.scale(i, i);
            }
          },
          getContext: function getContext() {
            return this._context;
          },
          getPixelSize: function t(e) {
            var n,
              i = ht.agent;
            if (i && i.firefox) n = t.base.call(this, e);else {
              var r = this._context,
                s = r.font;
              r.font = e + " serif", n = parseFloat(r.font), r.font = s;
            }
            return n;
          },
          getTextWidth: function getTextWidth(t, e) {
            var n = this._context,
              i = n.font,
              r = 0;
            n.font = t;
            for (var s = 0, a = e.length; s < a; s++) r = Math.max(r, n.measureText(e[s]).width);
            return n.font = i, r;
          },
          update: function update() {
            if (!this._needsUpdate) return !1;
            var t = this._project,
              e = this._context,
              n = this._viewSize;
            return e.clearRect(0, 0, n.width + 1, n.height + 1), t && t.draw(e, this._matrix, this._pixelRatio), this._needsUpdate = !1, !0;
          }
        }),
        X = a.extend({
          _class: "Event",
          initialize: function initialize(t) {
            this.event = t, this.type = t && t.type;
          },
          prevented: !1,
          stopped: !1,
          preventDefault: function preventDefault() {
            this.prevented = !0, this.event.preventDefault();
          },
          stopPropagation: function stopPropagation() {
            this.stopped = !0, this.event.stopPropagation();
          },
          stop: function stop() {
            this.stopPropagation(), this.preventDefault();
          },
          getTimeStamp: function getTimeStamp() {
            return this.event.timeStamp;
          },
          getModifiers: function getModifiers() {
            return Q.modifiers;
          }
        }),
        K = X.extend({
          _class: "KeyEvent",
          initialize: function initialize(t, e, n, i) {
            this.type = t, this.event = e, this.key = n, this.character = i;
          },
          toString: function toString() {
            return "{ type: '" + this.type + "', key: '" + this.key + "', character: '" + this.character + "', modifiers: " + this.getModifiers() + " }";
          }
        }),
        Q = new function () {
          var t,
            e,
            i = {
              "\t": "tab",
              " ": "space",
              "\b": "backspace",
              "": "delete",
              Spacebar: "space",
              Del: "delete",
              Win: "meta",
              Esc: "escape"
            },
            o = {
              tab: "\t",
              space: " ",
              enter: "\r"
            },
            h = {},
            u = {},
            l = new a({
              shift: !1,
              control: !1,
              alt: !1,
              meta: !1,
              capsLock: !1,
              space: !1
            }).inject({
              option: {
                get: function get() {
                  return this.alt;
                }
              },
              command: {
                get: function get() {
                  var t = ht && ht.agent;
                  return t && t.mac ? this.meta : this.control;
                }
              }
            });
          function c(t) {
            var e = t.key || t.keyIdentifier;
            return e = /^U\+/.test(e) ? String.fromCharCode(parseInt(e.substr(2), 16)) : /^Arrow[A-Z]/.test(e) ? e.substr(5) : "Unidentified" === e || e === n ? String.fromCharCode(t.keyCode) : e, i[e] || (e.length > 1 ? a.hyphenate(e) : e.toLowerCase());
          }
          function f(e, n, i, r) {
            var s,
              o = G._focused;
            if (h[n] = e, e ? u[n] = i : delete u[n], n.length > 1 && (s = a.camelize(n)) in l) {
              l[s] = e;
              var c = ht && ht.agent;
              if ("meta" === s && c && c.mac) if (e) t = {};else {
                for (var d in t) d in u && f(!1, d, t[d], r);
                t = null;
              }
            } else e && t && (t[n] = i);
            o && o._handleKeyEvent(e ? "keydown" : "keyup", r, n, i);
          }
          return $.add(s, {
            keydown: function keydown(t) {
              var n = c(t),
                i = ht && ht.agent;
              n.length > 1 || i && i.chrome && (t.altKey || i.mac && t.metaKey || !i.mac && t.ctrlKey) ? f(!0, n, o[n] || (n.length > 1 ? "" : n), t) : e = n;
            },
            keypress: function keypress(t) {
              if (e) {
                var n = c(t),
                  i = t.charCode,
                  r = i >= 32 ? String.fromCharCode(i) : n.length > 1 ? "" : n;
                n !== e && (n = r.toLowerCase()), f(!0, n, r, t), e = null;
              }
            },
            keyup: function keyup(t) {
              var e = c(t);
              e in u && f(!1, e, u[e], t);
            }
          }), $.add(r, {
            blur: function blur(t) {
              for (var e in u) f(!1, e, u[e], t);
            }
          }), {
            modifiers: l,
            isDown: function isDown(t) {
              return !!h[t];
            }
          };
        }(),
        Y = X.extend({
          _class: "MouseEvent",
          initialize: function initialize(t, e, n, i, r) {
            this.type = t, this.event = e, this.point = n, this.target = i, this.delta = r;
          },
          toString: function toString() {
            return "{ type: '" + this.type + "', point: " + this.point + ", target: " + this.target + (this.delta ? ", delta: " + this.delta : "") + ", modifiers: " + this.getModifiers() + " }";
          }
        }),
        tt = X.extend({
          _class: "ToolEvent",
          _item: null,
          initialize: function initialize(t, e, n) {
            this.tool = t, this.type = e, this.event = n;
          },
          _choosePoint: function _choosePoint(t, e) {
            return t || (e ? e.clone() : null);
          },
          getPoint: function getPoint() {
            return this._choosePoint(this._point, this.tool._point);
          },
          setPoint: function setPoint(t) {
            this._point = t;
          },
          getLastPoint: function getLastPoint() {
            return this._choosePoint(this._lastPoint, this.tool._lastPoint);
          },
          setLastPoint: function setLastPoint(t) {
            this._lastPoint = t;
          },
          getDownPoint: function getDownPoint() {
            return this._choosePoint(this._downPoint, this.tool._downPoint);
          },
          setDownPoint: function setDownPoint(t) {
            this._downPoint = t;
          },
          getMiddlePoint: function getMiddlePoint() {
            return !this._middlePoint && this.tool._lastPoint ? this.tool._point.add(this.tool._lastPoint).divide(2) : this._middlePoint;
          },
          setMiddlePoint: function setMiddlePoint(t) {
            this._middlePoint = t;
          },
          getDelta: function getDelta() {
            return !this._delta && this.tool._lastPoint ? this.tool._point.subtract(this.tool._lastPoint) : this._delta;
          },
          setDelta: function setDelta(t) {
            this._delta = t;
          },
          getCount: function getCount() {
            return this.tool[/^mouse(down|up)$/.test(this.type) ? "_downCount" : "_moveCount"];
          },
          setCount: function setCount(t) {
            this.tool[/^mouse(down|up)$/.test(this.type) ? "downCount" : "count"] = t;
          },
          getItem: function getItem() {
            if (!this._item) {
              var t = this.tool._scope.project.hitTest(this.getPoint());
              if (t) {
                for (var e = t.item, n = e._parent; /^(Group|CompoundPath)$/.test(n._class);) e = n, n = n._parent;
                this._item = e;
              }
            }
            return this._item;
          },
          setItem: function setItem(t) {
            this._item = t;
          },
          toString: function toString() {
            return "{ type: " + this.type + ", point: " + this.getPoint() + ", count: " + this.getCount() + ", modifiers: " + this.getModifiers() + " }";
          }
        }),
        et = u.extend({
          _class: "Tool",
          _list: "tools",
          _reference: "tool",
          _events: ["onMouseDown", "onMouseUp", "onMouseDrag", "onMouseMove", "onActivate", "onDeactivate", "onEditOptions", "onKeyDown", "onKeyUp"],
          initialize: function initialize(t) {
            u.call(this), this._moveCount = -1, this._downCount = -1, this.set(t);
          },
          getMinDistance: function getMinDistance() {
            return this._minDistance;
          },
          setMinDistance: function setMinDistance(t) {
            this._minDistance = t, null != t && null != this._maxDistance && t > this._maxDistance && (this._maxDistance = t);
          },
          getMaxDistance: function getMaxDistance() {
            return this._maxDistance;
          },
          setMaxDistance: function setMaxDistance(t) {
            this._maxDistance = t, null != this._minDistance && null != t && t < this._minDistance && (this._minDistance = t);
          },
          getFixedDistance: function getFixedDistance() {
            return this._minDistance == this._maxDistance ? this._minDistance : null;
          },
          setFixedDistance: function setFixedDistance(t) {
            this._minDistance = this._maxDistance = t;
          },
          _handleMouseEvent: function _handleMouseEvent(t, e, n, i) {
            ht = this._scope, i.drag && !this.responds(t) && (t = "mousemove");
            var r = i.move || i.drag,
              s = this.responds(t),
              a = this.minDistance,
              o = this.maxDistance,
              h = !1,
              u = this;
            function l(t, e) {
              var s = n,
                a = r ? u._point : u._downPoint || s;
              if (r) {
                if (u._moveCount >= 0 && s.equals(a)) return !1;
                if (a && (null != t || null != e)) {
                  var o = s.subtract(a),
                    h = o.getLength();
                  if (h < (t || 0)) return !1;
                  e && (s = a.add(o.normalize(Math.min(h, e))));
                }
                u._moveCount++;
              }
              return u._point = s, u._lastPoint = a || s, i.down && (u._moveCount = -1, u._downPoint = s, u._downCount++), !0;
            }
            function c() {
              s && (h = u.emit(t, new tt(u, t, e)) || h);
            }
            if (i.down) l(), c();else if (i.up) l(null, o), c();else if (s) for (; l(a, o);) c();
            return h;
          }
        }),
        nt = a.extend(o, {
          _class: "Tween",
          statics: {
            easings: {
              linear: function linear(t) {
                return t;
              },
              easeInQuad: function easeInQuad(t) {
                return t * t;
              },
              easeOutQuad: function easeOutQuad(t) {
                return t * (2 - t);
              },
              easeInOutQuad: function easeInOutQuad(t) {
                return t < .5 ? 2 * t * t : 2 * (2 - t) * t - 1;
              },
              easeInCubic: function easeInCubic(t) {
                return t * t * t;
              },
              easeOutCubic: function easeOutCubic(t) {
                return --t * t * t + 1;
              },
              easeInOutCubic: function easeInOutCubic(t) {
                return t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;
              },
              easeInQuart: function easeInQuart(t) {
                return t * t * t * t;
              },
              easeOutQuart: function easeOutQuart(t) {
                return 1 - --t * t * t * t;
              },
              easeInOutQuart: function easeInOutQuart(t) {
                return t < .5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;
              },
              easeInQuint: function easeInQuint(t) {
                return t * t * t * t * t;
              },
              easeOutQuint: function easeOutQuint(t) {
                return 1 + --t * t * t * t * t;
              },
              easeInOutQuint: function easeInOutQuint(t) {
                return t < .5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;
              }
            }
          },
          initialize: function t(e, n, r, s, a, o) {
            this.object = e;
            var h = i(a),
              u = "function" === h;
            this.type = u ? h : "string" === h ? a : "linear", this.easing = u ? a : t.easings[this.type], this.duration = s, this.running = !1, this._then = null, this._startTime = null;
            var l = n || r;
            this._keys = l ? Object.keys(l) : [], this._parsedKeys = this._parseKeys(this._keys), this._from = l && this._getState(n), this._to = l && this._getState(r), !1 !== o && this.start();
          },
          then: function then(t) {
            return this._then = t, this;
          },
          start: function start() {
            return this._startTime = null, this.running = !0, this;
          },
          stop: function stop() {
            return this.running = !1, this;
          },
          update: function update(t) {
            if (this.running) {
              t >= 1 && (t = 1, this.running = !1);
              for (var e = this.easing(t), n = this._keys, i = function i(n) {
                  return "function" == typeof n ? n(e, t) : n;
                }, r = 0, s = n && n.length; r < s; r++) {
                var o = n[r],
                  h = i(this._from[o]),
                  u = i(this._to[o]),
                  l = h && u && h.__add && u.__add ? u.__subtract(h).__multiply(e).__add(h) : (u - h) * e + h;
                this._setProperty(this._parsedKeys[o], l);
              }
              this.responds("update") && this.emit("update", new a({
                progress: t,
                factor: e
              })), !this.running && this._then && this._then(this.object);
            }
            return this;
          },
          _events: {
            onUpdate: {}
          },
          _handleFrame: function _handleFrame(t) {
            var e = this._startTime,
              n = e ? (t - e) / this.duration : 0;
            e || (this._startTime = t), this.update(n);
          },
          _getState: function _getState(t) {
            for (var e = this._keys, n = {}, i = 0, r = e.length; i < r; i++) {
              var s,
                a = e[i],
                o = this._parsedKeys[a],
                h = this._getProperty(o);
              if (t) {
                var u = this._resolveValue(h, t[a]);
                this._setProperty(o, u), s = (s = this._getProperty(o)) && s.clone ? s.clone() : s, this._setProperty(o, h);
              } else s = h && h.clone ? h.clone() : h;
              n[a] = s;
            }
            return n;
          },
          _resolveValue: function _resolveValue(t, e) {
            if (e) {
              if (Array.isArray(e) && 2 === e.length) {
                var n = e[0];
                return n && n.match && n.match(/^[+\-\*\/]=/) ? this._calculate(t, n[0], e[1]) : e;
              }
              if ("string" == typeof e) {
                var i = e.match(/^[+\-*/]=(.*)/);
                if (i) {
                  var r = JSON.parse(i[1].replace(/(['"])?([a-zA-Z0-9_]+)(['"])?:/g, '"$2": '));
                  return this._calculate(t, e[0], r);
                }
              }
            }
            return e;
          },
          _calculate: function _calculate(t, e, n) {
            return ht.PaperScript.calculateBinary(t, e, n);
          },
          _parseKeys: function _parseKeys(t) {
            for (var e = {}, n = 0, i = t.length; n < i; n++) {
              var r = t[n],
                s = r.replace(/\.([^.]*)/g, "/$1").replace(/\[['"]?([^'"\]]*)['"]?\]/g, "/$1");
              e[r] = s.split("/");
            }
            return e;
          },
          _getProperty: function _getProperty(t, e) {
            for (var n = this.object, i = 0, r = t.length - (e || 0); i < r && n; i++) n = n[t[i]];
            return n;
          },
          _setProperty: function _setProperty(t, e) {
            var n = this._getProperty(t, 1);
            n && (n[t[t.length - 1]] = e);
          }
        }),
        it = {
          request: function request(t) {
            var n = new e.XMLHttpRequest();
            return n.open((t.method || "get").toUpperCase(), t.url, a.pick(t.async, !0)), t.mimeType && n.overrideMimeType(t.mimeType), n.onload = function () {
              var e = n.status;
              0 === e || 200 === e ? t.onLoad && t.onLoad.call(n, n.responseText) : n.onerror();
            }, n.onerror = function () {
              var e = n.status,
                i = 'Could not load "' + t.url + '" (Status: ' + e + ")";
              if (!t.onError) throw new Error(i);
              t.onError(i, e);
            }, n.send(null);
          }
        },
        rt = a.exports.CanvasProvider = {
          canvases: [],
          getCanvas: function getCanvas(t, e) {
            if (!r) return null;
            var n,
              a = !0;
            "object" === i(t) && (e = t.height, t = t.width), this.canvases.length ? n = this.canvases.pop() : (n = s.createElement("canvas"), a = !1);
            var o = n.getContext("2d");
            if (!o) throw new Error("Canvas " + n + " is unable to provide a 2D context.");
            return n.width === t && n.height === e ? a && o.clearRect(0, 0, t + 1, e + 1) : (n.width = t, n.height = e), o.save(), n;
          },
          getContext: function getContext(t, e) {
            var n = this.getCanvas(t, e);
            return n ? n.getContext("2d") : null;
          },
          release: function release(t) {
            var e = t && t.canvas ? t.canvas : t;
            e && e.getContext && (e.getContext("2d").restore(), this.canvases.push(e));
          }
        },
        st = new function () {
          var t,
            e,
            n,
            i,
            r,
            s,
            o,
            h,
            u,
            l,
            c,
            f = Math.min,
            d = Math.max,
            _ = Math.abs;
          function g(t, e, n) {
            return .2989 * t + .587 * e + .114 * n;
          }
          function v(t, e, n, i) {
            var r = i - g(t, e, n),
              s = (i = g(u = t + r, l = e + r, c = n + r), f(u, l, c)),
              a = d(u, l, c);
            if (s < 0) {
              var o = i - s;
              u = i + (u - i) * i / o, l = i + (l - i) * i / o, c = i + (c - i) * i / o;
            }
            if (a > 255) {
              var h = 255 - i,
                _ = a - i;
              u = i + (u - i) * h / _, l = i + (l - i) * h / _, c = i + (c - i) * h / _;
            }
          }
          function p(t, e, n) {
            return d(t, e, n) - f(t, e, n);
          }
          function m(t, e, n, i) {
            var r,
              s = [t, e, n],
              a = d(t, e, n),
              o = f(t, e, n);
            r = 0 === f(o = o === t ? 0 : o === e ? 1 : 2, a = a === t ? 0 : a === e ? 1 : 2) ? 1 === d(o, a) ? 2 : 1 : 0, s[a] > s[o] ? (s[r] = (s[r] - s[o]) * i / (s[a] - s[o]), s[a] = i) : s[r] = s[a] = 0, s[o] = 0, u = s[0], l = s[1], c = s[2];
          }
          var y = {
              multiply: function multiply() {
                u = r * t / 255, l = s * e / 255, c = o * n / 255;
              },
              screen: function screen() {
                u = r + t - r * t / 255, l = s + e - s * e / 255, c = o + n - o * n / 255;
              },
              overlay: function overlay() {
                u = r < 128 ? 2 * r * t / 255 : 255 - 2 * (255 - r) * (255 - t) / 255, l = s < 128 ? 2 * s * e / 255 : 255 - 2 * (255 - s) * (255 - e) / 255, c = o < 128 ? 2 * o * n / 255 : 255 - 2 * (255 - o) * (255 - n) / 255;
              },
              "soft-light": function softLight() {
                var i = t * r / 255;
                u = i + r * (255 - (255 - r) * (255 - t) / 255 - i) / 255, l = (i = e * s / 255) + s * (255 - (255 - s) * (255 - e) / 255 - i) / 255, c = (i = n * o / 255) + o * (255 - (255 - o) * (255 - n) / 255 - i) / 255;
              },
              "hard-light": function hardLight() {
                u = t < 128 ? 2 * t * r / 255 : 255 - 2 * (255 - t) * (255 - r) / 255, l = e < 128 ? 2 * e * s / 255 : 255 - 2 * (255 - e) * (255 - s) / 255, c = n < 128 ? 2 * n * o / 255 : 255 - 2 * (255 - n) * (255 - o) / 255;
              },
              "color-dodge": function colorDodge() {
                u = 0 === r ? 0 : 255 === t ? 255 : f(255, 255 * r / (255 - t)), l = 0 === s ? 0 : 255 === e ? 255 : f(255, 255 * s / (255 - e)), c = 0 === o ? 0 : 255 === n ? 255 : f(255, 255 * o / (255 - n));
              },
              "color-burn": function colorBurn() {
                u = 255 === r ? 255 : 0 === t ? 0 : d(0, 255 - 255 * (255 - r) / t), l = 255 === s ? 255 : 0 === e ? 0 : d(0, 255 - 255 * (255 - s) / e), c = 255 === o ? 255 : 0 === n ? 0 : d(0, 255 - 255 * (255 - o) / n);
              },
              darken: function darken() {
                u = r < t ? r : t, l = s < e ? s : e, c = o < n ? o : n;
              },
              lighten: function lighten() {
                u = r > t ? r : t, l = s > e ? s : e, c = o > n ? o : n;
              },
              difference: function difference() {
                (u = r - t) < 0 && (u = -u), (l = s - e) < 0 && (l = -l), (c = o - n) < 0 && (c = -c);
              },
              exclusion: function exclusion() {
                u = r + t * (255 - r - r) / 255, l = s + e * (255 - s - s) / 255, c = o + n * (255 - o - o) / 255;
              },
              hue: function hue() {
                m(t, e, n, p(r, s, o)), v(u, l, c, g(r, s, o));
              },
              saturation: function saturation() {
                m(r, s, o, p(t, e, n)), v(u, l, c, g(r, s, o));
              },
              luminosity: function luminosity() {
                v(r, s, o, g(t, e, n));
              },
              color: function color() {
                v(t, e, n, g(r, s, o));
              },
              add: function add() {
                u = f(r + t, 255), l = f(s + e, 255), c = f(o + n, 255);
              },
              subtract: function subtract() {
                u = d(r - t, 0), l = d(s - e, 0), c = d(o - n, 0);
              },
              average: function average() {
                u = (r + t) / 2, l = (s + e) / 2, c = (o + n) / 2;
              },
              negation: function negation() {
                u = 255 - _(255 - t - r), l = 255 - _(255 - e - s), c = 255 - _(255 - n - o);
              }
            },
            w = this.nativeModes = a.each(["source-over", "source-in", "source-out", "source-atop", "destination-over", "destination-in", "destination-out", "destination-atop", "lighter", "darker", "copy", "xor"], function (t) {
              this[t] = !0;
            }, {}),
            x = rt.getContext(1, 1);
          x && (a.each(y, function (t, e) {
            var n = "darken" === e,
              i = !1;
            x.save();
            try {
              x.fillStyle = n ? "#300" : "#a00", x.fillRect(0, 0, 1, 1), x.globalCompositeOperation = e, x.globalCompositeOperation === e && (x.fillStyle = n ? "#a00" : "#300", x.fillRect(0, 0, 1, 1), i = x.getImageData(0, 0, 1, 1).data[0] !== n ? 170 : 51);
            } catch (r) {}
            x.restore(), w[e] = i;
          }), rt.release(x)), this.process = function (a, f, d, _, g) {
            var v = f.canvas,
              p = "normal" === a;
            if (p || w[a]) d.save(), d.setTransform(1, 0, 0, 1, 0, 0), d.globalAlpha = _, p || (d.globalCompositeOperation = a), d.drawImage(v, g.x, g.y), d.restore();else {
              var m = y[a];
              if (!m) return;
              for (var x = d.getImageData(g.x, g.y, v.width, v.height), b = x.data, C = f.getImageData(0, 0, v.width, v.height).data, S = 0, k = b.length; S < k; S += 4) {
                t = C[S], r = b[S], e = C[S + 1], s = b[S + 1], n = C[S + 2], o = b[S + 2], i = C[S + 3], h = b[S + 3], m();
                var I = i * _ / 255,
                  P = 1 - I;
                b[S] = I * u + P * r, b[S + 1] = I * l + P * s, b[S + 2] = I * c + P * o, b[S + 3] = i * _ + P * h;
              }
              d.putImageData(x, g.x, g.y);
            }
          };
        }(),
        at = new function () {
          var t = "http://www.w3.org/2000/svg",
            e = "http://www.w3.org/2000/xmlns",
            n = "http://www.w3.org/1999/xlink",
            i = {
              href: n,
              xlink: e,
              xmlns: e + "/",
              "xmlns:xlink": e + "/"
            };
          function r(t, e, n) {
            for (var r in e) {
              var s = e[r],
                a = i[r];
              "number" == typeof s && n && (s = n.number(s)), a ? t.setAttributeNS(a, r, s) : t.setAttribute(r, s);
            }
            return t;
          }
          return {
            svg: t,
            xmlns: e,
            xlink: n,
            create: function create(e, n, i) {
              return r(s.createElementNS(t, e), n, i);
            },
            get: function get(t, e) {
              var n = i[e],
                r = n ? t.getAttributeNS(n, e) : t.getAttribute(e);
              return "null" === r ? null : r;
            },
            set: r
          };
        }(),
        ot = a.each({
          fillColor: ["fill", "color"],
          fillRule: ["fill-rule", "string"],
          strokeColor: ["stroke", "color"],
          strokeWidth: ["stroke-width", "number"],
          strokeCap: ["stroke-linecap", "string"],
          strokeJoin: ["stroke-linejoin", "string"],
          strokeScaling: ["vector-effect", "lookup", {
            true: "none",
            false: "non-scaling-stroke"
          }, function (t, e) {
            return !e && (t instanceof N || t instanceof I || t instanceof D);
          }],
          miterLimit: ["stroke-miterlimit", "number"],
          dashArray: ["stroke-dasharray", "array"],
          dashOffset: ["stroke-dashoffset", "number"],
          fontFamily: ["font-family", "string"],
          fontWeight: ["font-weight", "string"],
          fontSize: ["font-size", "number"],
          justification: ["text-anchor", "lookup", {
            left: "start",
            center: "middle",
            right: "end"
          }],
          opacity: ["opacity", "number"],
          blendMode: ["mix-blend-mode", "style"]
        }, function (t, e) {
          var n = a.capitalize(e),
            i = t[2];
          this[e] = {
            type: t[1],
            property: e,
            attribute: t[0],
            toSVG: i,
            fromSVG: i && a.each(i, function (t, e) {
              this[t] = e;
            }, {}),
            exportFilter: t[3],
            get: "get" + n,
            set: "set" + n
          };
        }, {});
      new function () {
        var t;
        function n(e, n, i) {
          var r,
            s = new a(),
            o = e.getTranslation();
          n && (e.isInvertible() ? (r = (e = e._shiftless())._inverseTransform(o), o = null) : r = new _(), s[i ? "cx" : "x"] = r.x, s[i ? "cy" : "y"] = r.y);
          if (!e.isIdentity()) {
            var h = e.decompose();
            if (h) {
              var u = [],
                l = h.rotation,
                c = h.scaling,
                d = h.skewing;
              o && !o.isZero() && u.push("translate(" + t.point(o) + ")"), l && u.push("rotate(" + t.number(l) + ")"), f.isZero(c.x - 1) && f.isZero(c.y - 1) || u.push("scale(" + t.point(c) + ")"), d.x && u.push("skewX(" + t.number(d.x) + ")"), d.y && u.push("skewY(" + t.number(d.y) + ")"), s.transform = u.join(" ");
            } else s.transform = "matrix(" + e.getValues().join(",") + ")";
          }
          return s;
        }
        function i(e, i) {
          for (var r = n(e._matrix), s = e._children, a = at.create("g", r, t), o = 0, h = s.length; o < h; o++) {
            var u = s[o],
              c = v(u, i);
            if (c) if (u.isClipMask()) {
              var f = at.create("clipPath");
              f.appendChild(c), l(u, f, "clip"), at.set(a, {
                "clip-path": "url(#" + f.id + ")"
              });
            } else a.appendChild(c);
          }
          return a;
        }
        function r(e) {
          var i = e._type,
            r = e._radius,
            s = n(e._matrix, !0, "rectangle" !== i);
          if ("rectangle" === i) {
            i = "rect";
            var a = e._size,
              o = a.width,
              h = a.height;
            s.x -= o / 2, s.y -= h / 2, s.width = o, s.height = h, r.isZero() && (r = null);
          }
          return r && ("circle" === i ? s.r = r : (s.rx = r.width, s.ry = r.height)), at.create(i, s, t);
        }
        var s,
          o = {
            Group: i,
            Layer: i,
            Raster: function Raster(e, i) {
              var r = n(e._matrix, !0),
                s = e.getSize(),
                a = e.getImage();
              return r.x -= s.width / 2, r.y -= s.height / 2, r.width = s.width, r.height = s.height, r.href = 0 == i.embedImages && a && a.src || e.toDataURL(), at.create("image", r, t);
            },
            Path: function Path(e, i) {
              var s = i.matchShapes;
              if (s) {
                var a = e.toShape(!1);
                if (a) return r(a);
              }
              var o,
                h = e._segments,
                u = h.length,
                l = n(e._matrix);
              if (s && u >= 2 && !e.hasHandles()) {
                if (u > 2) {
                  o = e._closed ? "polygon" : "polyline";
                  for (var c = [], f = 0; f < u; f++) c.push(t.point(h[f]._point));
                  l.points = c.join(" ");
                } else {
                  o = "line";
                  var d = h[0]._point,
                    _ = h[1]._point;
                  l.set({
                    x1: d.x,
                    y1: d.y,
                    x2: _.x,
                    y2: _.y
                  });
                }
              } else o = "path", l.d = e.getPathData(null, i.precision);
              return at.create(o, l, t);
            },
            Shape: r,
            CompoundPath: function CompoundPath(e, i) {
              var r = n(e._matrix),
                s = e.getPathData(null, i.precision);
              return s && (r.d = s), at.create("path", r, t);
            },
            SymbolItem: function SymbolItem(e, i) {
              var r = n(e._matrix, !0),
                s = e._definition,
                a = u(s, "symbol"),
                o = s._item,
                h = o.getStrokeBounds();
              return a || ((a = at.create("symbol", {
                viewBox: t.rectangle(h)
              })).appendChild(v(o, i)), l(s, a, "symbol")), r.href = "#" + a.id, r.x += h.x, r.y += h.y, r.width = h.width, r.height = h.height, r.overflow = "visible", at.create("use", r, t);
            },
            PointText: function PointText(e) {
              var i = at.create("text", n(e._matrix, !0), t);
              return i.textContent = e._content, i;
            }
          };
        function h(e, n, i) {
          var r = {},
            s = !i && e.getParent(),
            o = [];
          return null != e._name && (r.id = e._name), a.each(ot, function (n) {
            var i = n.get,
              h = n.type,
              c = e[i]();
            if (n.exportFilter ? n.exportFilter(e, c) : !s || !a.equals(s[i](), c)) {
              if ("color" === h && null != c) {
                var f = c.getAlpha();
                f < 1 && (r[n.attribute + "-opacity"] = f);
              }
              "style" === h ? o.push(n.attribute + ": " + c) : r[n.attribute] = null == c ? "none" : "color" === h ? c.gradient ? function (e) {
                var n = u(e, "color");
                if (!n) {
                  var i,
                    r = e.getGradient(),
                    s = r._radial,
                    a = e.getOrigin(),
                    o = e.getDestination();
                  if (s) {
                    i = {
                      cx: a.x,
                      cy: a.y,
                      r: a.getDistance(o)
                    };
                    var h = e.getHighlight();
                    h && (i.fx = h.x, i.fy = h.y);
                  } else i = {
                    x1: a.x,
                    y1: a.y,
                    x2: o.x,
                    y2: o.y
                  };
                  i.gradientUnits = "userSpaceOnUse", n = at.create((s ? "radial" : "linear") + "Gradient", i, t);
                  for (var c = r._stops, f = 0, d = c.length; f < d; f++) {
                    var _ = c[f],
                      g = _._color,
                      v = g.getAlpha(),
                      p = _._offset;
                    i = {
                      offset: null == p ? f / (d - 1) : p
                    }, g && (i["stop-color"] = g.toCSS(!0)), v < 1 && (i["stop-opacity"] = v), n.appendChild(at.create("stop", i, t));
                  }
                  l(e, n, "color");
                }
                return "url(#" + n.id + ")";
              }(c) : c.toCSS(!0) : "array" === h ? c.join(",") : "lookup" === h ? n.toSVG[c] : c;
            }
          }), o.length && (r.style = o.join(";")), 1 === r.opacity && delete r.opacity, e._visible || (r.visibility = "hidden"), at.set(n, r, t);
        }
        function u(t, e) {
          return s || (s = {
            ids: {},
            svgs: {}
          }), t && s.svgs[e + "-" + (t._id || t.__id || (t.__id = d.get("svg")))];
        }
        function l(t, e, n) {
          s || u();
          var i = s.ids[n] = (s.ids[n] || 0) + 1;
          e.id = n + "-" + i, s.svgs[n + "-" + (t._id || t.__id)] = e;
        }
        function g(t, n) {
          var i = t,
            r = null;
          if (s) {
            for (var a in i = "svg" === t.nodeName.toLowerCase() && t, s.svgs) r || (i || (i = at.create("svg")).appendChild(t), r = i.insertBefore(at.create("defs"), i.firstChild)), r.appendChild(s.svgs[a]);
            s = null;
          }
          return n.asString ? new e.XMLSerializer().serializeToString(i) : i;
        }
        function v(t, e, n) {
          var i = o[t._class],
            r = i && i(t, e);
          if (r) {
            var s = e.onExport;
            s && (r = s(t, r, e) || r);
            var a = JSON.stringify(t._data);
            a && "{}" !== a && "null" !== a && r.setAttribute("data-paper-data", a);
          }
          return r && h(t, r, n);
        }
        function p(e) {
          return e || (e = {}), t = new c(e.precision), e;
        }
        C.inject({
          exportSVG: function exportSVG(t) {
            return g(v(this, t = p(t), !0), t);
          }
        }), b.inject({
          exportSVG: function exportSVG(e) {
            e = p(e);
            var i = this._children,
              r = this.getView(),
              s = a.pick(e.bounds, "view"),
              o = e.matrix || "view" === s && r._matrix,
              h = o && w.read([o]),
              u = "view" === s ? new m([0, 0], r.getViewSize()) : "content" === s ? C._getBounds(i, h, {
                stroke: !0
              }).rect : m.read([s], 0, {
                readNull: !0
              }),
              l = {
                version: "1.1",
                xmlns: at.svg,
                "xmlns:xlink": at.xlink
              };
            u && (l.width = u.width, l.height = u.height, (u.x || 0 === u.x || u.y || 0 === u.y) && (l.viewBox = t.rectangle(u)));
            var c = at.create("svg", l, t),
              f = c;
            h && !h.isIdentity() && (f = c.appendChild(at.create("g", n(h), t)));
            for (var d = 0, _ = i.length; d < _; d++) f.appendChild(v(i[d], e, !0));
            return g(c, e);
          }
        });
      }(), new function () {
        var t,
          o = {};
        function h(e, n, i, r, s, a) {
          var o = at.get(e, n) || a,
            h = null == o ? r ? null : i ? "" : 0 : i ? o : parseFloat(o);
          return /%\s*$/.test(o) ? h / 100 * (s ? 1 : t[/x|^width/.test(n) ? "width" : "height"]) : h;
        }
        function u(t, e, n, i, r, s, a) {
          return e = h(t, e || "x", !1, i, r, s), n = h(t, n || "y", !1, i, r, a), !i || null != e && null != n ? new _(e, n) : null;
        }
        function l(t, e, n, i, r) {
          return e = h(t, e || "width", !1, i, r), n = h(t, n || "height", !1, i, r), !i || null != e && null != n ? new v(e, n) : null;
        }
        function c(t, e, n) {
          return "none" === t ? null : "number" === e ? parseFloat(t) : "array" === e ? t ? t.split(/[\s,]+/g).map(parseFloat) : [] : "color" === e ? O(t) || t : "lookup" === e ? n[t] : t;
        }
        function f(t, e, n, i) {
          var r = t.childNodes,
            s = "clippath" === e,
            a = "defs" === e,
            o = new S(),
            h = o._project,
            u = h._currentStyle,
            l = [];
          if (s || a || (o = T(o, t, i), h._currentStyle = o._style.clone()), i) for (var c = t.querySelectorAll("defs"), f = 0, d = c.length; f < d; f++) z(c[f], n, !1);
          for (f = 0, d = r.length; f < d; f++) {
            var _,
              g = r[f];
            1 !== g.nodeType || /^defs$/i.test(g.nodeName) || !(_ = z(g, n, !1)) || _ instanceof A || l.push(_);
          }
          return o.addChildren(l), s && (o = T(o.reduce(), t, i)), h._currentStyle = u, (s || a) && (o.remove(), o = null), o;
        }
        function d(t, e) {
          for (var n = t.getAttribute("points").match(/[+-]?(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?/g), i = [], r = 0, s = n.length; r < s; r += 2) i.push(new _(parseFloat(n[r]), parseFloat(n[r + 1])));
          var a = new B(i);
          return "polygon" === e && a.closePath(), a;
        }
        function g(t, e) {
          var n,
            i = (h(t, "href", !0) || "").substring(1),
            r = "radialgradient" === e;
          if (i) (n = o[i].getGradient())._radial ^ r && ((n = n.clone())._radial = r);else {
            for (var s = t.childNodes, a = [], l = 0, c = s.length; l < c; l++) {
              var f = s[l];
              1 === f.nodeType && a.push(T(new H(), f));
            }
            n = new U(a, r);
          }
          var d,
            _,
            g,
            v = "userSpaceOnUse" !== h(t, "gradientUnits", !0);
          return r ? (_ = (d = u(t, "cx", "cy", !1, v, "50%", "50%")).add(h(t, "r", !1, !1, v, "50%"), 0), g = u(t, "fx", "fy", !0, v)) : (d = u(t, "x1", "y1", !1, v, "0%", "0%"), _ = u(t, "x2", "y2", !1, v, "100%", "0%")), T(new V(n, d, _, g), t)._scaleToBounds = v, null;
        }
        var p = {
          "#document": function document(t, e, n, i) {
            for (var r = t.childNodes, s = 0, a = r.length; s < a; s++) {
              var o = r[s];
              if (1 === o.nodeType) return z(o, n, i);
            }
          },
          g: f,
          svg: f,
          clippath: f,
          polygon: d,
          polyline: d,
          path: function path(t) {
            return N.create(t.getAttribute("d"));
          },
          lineargradient: g,
          radialgradient: g,
          image: function image(t) {
            var e = new P(h(t, "href", !0));
            return e.on("load", function () {
              var e = l(t);
              this.setSize(e);
              var n = u(t).add(e.divide(2));
              this._matrix.append(new w().translate(n));
            }), e;
          },
          symbol: function symbol(t, e, n, i) {
            return new A(f(t, e, n, i), !0);
          },
          defs: f,
          use: function use(t) {
            var e = (h(t, "href", !0) || "").substring(1),
              n = o[e],
              i = u(t);
            return n ? n instanceof A ? n.place(i) : n.clone().translate(i) : null;
          },
          circle: function circle(t) {
            return new I.Circle(u(t, "cx", "cy"), h(t, "r"));
          },
          ellipse: function ellipse(t) {
            return new I.Ellipse({
              center: u(t, "cx", "cy"),
              radius: l(t, "rx", "ry")
            });
          },
          rect: function rect(t) {
            return new I.Rectangle(new m(u(t), l(t)), l(t, "rx", "ry"));
          },
          line: function line(t) {
            return new B.Line(u(t, "x1", "y1"), u(t, "x2", "y2"));
          },
          text: function text(t) {
            var e = new q(u(t).add(u(t, "dx", "dy")));
            return e.setContent(t.textContent.trim() || ""), e;
          },
          switch: f
        };
        function y(t, e, n, i) {
          if (t.transform) {
            for (var r = (i.getAttribute(n) || "").split(/\)\s*/g), s = new w(), a = 0, o = r.length; a < o; a++) {
              var h = r[a];
              if (!h) break;
              for (var u = h.split(/\(\s*/), l = u[0], c = u[1].split(/[\s,]+/g), f = 0, d = c.length; f < d; f++) c[f] = parseFloat(c[f]);
              switch (l) {
                case "matrix":
                  s.append(new w(c[0], c[1], c[2], c[3], c[4], c[5]));
                  break;
                case "rotate":
                  s.rotate(c[0], c[1] || 0, c[2] || 0);
                  break;
                case "translate":
                  s.translate(c[0], c[1] || 0);
                  break;
                case "scale":
                  s.scale(c);
                  break;
                case "skewX":
                  s.skew(c[0], 0);
                  break;
                case "skewY":
                  s.skew(0, c[0]);
              }
            }
            t.transform(s);
          }
        }
        function x(t, e, n) {
          var i = "fill-opacity" === n ? "getFillColor" : "getStrokeColor",
            r = t[i] && t[i]();
          r && r.setAlpha(parseFloat(e));
        }
        var k = a.set(a.each(ot, function (t) {
          this[t.attribute] = function (e, n) {
            if (e[t.set] && (e[t.set](c(n, t.type, t.fromSVG)), "color" === t.type)) {
              var i = e[t.get]();
              if (i && i._scaleToBounds) {
                var r = e.getBounds();
                i.transform(new w().translate(r.getPoint()).scale(r.getSize()));
              }
            }
          };
        }, {}), {
          id: function id(t, e) {
            o[e] = t, t.setName && t.setName(e);
          },
          "clip-path": function clipPath(t, e) {
            var n = O(e);
            if (n) {
              if ((n = n.clone()).setClipMask(!0), !(t instanceof S)) return new S(n, t);
              t.insertChild(0, n);
            }
          },
          gradientTransform: y,
          transform: y,
          "fill-opacity": x,
          "stroke-opacity": x,
          visibility: function visibility(t, e) {
            t.setVisible && t.setVisible("visible" === e);
          },
          display: function display(t, e) {
            t.setVisible && t.setVisible(null !== e);
          },
          "stop-color": function stopColor(t, e) {
            t.setColor && t.setColor(e);
          },
          "stop-opacity": function stopOpacity(t, e) {
            t._color && t._color.setAlpha(parseFloat(e));
          },
          offset: function offset(t, e) {
            if (t.setOffset) {
              var n = e.match(/(.*)%$/);
              t.setOffset(n ? n[1] / 100 : parseFloat(e));
            }
          },
          viewBox: function viewBox(t, e, n, i, r) {
            var s,
              a = new m(c(e, "array")),
              o = l(i, null, null, !0);
            if (t instanceof S) {
              var h = o ? o.divide(a.getSize()) : 1,
                u = new w().scale(h).translate(a.getPoint().negate());
              s = t;
            } else t instanceof A && (o && a.setSize(o), s = t._item);
            if (s) {
              if ("visible" !== M(i, "overflow", r)) {
                var f = new I.Rectangle(a);
                f.setClipMask(!0), s.addChild(f);
              }
              u && s.transform(u);
            }
          }
        });
        function M(t, e, i) {
          var r = t.attributes[e],
            s = r && r.value;
          if (!s && t.style) {
            var o = a.camelize(e);
            (s = t.style[o]) || i.node[o] === i.parent[o] || (s = i.node[o]);
          }
          return s ? "none" === s ? null : s : n;
        }
        function T(t, e, i) {
          var r = e.parentNode,
            s = {
              node: W.getStyles(e) || {},
              parent: !i && !/^defs$/i.test(r.tagName) && W.getStyles(r) || {}
            };
          return a.each(k, function (i, r) {
            var a = M(e, r, s);
            t = a !== n && i(t, a, r, e, s) || t;
          }), t;
        }
        function O(t) {
          var e = t && t.match(/\((?:["'#]*)([^"')]+)/),
            n = e && e[1],
            i = n && o[r ? n.replace(r.location.href.split("#")[0] + "#", "") : n];
          return i && i._scaleToBounds && ((i = i.clone())._scaleToBounds = !0), i;
        }
        function z(e, n, i) {
          var r,
            h,
            u,
            c = e.nodeName.toLowerCase(),
            f = "#document" !== c,
            d = s.body;
          i && f && (t = ht.getView().getSize(), t = l(e, null, null, !0) || t, r = at.create("svg", {
            style: "stroke-width: 1px; stroke-miterlimit: 10"
          }), h = e.parentNode, u = e.nextSibling, r.appendChild(e), d.appendChild(r));
          var _ = ht.settings,
            g = _.applyMatrix,
            v = _.insertItems;
          _.applyMatrix = !1, _.insertItems = !1;
          var m = p[c],
            y = m && m(e, c, n, i) || null;
          if (_.insertItems = v, _.applyMatrix = g, y) {
            !f || y instanceof S || (y = T(y, e, i));
            var w = n.onImport,
              x = f && e.getAttribute("data-paper-data");
            w && (y = w(e, y, n) || y), n.expandShapes && y instanceof I && (y.remove(), y = y.toPath()), x && (y._data = JSON.parse(x));
          }
          return r && (d.removeChild(r), h && (u ? h.insertBefore(e, u) : h.appendChild(e))), i && (o = {}, y && a.pick(n.applyMatrix, g) && y.matrix.apply(!0, !0)), y;
        }
        function E(t, r, a) {
          if (!t) return null;
          r = "function" == typeof r ? {
            onLoad: r
          } : r || {};
          var o = ht,
            h = null;
          function u(s) {
            try {
              var u = "object" === i(s) ? s : new e.DOMParser().parseFromString(s.trim(), "image/svg+xml");
              if (!u.nodeName) throw u = null, new Error("Unsupported SVG source: " + t);
              ht = o, h = z(u, r, !0), r && !1 === r.insert || a._insertItem(n, h);
              var c = r.onLoad;
              c && c(h, s);
            } catch (f) {
              l(f);
            }
          }
          function l(t, e) {
            var n = r.onError;
            if (!n) throw new Error(t);
            n(t, e);
          }
          if ("string" != typeof t || /^[\s\S]*</.test(t)) {
            if ("undefined" != typeof File && t instanceof File) {
              var c = new FileReader();
              return c.onload = function () {
                u(c.result);
              }, c.onerror = function () {
                l(c.error);
              }, c.readAsText(t);
            }
            u(t);
          } else {
            var f = s.getElementById(t);
            f ? u(f) : it.request({
              url: t,
              async: !0,
              onLoad: u,
              onError: l
            });
          }
          return h;
        }
        C.inject({
          importSVG: function importSVG(t, e) {
            return E(t, e, this);
          }
        }), b.inject({
          importSVG: function importSVG(t, e) {
            return this.activate(), E(t, e, this);
          }
        });
      }(), a.exports.PaperScript = function () {
        var n,
          o,
          u,
          l,
          c = this,
          f = c.acorn;
        if (!f && "undefined" != typeof require) try {
          f = require("acorn");
        } catch (k) {}
        f || (f = n = o = {}, u = this, l = function l(t) {
          "use strict";

          var e, n, i, r;
          t.version = "0.5.0", t.parse = function (t, r) {
            return n = String(t), i = n.length, a(r), $t(), function (t) {
              p = m = o, e.locations && (y = new Wt());
              w = b = null, x = [], Yt();
              var n = t || ce(),
                i = !0;
              t || (n.body = []);
              for (; f !== O;) {
                var r = Ce();
                n.body.push(r), i && _e(r) && he(!0), i = !1;
              }
              return de(n, "Program");
            }(e.program);
          };
          var s = t.defaultOptions = {
            ecmaVersion: 5,
            strictSemicolons: !1,
            allowTrailingCommas: !0,
            forbidReserved: !1,
            allowReturnOutsideFunction: !1,
            locations: !1,
            onComment: null,
            ranges: !1,
            program: null,
            sourceFile: null,
            directSourceFile: null
          };
          function a(t) {
            for (var n in e = t || {}, s) Object.prototype.hasOwnProperty.call(e, n) || (e[n] = s[n]);
            r = e.sourceFile || null;
          }
          var o,
            h,
            u,
            l,
            c,
            f,
            d,
            _,
            g,
            v,
            p,
            m,
            y,
            w,
            x,
            b,
            C = t.getLineInfo = function (t, e) {
              for (var n = 1, i = 0;;) {
                Ut.lastIndex = i;
                var r = Ut.exec(t);
                if (!(r && r.index < e)) break;
                ++n, i = r.index + r[0].length;
              }
              return {
                line: n,
                column: e - i
              };
            };
          function S(t, e) {
            var i = C(n, t);
            e += " (" + i.line + ":" + i.column + ")";
            var r = new SyntaxError(e);
            throw r.pos = t, r.loc = i, r.raisedAt = o, r;
          }
          t.tokenize = function (t, r) {
            n = String(t), i = n.length, a(r), $t();
            var s = {};
            function p(t) {
              return m = u, Yt(t), s.start = h, s.end = u, s.startLoc = l, s.endLoc = c, s.type = f, s.value = d, s;
            }
            return p.jumpTo = function (t, i) {
              var r;
              if (o = t, e.locations) for (g = 1, v = Ut.lastIndex = 0; (r = Ut.exec(n)) && r.index < t;) ++g, v = r.index + r[0].length;
              _ = i, Kt();
            }, p;
          };
          var I = [],
            P = {
              type: "num"
            },
            M = {
              type: "regexp"
            },
            A = {
              type: "string"
            },
            T = {
              type: "name"
            },
            O = {
              type: "eof"
            },
            z = {
              keyword: "break"
            },
            E = {
              keyword: "case",
              beforeExpr: !0
            },
            L = {
              keyword: "catch"
            },
            N = {
              keyword: "continue"
            },
            B = {
              keyword: "debugger"
            },
            F = {
              keyword: "default"
            },
            j = {
              keyword: "do",
              isLoop: !0
            },
            R = {
              keyword: "else",
              beforeExpr: !0
            },
            D = {
              keyword: "finally"
            },
            q = {
              keyword: "for",
              isLoop: !0
            },
            V = {
              keyword: "function"
            },
            U = {
              keyword: "if"
            },
            H = {
              keyword: "return",
              beforeExpr: !0
            },
            Z = {
              keyword: "switch"
            },
            W = {
              keyword: "throw",
              beforeExpr: !0
            },
            $ = {
              keyword: "try"
            },
            G = {
              keyword: "var"
            },
            J = {
              keyword: "while",
              isLoop: !0
            },
            X = {
              keyword: "with"
            },
            K = {
              keyword: "new",
              beforeExpr: !0
            },
            Q = {
              keyword: "this"
            },
            Y = {
              keyword: "null",
              atomValue: null
            },
            tt = {
              keyword: "true",
              atomValue: !0
            },
            et = {
              keyword: "false",
              atomValue: !1
            },
            nt = {
              keyword: "in",
              binop: 7,
              beforeExpr: !0
            },
            it = {
              break: z,
              case: E,
              catch: L,
              continue: N,
              debugger: B,
              default: F,
              do: j,
              else: R,
              finally: D,
              for: q,
              function: V,
              if: U,
              return: H,
              switch: Z,
              throw: W,
              try: $,
              var: G,
              while: J,
              with: X,
              null: Y,
              true: tt,
              false: et,
              new: K,
              in: nt,
              instanceof: {
                keyword: "instanceof",
                binop: 7,
                beforeExpr: !0
              },
              this: Q,
              typeof: {
                keyword: "typeof",
                prefix: !0,
                beforeExpr: !0
              },
              void: {
                keyword: "void",
                prefix: !0,
                beforeExpr: !0
              },
              delete: {
                keyword: "delete",
                prefix: !0,
                beforeExpr: !0
              }
            },
            rt = {
              type: "[",
              beforeExpr: !0
            },
            st = {
              type: "]"
            },
            at = {
              type: "{",
              beforeExpr: !0
            },
            ot = {
              type: "}"
            },
            ht = {
              type: "(",
              beforeExpr: !0
            },
            ut = {
              type: ")"
            },
            lt = {
              type: ",",
              beforeExpr: !0
            },
            ct = {
              type: ";",
              beforeExpr: !0
            },
            ft = {
              type: ":",
              beforeExpr: !0
            },
            dt = {
              type: "."
            },
            _t = {
              type: "?",
              beforeExpr: !0
            },
            gt = {
              binop: 10,
              beforeExpr: !0
            },
            vt = {
              isAssign: !0,
              beforeExpr: !0
            },
            pt = {
              isAssign: !0,
              beforeExpr: !0
            },
            mt = {
              postfix: !0,
              prefix: !0,
              isUpdate: !0
            },
            yt = {
              prefix: !0,
              beforeExpr: !0
            },
            wt = {
              binop: 1,
              beforeExpr: !0
            },
            xt = {
              binop: 2,
              beforeExpr: !0
            },
            bt = {
              binop: 3,
              beforeExpr: !0
            },
            Ct = {
              binop: 4,
              beforeExpr: !0
            },
            St = {
              binop: 5,
              beforeExpr: !0
            },
            kt = {
              binop: 6,
              beforeExpr: !0
            },
            It = {
              binop: 7,
              beforeExpr: !0
            },
            Pt = {
              binop: 8,
              beforeExpr: !0
            },
            Mt = {
              binop: 9,
              prefix: !0,
              beforeExpr: !0
            },
            At = {
              binop: 10,
              beforeExpr: !0
            };
          for (var Tt in t.tokTypes = {
            bracketL: rt,
            bracketR: st,
            braceL: at,
            braceR: ot,
            parenL: ht,
            parenR: ut,
            comma: lt,
            semi: ct,
            colon: ft,
            dot: dt,
            question: _t,
            slash: gt,
            eq: vt,
            name: T,
            eof: O,
            num: P,
            regexp: M,
            string: A
          }, it) t.tokTypes["_" + Tt] = it[Tt];
          function Ot(t) {
            t = t.split(" ");
            var e = "",
              n = [];
            t: for (var i = 0; i < t.length; ++i) {
              for (var r = 0; r < n.length; ++r) if (n[r][0].length == t[i].length) {
                n[r].push(t[i]);
                continue t;
              }
              n.push([t[i]]);
            }
            function s(t) {
              if (1 == t.length) return e += "return str === " + JSON.stringify(t[0]) + ";";
              e += "switch(str){";
              for (var n = 0; n < t.length; ++n) e += "case " + JSON.stringify(t[n]) + ":";
              e += "return true}return false;";
            }
            if (n.length > 3) {
              n.sort(function (t, e) {
                return e.length - t.length;
              }), e += "switch(str.length){";
              for (i = 0; i < n.length; ++i) {
                var a = n[i];
                e += "case " + a[0].length + ":", s(a);
              }
              e += "}";
            } else s(t);
            return new Function("str", e);
          }
          var zt,
            Et = Ot("abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile"),
            Lt = Ot("class enum extends super const export import"),
            Nt = Ot("implements interface let package private protected public static yield"),
            Bt = Ot("eval arguments"),
            Ft = Ot("break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this"),
            jt = /[\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff]/,
            Rt = "ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԧԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠࢢ-ࢬऄ-हऽॐक़-ॡॱ-ॷॹ-ॿঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚗꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꪀ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",
            Dt = new RegExp("[" + Rt + "]"),
            qt = new RegExp("[" + Rt + "̀-ͯ҃-֑҇-ׇֽֿׁׂׅׄؐ-ؚؠ-ىٲ-ۓۧ-ۨۻ-ۼܰ-݊ࠀ-ࠔࠛ-ࠣࠥ-ࠧࠩ-࠭ࡀ-ࡗࣤ-ࣾऀ-ःऺ-़ा-ॏ॑-ॗॢ-ॣ०-९ঁ-ঃ়া-ৄেৈৗয়-ৠਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢ-ૣ૦-૯ଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୟ-ୠ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఁ-ఃె-ైొ-్ౕౖౢ-ౣ౦-౯ಂಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢ-ೣ೦-೯ംഃെ-ൈൗൢ-ൣ൦-൯ංඃ්ා-ුූෘ-ෟෲෳิ-ฺเ-ๅ๐-๙ິ-ູ່-ໍ໐-໙༘༙༠-༩༹༵༷ཁ-ཇཱ-྄྆-྇ྍ-ྗྙ-ྼ࿆က-ဩ၀-၉ၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟ᜎ-ᜐᜠ-ᜰᝀ-ᝐᝲᝳក-ឲ៝០-៩᠋-᠍᠐-᠙ᤠ-ᤫᤰ-᤻ᥑ-ᥭᦰ-ᧀᧈ-ᧉ᧐-᧙ᨀ-ᨕᨠ-ᩓ᩠-᩿᩼-᪉᪐-᪙ᭆ-ᭋ᭐-᭙᭫-᭳᮰-᮹᯦-᯳ᰀ-ᰢ᱀-᱉ᱛ-ᱽ᳐-᳒ᴀ-ᶾḁ-ἕ‌‍‿⁀⁔⃐-⃥⃜⃡-⃰ⶁ-ⶖⷠ-ⷿ〡-〨゙゚Ꙁ-ꙭꙴ-꙽ꚟ꛰-꛱ꟸ-ꠀ꠆ꠋꠣ-ꠧꢀ-ꢁꢴ-꣄꣐-꣙ꣳ-ꣷ꤀-꤉ꤦ-꤭ꤰ-ꥅꦀ-ꦃ꦳-꧀ꨀ-ꨧꩀ-ꩁꩌ-ꩍ꩐-꩙ꩻꫠ-ꫩꫲ-ꫳꯀ-ꯡ꯬꯭꯰-꯹ﬠ-ﬨ︀-️︠-︦︳︴﹍-﹏０-９＿]"),
            Vt = /[\n\r\u2028\u2029]/,
            Ut = /\r\n|[\n\r\u2028\u2029]/g,
            Ht = t.isIdentifierStart = function (t) {
              return t < 65 ? 36 === t : t < 91 || (t < 97 ? 95 === t : t < 123 || t >= 170 && Dt.test(String.fromCharCode(t)));
            },
            Zt = t.isIdentifierChar = function (t) {
              return t < 48 ? 36 === t : t < 58 || !(t < 65) && (t < 91 || (t < 97 ? 95 === t : t < 123 || t >= 170 && qt.test(String.fromCharCode(t))));
            };
          function Wt() {
            this.line = g, this.column = o - v;
          }
          function $t() {
            g = 1, o = v = 0, _ = !0, Kt();
          }
          function Gt(t, n) {
            u = o, e.locations && (c = new Wt()), f = t, Kt(), d = n, _ = t.beforeExpr;
          }
          function Jt() {
            var t,
              i = e.onComment && e.locations && new Wt(),
              r = o,
              s = n.indexOf("*/", o += 2);
            if (-1 === s && S(o - 2, "Unterminated comment"), o = s + 2, e.locations) for (Ut.lastIndex = r; (t = Ut.exec(n)) && t.index < o;) ++g, v = t.index + t[0].length;
            e.onComment && e.onComment(!0, n.slice(r + 2, s), r, o, i, e.locations && new Wt());
          }
          function Xt() {
            for (var t = o, r = e.onComment && e.locations && new Wt(), s = n.charCodeAt(o += 2); o < i && 10 !== s && 13 !== s && 8232 !== s && 8233 !== s;) ++o, s = n.charCodeAt(o);
            e.onComment && e.onComment(!1, n.slice(t + 2, o), t, o, r, e.locations && new Wt());
          }
          function Kt() {
            for (; o < i;) {
              var t = n.charCodeAt(o);
              if (32 === t) ++o;else if (13 === t) {
                ++o, 10 === (r = n.charCodeAt(o)) && ++o, e.locations && (++g, v = o);
              } else if (10 === t || 8232 === t || 8233 === t) ++o, e.locations && (++g, v = o);else if (t > 8 && t < 14) ++o;else if (47 === t) {
                var r;
                if (42 === (r = n.charCodeAt(o + 1))) Jt();else {
                  if (47 !== r) break;
                  Xt();
                }
              } else if (160 === t) ++o;else {
                if (!(t >= 5760 && jt.test(String.fromCharCode(t)))) break;
                ++o;
              }
            }
          }
          function Qt(t) {
            switch (t) {
              case 46:
                return function () {
                  var t = n.charCodeAt(o + 1);
                  return t >= 48 && t <= 57 ? ie(!0) : (++o, Gt(dt));
                }();
              case 40:
                return ++o, Gt(ht);
              case 41:
                return ++o, Gt(ut);
              case 59:
                return ++o, Gt(ct);
              case 44:
                return ++o, Gt(lt);
              case 91:
                return ++o, Gt(rt);
              case 93:
                return ++o, Gt(st);
              case 123:
                return ++o, Gt(at);
              case 125:
                return ++o, Gt(ot);
              case 58:
                return ++o, Gt(ft);
              case 63:
                return ++o, Gt(_t);
              case 48:
                var r = n.charCodeAt(o + 1);
                if (120 === r || 88 === r) return function () {
                  o += 2;
                  var t = ne(16);
                  null == t && S(h + 2, "Expected hexadecimal number");
                  Ht(n.charCodeAt(o)) && S(o, "Identifier directly after number");
                  return Gt(P, t);
                }();
              case 49:
              case 50:
              case 51:
              case 52:
              case 53:
              case 54:
              case 55:
              case 56:
              case 57:
                return ie(!1);
              case 34:
              case 39:
                return function (t) {
                  o++;
                  for (var r = "";;) {
                    o >= i && S(h, "Unterminated string constant");
                    var s = n.charCodeAt(o);
                    if (s === t) return ++o, Gt(A, r);
                    if (92 === s) {
                      s = n.charCodeAt(++o);
                      var a = /^[0-7]+/.exec(n.slice(o, o + 3));
                      for (a && (a = a[0]); a && parseInt(a, 8) > 255;) a = a.slice(0, -1);
                      if ("0" === a && (a = null), ++o, a) b && S(o - 2, "Octal literal in strict mode"), r += String.fromCharCode(parseInt(a, 8)), o += a.length - 1;else switch (s) {
                        case 110:
                          r += "\n";
                          break;
                        case 114:
                          r += "\r";
                          break;
                        case 120:
                          r += String.fromCharCode(re(2));
                          break;
                        case 117:
                          r += String.fromCharCode(re(4));
                          break;
                        case 85:
                          r += String.fromCharCode(re(8));
                          break;
                        case 116:
                          r += "\t";
                          break;
                        case 98:
                          r += "\b";
                          break;
                        case 118:
                          r += "\v";
                          break;
                        case 102:
                          r += "\f";
                          break;
                        case 48:
                          r += "\0";
                          break;
                        case 13:
                          10 === n.charCodeAt(o) && ++o;
                        case 10:
                          e.locations && (v = o, ++g);
                          break;
                        default:
                          r += String.fromCharCode(s);
                      }
                    } else 13 !== s && 10 !== s && 8232 !== s && 8233 !== s || S(h, "Unterminated string constant"), r += String.fromCharCode(s), ++o;
                  }
                }(t);
              case 47:
                return function () {
                  var t = n.charCodeAt(o + 1);
                  return _ ? (++o, ee()) : 61 === t ? te(pt, 2) : te(gt, 1);
                }();
              case 37:
              case 42:
                return 61 === n.charCodeAt(o + 1) ? te(pt, 2) : te(At, 1);
              case 124:
              case 38:
                return function (t) {
                  var e = n.charCodeAt(o + 1);
                  return e === t ? te(124 === t ? wt : xt, 2) : 61 === e ? te(pt, 2) : te(124 === t ? bt : St, 1);
                }(t);
              case 94:
                return 61 === n.charCodeAt(o + 1) ? te(pt, 2) : te(Ct, 1);
              case 43:
              case 45:
                return function (t) {
                  var e = n.charCodeAt(o + 1);
                  return e === t ? 45 == e && 62 == n.charCodeAt(o + 2) && Vt.test(n.slice(m, o)) ? (o += 3, Xt(), Kt(), Yt()) : te(mt, 2) : 61 === e ? te(pt, 2) : te(Mt, 1);
                }(t);
              case 60:
              case 62:
                return function (t) {
                  var e = n.charCodeAt(o + 1),
                    i = 1;
                  return e === t ? (i = 62 === t && 62 === n.charCodeAt(o + 2) ? 3 : 2, 61 === n.charCodeAt(o + i) ? te(pt, i + 1) : te(Pt, i)) : 33 == e && 60 == t && 45 == n.charCodeAt(o + 2) && 45 == n.charCodeAt(o + 3) ? (o += 4, Xt(), Kt(), Yt()) : (61 === e && (i = 61 === n.charCodeAt(o + 2) ? 3 : 2), te(It, i));
                }(t);
              case 61:
              case 33:
                return function (t) {
                  return 61 === n.charCodeAt(o + 1) ? te(kt, 61 === n.charCodeAt(o + 2) ? 3 : 2) : te(61 === t ? vt : yt, 1);
                }(t);
              case 126:
                return te(yt, 1);
            }
            return !1;
          }
          function Yt(t) {
            if (t ? o = h + 1 : h = o, e.locations && (l = new Wt()), t) return ee();
            if (o >= i) return Gt(O);
            var r = n.charCodeAt(o);
            if (Ht(r) || 92 === r) return ae();
            var s = Qt(r);
            if (!1 === s) {
              var a = String.fromCharCode(r);
              if ("\\" === a || Dt.test(a)) return ae();
              S(o, "Unexpected character '" + a + "'");
            }
            return s;
          }
          function te(t, e) {
            var i = n.slice(o, o + e);
            o += e, Gt(t, i);
          }
          function ee() {
            for (var t, e, r = o;;) {
              o >= i && S(r, "Unterminated regular expression");
              var s = n.charAt(o);
              if (Vt.test(s) && S(r, "Unterminated regular expression"), t) t = !1;else {
                if ("[" === s) e = !0;else if ("]" === s && e) e = !1;else if ("/" === s && !e) break;
                t = "\\" === s;
              }
              ++o;
            }
            var a = n.slice(r, o);
            ++o;
            var h = se();
            h && !/^[gmsiy]*$/.test(h) && S(r, "Invalid regexp flag");
            try {
              var u = new RegExp(a, h);
            } catch (k) {
              k instanceof SyntaxError && S(r, k.message), S(k);
            }
            return Gt(M, u);
          }
          function ne(t, e) {
            for (var i = o, r = 0, s = 0, a = null == e ? 1 / 0 : e; s < a; ++s) {
              var h,
                u = n.charCodeAt(o);
              if ((h = u >= 97 ? u - 97 + 10 : u >= 65 ? u - 65 + 10 : u >= 48 && u <= 57 ? u - 48 : 1 / 0) >= t) break;
              ++o, r = r * t + h;
            }
            return o === i || null != e && o - i !== e ? null : r;
          }
          function ie(t) {
            var e = o,
              i = !1,
              r = 48 === n.charCodeAt(o);
            t || null !== ne(10) || S(e, "Invalid number"), 46 === n.charCodeAt(o) && (++o, ne(10), i = !0);
            var s = n.charCodeAt(o);
            69 !== s && 101 !== s || (43 !== (s = n.charCodeAt(++o)) && 45 !== s || ++o, null === ne(10) && S(e, "Invalid number"), i = !0), Ht(n.charCodeAt(o)) && S(o, "Identifier directly after number");
            var a,
              h = n.slice(e, o);
            return i ? a = parseFloat(h) : r && 1 !== h.length ? /[89]/.test(h) || b ? S(e, "Invalid number") : a = parseInt(h, 8) : a = parseInt(h, 10), Gt(P, a);
          }
          function re(t) {
            var e = ne(16, t);
            return null === e && S(h, "Bad character escape sequence"), e;
          }
          function se() {
            zt = !1;
            for (var t, e = !0, i = o;;) {
              var r = n.charCodeAt(o);
              if (Zt(r)) zt && (t += n.charAt(o)), ++o;else {
                if (92 !== r) break;
                zt || (t = n.slice(i, o)), zt = !0, 117 != n.charCodeAt(++o) && S(o, "Expecting Unicode escape sequence \\uXXXX"), ++o;
                var s = re(4),
                  a = String.fromCharCode(s);
                a || S(o - 1, "Invalid Unicode escape"), (e ? Ht(s) : Zt(s)) || S(o - 4, "Invalid Unicode escape"), t += a;
              }
              e = !1;
            }
            return zt ? t : n.slice(i, o);
          }
          function ae() {
            var t = se(),
              e = T;
            return !zt && Ft(t) && (e = it[t]), Gt(e, t);
          }
          function oe() {
            p = h, m = u, y = c, Yt();
          }
          function he(t) {
            if (b = t, o = h, e.locations) for (; o < v;) v = n.lastIndexOf("\n", v - 2) + 1, --g;
            Kt(), Yt();
          }
          function ue() {
            this.type = null, this.start = h, this.end = null;
          }
          function le() {
            this.start = l, this.end = null, null !== r && (this.source = r);
          }
          function ce() {
            var t = new ue();
            return e.locations && (t.loc = new le()), e.directSourceFile && (t.sourceFile = e.directSourceFile), e.ranges && (t.range = [h, 0]), t;
          }
          function fe(t) {
            var n = new ue();
            return n.start = t.start, e.locations && (n.loc = new le(), n.loc.start = t.loc.start), e.ranges && (n.range = [t.range[0], 0]), n;
          }
          function de(t, n) {
            return t.type = n, t.end = m, e.locations && (t.loc.end = y), e.ranges && (t.range[1] = m), t;
          }
          function _e(t) {
            return e.ecmaVersion >= 5 && "ExpressionStatement" === t.type && "Literal" === t.expression.type && "use strict" === t.expression.value;
          }
          function ge(t) {
            if (f === t) return oe(), !0;
          }
          function ve() {
            return !e.strictSemicolons && (f === O || f === ot || Vt.test(n.slice(m, h)));
          }
          function pe() {
            ge(ct) || ve() || ye();
          }
          function me(t) {
            f === t ? oe() : ye();
          }
          function ye() {
            S(h, "Unexpected token");
          }
          function we(t) {
            "Identifier" !== t.type && "MemberExpression" !== t.type && S(t.start, "Assigning to rvalue"), b && "Identifier" === t.type && Bt(t.name) && S(t.start, "Assigning to " + t.name + " in strict mode");
          }
          var xe = {
              kind: "loop"
            },
            be = {
              kind: "switch"
            };
          function Ce() {
            (f === gt || f === pt && "/=" == d) && Yt(!0);
            var t = f,
              i = ce();
            switch (t) {
              case z:
              case N:
                oe();
                var r = t === z;
                ge(ct) || ve() ? i.label = null : f !== T ? ye() : (i.label = Fe(), pe());
                for (var s = 0; s < x.length; ++s) {
                  var a = x[s];
                  if (null == i.label || a.name === i.label.name) {
                    if (null != a.kind && (r || "loop" === a.kind)) break;
                    if (i.label && r) break;
                  }
                }
                return s === x.length && S(i.start, "Unsyntactic " + t.keyword), de(i, r ? "BreakStatement" : "ContinueStatement");
              case B:
                return oe(), pe(), de(i, "DebuggerStatement");
              case j:
                return oe(), x.push(xe), i.body = Ce(), x.pop(), me(J), i.test = Se(), pe(), de(i, "DoWhileStatement");
              case q:
                if (oe(), x.push(xe), me(ht), f === ct) return Ie(i, null);
                if (f === G) {
                  var o = ce();
                  return oe(), Me(o, !0), de(o, "VariableDeclaration"), 1 === o.declarations.length && ge(nt) ? Pe(i, o) : Ie(i, o);
                }
                o = Ae(!1, !0);
                return ge(nt) ? (we(o), Pe(i, o)) : Ie(i, o);
              case V:
                return oe(), Ne(i, !0);
              case U:
                return oe(), i.test = Se(), i.consequent = Ce(), i.alternate = ge(R) ? Ce() : null, de(i, "IfStatement");
              case H:
                return w || e.allowReturnOutsideFunction || S(h, "'return' outside of function"), oe(), ge(ct) || ve() ? i.argument = null : (i.argument = Ae(), pe()), de(i, "ReturnStatement");
              case Z:
                oe(), i.discriminant = Se(), i.cases = [], me(at), x.push(be);
                for (var u, l; f != ot;) if (f === E || f === F) {
                  var c = f === E;
                  u && de(u, "SwitchCase"), i.cases.push(u = ce()), u.consequent = [], oe(), c ? u.test = Ae() : (l && S(p, "Multiple default clauses"), l = !0, u.test = null), me(ft);
                } else u || ye(), u.consequent.push(Ce());
                return u && de(u, "SwitchCase"), oe(), x.pop(), de(i, "SwitchStatement");
              case W:
                return oe(), Vt.test(n.slice(m, h)) && S(m, "Illegal newline after throw"), i.argument = Ae(), pe(), de(i, "ThrowStatement");
              case $:
                if (oe(), i.block = ke(), i.handler = null, f === L) {
                  var _ = ce();
                  oe(), me(ht), _.param = Fe(), b && Bt(_.param.name) && S(_.param.start, "Binding " + _.param.name + " in strict mode"), me(ut), _.guard = null, _.body = ke(), i.handler = de(_, "CatchClause");
                }
                return i.guardedHandlers = I, i.finalizer = ge(D) ? ke() : null, i.handler || i.finalizer || S(i.start, "Missing catch or finally clause"), de(i, "TryStatement");
              case G:
                return oe(), Me(i), pe(), de(i, "VariableDeclaration");
              case J:
                return oe(), i.test = Se(), x.push(xe), i.body = Ce(), x.pop(), de(i, "WhileStatement");
              case X:
                return b && S(h, "'with' in strict mode"), oe(), i.object = Se(), i.body = Ce(), de(i, "WithStatement");
              case at:
                return ke();
              case ct:
                return oe(), de(i, "EmptyStatement");
              default:
                var g = d,
                  v = Ae();
                if (t === T && "Identifier" === v.type && ge(ft)) {
                  for (s = 0; s < x.length; ++s) x[s].name === g && S(v.start, "Label '" + g + "' is already declared");
                  var y = f.isLoop ? "loop" : f === Z ? "switch" : null;
                  return x.push({
                    name: g,
                    kind: y
                  }), i.body = Ce(), x.pop(), i.label = v, de(i, "LabeledStatement");
                }
                return i.expression = v, pe(), de(i, "ExpressionStatement");
            }
          }
          function Se() {
            me(ht);
            var t = Ae();
            return me(ut), t;
          }
          function ke(t) {
            var e,
              n = ce(),
              i = !0,
              r = !1;
            for (n.body = [], me(at); !ge(ot);) {
              var s = Ce();
              n.body.push(s), i && t && _e(s) && (e = r, he(r = !0)), i = !1;
            }
            return r && !e && he(!1), de(n, "BlockStatement");
          }
          function Ie(t, e) {
            return t.init = e, me(ct), t.test = f === ct ? null : Ae(), me(ct), t.update = f === ut ? null : Ae(), me(ut), t.body = Ce(), x.pop(), de(t, "ForStatement");
          }
          function Pe(t, e) {
            return t.left = e, t.right = Ae(), me(ut), t.body = Ce(), x.pop(), de(t, "ForInStatement");
          }
          function Me(t, e) {
            for (t.declarations = [], t.kind = "var";;) {
              var n = ce();
              if (n.id = Fe(), b && Bt(n.id.name) && S(n.id.start, "Binding " + n.id.name + " in strict mode"), n.init = ge(vt) ? Ae(!0, e) : null, t.declarations.push(de(n, "VariableDeclarator")), !ge(lt)) break;
            }
            return t;
          }
          function Ae(t, e) {
            var n = Te(e);
            if (!t && f === lt) {
              var i = fe(n);
              for (i.expressions = [n]; ge(lt);) i.expressions.push(Te(e));
              return de(i, "SequenceExpression");
            }
            return n;
          }
          function Te(t) {
            var e = function (t) {
              var e = function (t) {
                return function t(e, n, i) {
                  var r = f.binop;
                  if (null != r && (!i || f !== nt) && r > n) {
                    var s = fe(e);
                    s.left = e, s.operator = d;
                    var a = f;
                    oe(), s.right = t(Oe(), r, i);
                    var o = de(s, a === wt || a === xt ? "LogicalExpression" : "BinaryExpression");
                    return t(o, n, i);
                  }
                  return e;
                }(Oe(), -1, t);
              }(t);
              if (ge(_t)) {
                var n = fe(e);
                return n.test = e, n.consequent = Ae(!0), me(ft), n.alternate = Ae(!0, t), de(n, "ConditionalExpression");
              }
              return e;
            }(t);
            if (f.isAssign) {
              var n = fe(e);
              return n.operator = d, n.left = e, oe(), n.right = Te(t), we(e), de(n, "AssignmentExpression");
            }
            return e;
          }
          function Oe() {
            if (f.prefix) {
              var t = ce(),
                e = f.isUpdate;
              return t.operator = d, t.prefix = !0, _ = !0, oe(), t.argument = Oe(), e ? we(t.argument) : b && "delete" === t.operator && "Identifier" === t.argument.type && S(t.start, "Deleting local variable in strict mode"), de(t, e ? "UpdateExpression" : "UnaryExpression");
            }
            for (var n = ze(Ee()); f.postfix && !ve();) {
              (t = fe(n)).operator = d, t.prefix = !1, t.argument = n, we(n), oe(), n = de(t, "UpdateExpression");
            }
            return n;
          }
          function ze(t, e) {
            var n;
            return ge(dt) ? ((n = fe(t)).object = t, n.property = Fe(!0), n.computed = !1, ze(de(n, "MemberExpression"), e)) : ge(rt) ? ((n = fe(t)).object = t, n.property = Ae(), n.computed = !0, me(st), ze(de(n, "MemberExpression"), e)) : !e && ge(ht) ? ((n = fe(t)).callee = t, n.arguments = Be(ut, !1), ze(de(n, "CallExpression"), e)) : t;
          }
          function Ee() {
            switch (f) {
              case Q:
                var t = ce();
                return oe(), de(t, "ThisExpression");
              case T:
                return Fe();
              case P:
              case A:
              case M:
                return (t = ce()).value = d, t.raw = n.slice(h, u), oe(), de(t, "Literal");
              case Y:
              case tt:
              case et:
                return (t = ce()).value = f.atomValue, t.raw = f.keyword, oe(), de(t, "Literal");
              case ht:
                var i = l,
                  r = h;
                oe();
                var s = Ae();
                return s.start = r, s.end = u, e.locations && (s.loc.start = i, s.loc.end = c), e.ranges && (s.range = [r, u]), me(ut), s;
              case rt:
                t = ce();
                return oe(), t.elements = Be(st, !0, !0), de(t, "ArrayExpression");
              case at:
                return function () {
                  var t = ce(),
                    n = !0,
                    i = !1;
                  t.properties = [], oe();
                  for (; !ge(ot);) {
                    if (n) n = !1;else if (me(lt), e.allowTrailingCommas && ge(ot)) break;
                    var r,
                      s = {
                        key: Le()
                      },
                      a = !1;
                    if (ge(ft) ? (s.value = Ae(!0), r = s.kind = "init") : e.ecmaVersion >= 5 && "Identifier" === s.key.type && ("get" === s.key.name || "set" === s.key.name) ? (a = i = !0, r = s.kind = s.key.name, s.key = Le(), f !== ht && ye(), s.value = Ne(ce(), !1)) : ye(), "Identifier" === s.key.type && (b || i)) for (var o = 0; o < t.properties.length; ++o) {
                      var h = t.properties[o];
                      if (h.key.name === s.key.name) {
                        var u = r == h.kind || a && "init" === h.kind || "init" === r && ("get" === h.kind || "set" === h.kind);
                        u && !b && "init" === r && "init" === h.kind && (u = !1), u && S(s.key.start, "Redefinition of property");
                      }
                    }
                    t.properties.push(s);
                  }
                  return de(t, "ObjectExpression");
                }();
              case V:
                t = ce();
                return oe(), Ne(t, !1);
              case K:
                return function () {
                  var t = ce();
                  oe(), t.callee = ze(Ee(), !0), ge(ht) ? t.arguments = Be(ut, !1) : t.arguments = I;
                  return de(t, "NewExpression");
                }();
              default:
                ye();
            }
          }
          function Le() {
            return f === P || f === A ? Ee() : Fe(!0);
          }
          function Ne(t, e) {
            f === T ? t.id = Fe() : e ? ye() : t.id = null, t.params = [];
            var n = !0;
            for (me(ht); !ge(ut);) n ? n = !1 : me(lt), t.params.push(Fe());
            var i = w,
              r = x;
            if (w = !0, x = [], t.body = ke(!0), w = i, x = r, b || t.body.body.length && _e(t.body.body[0])) for (var s = t.id ? -1 : 0; s < t.params.length; ++s) {
              var a = s < 0 ? t.id : t.params[s];
              if ((Nt(a.name) || Bt(a.name)) && S(a.start, "Defining '" + a.name + "' in strict mode"), s >= 0) for (var o = 0; o < s; ++o) a.name === t.params[o].name && S(a.start, "Argument name clash in strict mode");
            }
            return de(t, e ? "FunctionDeclaration" : "FunctionExpression");
          }
          function Be(t, n, i) {
            for (var r = [], s = !0; !ge(t);) {
              if (s) s = !1;else if (me(lt), n && e.allowTrailingCommas && ge(t)) break;
              i && f === lt ? r.push(null) : r.push(Ae(!0));
            }
            return r;
          }
          function Fe(t) {
            var i = ce();
            return t && "everywhere" == e.forbidReserved && (t = !1), f === T ? (!t && (e.forbidReserved && (3 === e.ecmaVersion ? Et : Lt)(d) || b && Nt(d)) && -1 == n.slice(h, u).indexOf("\\") && S(h, "The keyword '" + d + "' is reserved"), i.name = d) : t && f.keyword ? i.name = f.keyword : ye(), _ = !1, oe(), de(i, "Identifier");
          }
        }, "object" == i(n) && "object" == i(o) ? l(n) : "function" == typeof t && t.amd ? t(["exports"], l) : l(u.acorn || (u.acorn = {})), f.version || (f = null));
        function d(t, e) {
          return (c.acorn || f).parse(t, e);
        }
        var g = {
            "+": "__add",
            "-": "__subtract",
            "*": "__multiply",
            "/": "__divide",
            "%": "__modulo",
            "==": "__equals",
            "!=": "__equals"
          },
          p = {
            "-": "__negate",
            "+": "__self"
          },
          m = a.each(["add", "subtract", "multiply", "divide", "modulo", "equals", "negate"], function (t) {
            this["__" + t] = "#" + t;
          }, {
            __self: function __self() {
              return this;
            }
          });
        function y(t, e, n) {
          var i = g[e];
          if (t && t[i]) {
            var r = t[i](n);
            return "!=" === e ? !r : r;
          }
          switch (e) {
            case "+":
              return t + n;
            case "-":
              return t - n;
            case "*":
              return t * n;
            case "/":
              return t / n;
            case "%":
              return t % n;
            case "==":
              return t == n;
            case "!=":
              return t != n;
          }
        }
        function w(t, e) {
          var n = p[t];
          if (e && e[n]) return e[n]();
          switch (t) {
            case "+":
              return +e;
            case "-":
              return -e;
          }
        }
        function x(t, n) {
          if (!t) return "";
          var a = [];
          function o(t) {
            for (var e = 0, n = a.length; e < n; e++) {
              var i = a[e];
              if (i[0] >= t) break;
              t += i[1];
            }
            return t;
          }
          function h(e) {
            return t.substring(o(e.range[0]), o(e.range[1]));
          }
          function u(e, n) {
            for (var i = o(e.range[0]), r = o(e.range[1]), s = 0, h = a.length - 1; h >= 0; h--) if (i > a[h][0]) {
              s = h + 1;
              break;
            }
            a.splice(s, 0, [i, n.length - r + i]), t = t.substring(0, i) + n + t.substring(r);
          }
          function l(e, n) {
            switch (e.type) {
              case "UnaryExpression":
                if (e.operator in p && "Literal" !== e.argument.type) {
                  var i = h(e.argument);
                  u(e, '$__("' + e.operator + '", ' + i + ")");
                }
                break;
              case "BinaryExpression":
                if (e.operator in g && "Literal" !== e.left.type) {
                  var r = h(e.left),
                    s = h(e.right),
                    a = function (e, n) {
                      return t.substring(o(e.range[1]), o(n.range[0]));
                    }(e.left, e.right),
                    l = e.operator;
                  u(e, "__$__(" + r + "," + a.replace(new RegExp("\\" + l), '"' + l + '"') + ", " + s + ")");
                }
                break;
              case "UpdateExpression":
              case "AssignmentExpression":
                var c = n && n.type;
                if (!("ForStatement" === c || "BinaryExpression" === c && /^[=!<>]/.test(n.operator) || "MemberExpression" === c && n.computed)) if ("UpdateExpression" === e.type) {
                  var f = (i = h(e.argument)) + " = " + (d = "__$__(" + i + ', "' + e.operator[0] + '", 1)');
                  e.prefix ? f = "(" + f + ")" : "AssignmentExpression" !== c && "VariableDeclarator" !== c && "BinaryExpression" !== c || (h(n.left || n.id) === i && (f = d), f = i + "; " + f), u(e, f);
                } else if (/^.=$/.test(e.operator) && "Literal" !== e.left.type) {
                  r = h(e.left), s = h(e.right);
                  var d = r + " = __$__(" + r + ', "' + e.operator[0] + '", ' + s + ")";
                  u(e, /^\(.*\)$/.test(h(e)) ? "(" + d + ")" : d);
                }
            }
          }
          var c,
            f = (n = n || {}).url || "",
            _ = n.sourceMaps,
            v = n.paperFeatures || {},
            m = n.source || t,
            y = n.offset || 0,
            w = ht.agent,
            x = w.versionNumber,
            b = !1,
            C = /\r\n|\n|\r/gm;
          if (_ && (w.chrome && x >= 30 || w.webkit && x >= 537.76 || w.firefox && x >= 23 || w.node)) {
            if (w.node) y -= 2;else if (r && f && !r.location.href.indexOf(f)) {
              var S = s.getElementsByTagName("html")[0].innerHTML;
              y = S.substr(0, S.indexOf(t) + 1).match(C).length + 1;
            }
            var k = ["AA" + function (t) {
              var e = "";
              for (t = (Math.abs(t) << 1) + (t < 0 ? 1 : 0); t || !e;) {
                var n = 31 & t;
                (t >>= 5) && (n |= 32), e += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[n];
              }
              return e;
            }((b = y > 0 && !(w.chrome && x >= 36 || w.safari && x >= 600 || w.firefox && x >= 40 || w.node)) ? 0 : y) + "A"];
            k.length = (t.match(C) || []).length + 1 + (b ? y : 0), c = {
              version: 3,
              file: f,
              names: [],
              mappings: k.join(";AACA"),
              sourceRoot: "",
              sources: [f],
              sourcesContent: [m]
            };
          }
          return !1 === v.operatorOverloading && !1 === v.moduleExports || function t(e, n, r) {
            if (e) {
              for (var s in e) if ("range" !== s && "loc" !== s) {
                var a = e[s];
                if (Array.isArray(a)) for (var o = 0, c = a.length; o < c; o++) t(a[o], e, r);else a && "object" === i(a) && t(a, e, r);
              }
              !1 !== r.operatorOverloading && l(e, n), !1 !== r.moduleExports && function (t) {
                switch (t.type) {
                  case "ExportDefaultDeclaration":
                    u({
                      range: [t.start, t.declaration.start]
                    }, "module.exports = ");
                    break;
                  case "ExportNamedDeclaration":
                    var e = t.declaration,
                      n = t.specifiers;
                    if (e) {
                      var i = e.declarations;
                      i && (i.forEach(function (t) {
                        u(t, "module.exports." + h(t));
                      }), u({
                        range: [t.start, e.start + e.kind.length]
                      }, ""));
                    } else if (n) {
                      var r = n.map(function (t) {
                        var e = h(t);
                        return "module.exports." + e + " = " + e + "; ";
                      }).join("");
                      r && u(t, r);
                    }
                }
              }(e);
            }
          }(d(t, {
            ranges: !0,
            preserveParens: !0,
            sourceType: "module"
          }), null, v), c && (b && (t = new Array(y + 1).join("\n") + t), /^(inline|both)$/.test(_) && (t += "\n//# sourceMappingURL=data:application/json;base64," + e.btoa(unescape(encodeURIComponent(JSON.stringify(c))))), t += "\n//# sourceURL=" + (f || "paperscript")), {
            url: f,
            source: m,
            code: t,
            map: c
          };
        }
        function b(t, e, n) {
          ht = e;
          var r,
            o = e.getView(),
            h = /\btool\.\w+|\s+on(?:Key|Mouse)(?:Up|Down|Move|Drag)\b/.test(t) && !/\bnew\s+Tool\b/.test(t) ? new et() : null,
            u = h ? h._events : [],
            l = ["onFrame", "onResize"].concat(u),
            c = [],
            f = [],
            d = "object" === i(t) ? t : x(t, n);
          function g(e, n) {
            for (var i in e) !n && /^_/.test(i) || !new RegExp("([\\b\\s\\W]|^)" + i.replace(/\$/g, "\\$") + "\\b").test(t) || (c.push(i), f.push(e[i]));
          }
          t = d.code, g({
            __$__: y,
            $__: w,
            paper: e,
            tool: h
          }, !0), g(e), t = "var module = { exports: {} }; " + t, (b = a.each(l, function (e) {
            new RegExp("\\s+" + e + "\\b").test(t) && (c.push(e), this.push("module.exports." + e + " = " + e + ";"));
          }, []).join("\n")) && (t += "\n" + b), t += "\nreturn module.exports;";
          var v = ht.agent;
          if (s && (v.chrome || v.firefox && v.versionNumber < 40)) {
            var p = s.createElement("script"),
              m = s.head || s.getElementsByTagName("head")[0];
            v.firefox && (t = "\n" + t), p.appendChild(s.createTextNode("document.__paperscript__ = function(" + c + ") {" + t + "\n}")), m.appendChild(p), r = s.__paperscript__, delete s.__paperscript__, m.removeChild(p);
          } else r = Function(c, t);
          var b,
            C = (b = r && r.apply(e, f)) || {};
          return a.each(u, function (t) {
            var e = C[t];
            e && (h[t] = e);
          }), o && (C.onResize && o.setOnResize(C.onResize), o.emit("resize", {
            size: o.size,
            delta: new _()
          }), C.onFrame && o.setOnFrame(C.onFrame), o.requestUpdate()), b;
        }
        function C(t) {
          if (/^text\/(?:x-|)paperscript$/.test(t.type) && "true" !== h.getAttribute(t, "ignore")) {
            var e = h.getAttribute(t, "canvas"),
              n = s.getElementById(e),
              i = t.src || t.getAttribute("data-src"),
              r = h.hasAttribute(t, "async");
            if (!n) throw new Error('Unable to find canvas with id "' + e + '"');
            var a = h.get(n.getAttribute("data-paper-scope")) || new h().setup(n);
            return n.setAttribute("data-paper-scope", a._id), i ? it.request({
              url: i,
              async: r,
              mimeType: "text/plain",
              onLoad: function onLoad(t) {
                b(t, a, i);
              }
            }) : b(t.innerHTML, a, t.baseURI), t.setAttribute("data-paper-ignore", "true"), a;
          }
        }
        function S() {
          a.each(s && s.getElementsByTagName("script"), C);
        }
        return _.inject(m), v.inject(m), V.inject(m), r && ("complete" === s.readyState ? setTimeout(S) : $.add(r, {
          load: S
        })), {
          compile: x,
          execute: b,
          load: function load(t) {
            return t ? C(t) : S();
          },
          parse: d,
          calculateBinary: y,
          calculateUnary: w
        };
      }.call(this);
      var ht = new (h.inject(a.exports, {
        Base: a,
        Numerical: f,
        Key: Q,
        DomEvent: $,
        DomElement: W,
        document: s,
        window: r,
        Symbol: A,
        PlacedSymbol: M
      }))();
      return ht.agent.node && require("./node/extend.js")(ht), "function" == typeof t && t.amd ? t("paper", ht) : "object" === ("undefined" == typeof module ? "undefined" : i(module)) && module && (module.exports = ht), ht;
    }.call(this, "object" === ("undefined" == typeof self ? "undefined" : i(self)) ? self : null);
  }, {
    "./node/self.js": "cLff",
    "acorn": "wxgJ",
    "./node/extend.js": "cLff",
    "process": "FT5O"
  }],
  "LKvk": [function (require, module, exports) {
    !function (r) {
      function t(r, n) {
        if (!(r = e(r))) return null;
        var o,
          a,
          f,
          u = 1 / 0;
        n || (n = t.DEFAULT_COLORS);
        for (var c = 0; c < n.length; ++c) a = n[c].rgb, (o = Math.pow(r.r - a.r, 2) + Math.pow(r.g - a.g, 2) + Math.pow(r.b - a.b, 2)) < u && (u = o, f = n[c]);
        return f.name ? {
          name: f.name,
          value: f.source,
          rgb: f.rgb,
          distance: Math.sqrt(u)
        } : f.source;
      }
      function n(r) {
        return r instanceof Array ? r.map(function (r) {
          return o(r);
        }) : Object.keys(r).map(function (t) {
          return o(r[t], t);
        });
      }
      function e(r) {
        if ("object" == _typeof(r)) return r;
        if (r in t.STANDARD_COLORS) return e(t.STANDARD_COLORS[r]);
        var n = r.match(/^#?((?:[0-9a-f]{3}){1,2})$/i);
        if (n) return n = 3 === (n = n[1]).length ? [n.charAt(0) + n.charAt(0), n.charAt(1) + n.charAt(1), n.charAt(2) + n.charAt(2)] : [n.substring(0, 2), n.substring(2, 4), n.substring(4, 6)], {
          r: parseInt(n[0], 16),
          g: parseInt(n[1], 16),
          b: parseInt(n[2], 16)
        };
        var o = r.match(/^rgb\(\s*(\d{1,3}%?),\s*(\d{1,3}%?),\s*(\d{1,3}%?)\s*\)$/i);
        if (o) return {
          r: a(o[1]),
          g: a(o[2]),
          b: a(o[3])
        };
        throw Error('"' + r + '" is not a valid color');
      }
      function o(r, t) {
        var n,
          a = {};
        if (t && (a.name = t), "string" == typeof r) a.source = r, a.rgb = e(r);else if ("object" == _typeof(r)) {
          if (r.source) return o(r.source, r.name);
          a.rgb = r, a.source = "#" + f((n = r).r.toString(16)) + f(n.g.toString(16)) + f(n.b.toString(16));
        }
        return a;
      }
      function a(r) {
        return "%" === r.charAt(r.length - 1) ? Math.round(255 * parseInt(r, 10) / 100) : Number(r);
      }
      function f(r) {
        return 1 === r.length && (r = "0" + r), r;
      }
      t.from = function r(e) {
        var o = n(e),
          a = t,
          f = function f(r) {
            return a(r, o);
          };
        return f.from = r, f.or = function (r) {
          var e = o.concat(n(r));
          return t.from(e);
        }, f;
      }, t.STANDARD_COLORS = {
        aqua: "#0ff",
        black: "#000",
        blue: "#00f",
        fuchsia: "#f0f",
        gray: "#808080",
        green: "#008000",
        lime: "#0f0",
        maroon: "#800000",
        navy: "#000080",
        olive: "#808000",
        orange: "#ffa500",
        purple: "#800080",
        red: "#f00",
        silver: "#c0c0c0",
        teal: "#008080",
        white: "#fff",
        yellow: "#ff0"
      }, t.DEFAULT_COLORS = n(["#f00", "#f80", "#ff0", "#0f0", "#00f", "#008", "#808"]), t.VERSION = "0.4.4", "object" == _typeof(module) && module && module.exports ? module.exports = t : r.nearestColor = t;
    }(this);
  }, {}],
  "hSxs": [function (require, module, exports) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: !0
    }), exports.PixelCell = void 0;
    var e = t(require("paper"));
    function t(e) {
      return e && e.__esModule ? e : {
        default: e
      };
    }
    function r(e, t) {
      if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
    }
    function o(e, t) {
      for (var r = 0; r < t.length; r++) {
        var o = t[r];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
      }
    }
    function n(e, t, r) {
      return t && o(e.prototype, t), r && o(e, r), e;
    }
    var i = new e.default.Color("#646464"),
      l = new e.default.Color("#ff2020"),
      u = 3,
      c = function () {
        function t(o) {
          var n = o.pixelAt,
            l = o.pivot,
            u = o.size;
          r(this, t), this.rect = new e.default.Path.Rectangle({
            point: n.multiply(u),
            size: [u, u],
            strokeColor: i
          }), this.rect.pivot = l;
        }
        return n(t, [{
          key: "setColor",
          value: function value(e) {
            this.rect.fillColor = e;
          }
        }, {
          key: "highlight",
          value: function value() {
            this.rect.bringToFront(), this.rect.strokeColor = l, this.rect.strokeWidth = u;
          }
        }, {
          key: "raw",
          get: function get() {
            return this.rect;
          }
        }, {
          key: "position",
          get: function get() {
            return this.rect.position;
          }
        }, {
          key: "color",
          get: function get() {
            return this.rect.fillColor.toCSS(!0);
          }
        }], [{
          key: "create",
          value: function value(e) {
            return new t(e);
          }
        }]), t;
      }();
    exports.PixelCell = c;
  }, {
    "paper": "GYcQ"
  }],
  "XcBK": [function (require, module, exports) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: !0
    }), exports.createCursor = c, exports.createCircleMask = h;
    var e = r(require("paper"));
    function r(e) {
      return e && e.__esModule ? e : {
        default: e
      };
    }
    function t(e) {
      return a(e) || n(e) || o();
    }
    function o() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    }
    function n(e) {
      if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) return Array.from(e);
    }
    function a(e) {
      if (Array.isArray(e)) {
        for (var r = 0, t = new Array(e.length); r < e.length; r++) t[r] = e[r];
        return t;
      }
    }
    var i = 14,
      u = 18,
      l = 14,
      d = 3,
      s = new e.default.Color("#777777"),
      f = 5;
    function c() {
      return new e.default.Group([new e.default.Path.Circle({
        center: new e.default.Point(u, u),
        radius: i,
        strokeWidth: 1.2 * f,
        strokeColor: s
      }), new e.default.Path.Line({
        from: [u, u - i],
        to: [u, u - i - l],
        strokeWidth: d,
        strokeColor: s
      }), new e.default.Path.Line({
        from: [u, u + i],
        to: [u, u + i + l],
        strokeWidth: d,
        strokeColor: s
      }), new e.default.Path.Line({
        from: [u - i, u],
        to: [u - i - l, u],
        strokeWidth: d,
        strokeColor: s
      }), new e.default.Path.Line({
        from: [u + i, u],
        to: [u + i + l, u],
        strokeWidth: d,
        strokeColor: s
      })]);
    }
    function h(r) {
      var o = r.radius,
        n = r.children,
        a = new e.default.Shape.Circle({
          center: [o, o],
          radius: o
        }),
        i = new e.default.Shape.Circle({
          center: [o, o],
          radius: o,
          strokeColor: s,
          strokeWidth: f
        }),
        u = new e.default.Group([a].concat(t(n), [i]));
      return u.clipped = !0, u;
    }
  }, {
    "paper": "GYcQ"
  }],
  "N6d1": [function (require, module, exports) {
    "use strict";

    function e(e) {
      var t = document.createElement("textarea");
      t.innerHTML = e, document.body.appendChild(t), t.select();
      var o = document.execCommand("copy");
      return document.body.removeChild(t), o;
    }
    Object.defineProperty(exports, "__esModule", {
      value: !0
    }), exports.copy = e;
  }, {}],
  "kPyX": [function (require, module, exports) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: !0
    }), exports.Inspector = void 0;
    var e = o(require("nearest-color")),
      f = c(require("paper")),
      t = require("./pixel-cell"),
      a = require("./primitive-factory"),
      r = require("./utils");
    function c(e) {
      return e && e.__esModule ? e : {
        default: e
      };
    }
    function i() {
      if ("function" != typeof WeakMap) return null;
      var e = new WeakMap();
      return i = function i() {
        return e;
      }, e;
    }
    function o(e) {
      if (e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return {
        default: e
      };
      var f = i();
      if (f && f.has(e)) return f.get(e);
      var t = {},
        a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var r in e) if (Object.prototype.hasOwnProperty.call(e, r)) {
        var c = a ? Object.getOwnPropertyDescriptor(e, r) : null;
        c && (c.get || c.set) ? Object.defineProperty(t, r, c) : t[r] = e[r];
      }
      return t.default = e, f && f.set(e, t), t;
    }
    function n(e, f) {
      if (!(e instanceof f)) throw new TypeError("Cannot call a class as a function");
    }
    function d(e, f) {
      for (var t = 0; t < f.length; t++) {
        var a = f[t];
        a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a);
      }
    }
    function l(e, f, t) {
      return f && d(e.prototype, f), t && d(e, t), e;
    }
    var u = 11,
      s = 30,
      b = {
        black: "#000",
        white: "#fff",
        slate: {
          50: "#f8fafc",
          100: "#f1f5f9",
          200: "#e2e8f0",
          300: "#cbd5e1",
          400: "#94a3b8",
          500: "#64748b",
          600: "#475569",
          700: "#334155",
          800: "#1e293b",
          900: "#0f172a"
        },
        gray: {
          50: "#f9fafb",
          100: "#f3f4f6",
          200: "#e5e7eb",
          300: "#d1d5db",
          400: "#9ca3af",
          500: "#6b7280",
          600: "#4b5563",
          700: "#374151",
          800: "#1f2937",
          900: "#111827"
        },
        zinc: {
          50: "#fafafa",
          100: "#f4f4f5",
          200: "#e4e4e7",
          300: "#d4d4d8",
          400: "#a1a1aa",
          500: "#71717a",
          600: "#52525b",
          700: "#3f3f46",
          800: "#27272a",
          900: "#18181b"
        },
        neutral: {
          50: "#fafafa",
          100: "#f5f5f5",
          200: "#e5e5e5",
          300: "#d4d4d4",
          400: "#a3a3a3",
          500: "#737373",
          600: "#525252",
          700: "#404040",
          800: "#262626",
          900: "#171717"
        },
        stone: {
          50: "#fafaf9",
          100: "#f5f5f4",
          200: "#e7e5e4",
          300: "#d6d3d1",
          400: "#a8a29e",
          500: "#78716c",
          600: "#57534e",
          700: "#44403c",
          800: "#292524",
          900: "#1c1917"
        },
        red: {
          50: "#fef2f2",
          100: "#fee2e2",
          200: "#fecaca",
          300: "#fca5a5",
          400: "#f87171",
          500: "#ef4444",
          600: "#dc2626",
          700: "#b91c1c",
          800: "#991b1b",
          900: "#7f1d1d"
        },
        orange: {
          50: "#fff7ed",
          100: "#ffedd5",
          200: "#fed7aa",
          300: "#fdba74",
          400: "#fb923c",
          500: "#f97316",
          600: "#ea580c",
          700: "#c2410c",
          800: "#9a3412",
          900: "#7c2d12"
        },
        amber: {
          50: "#fffbeb",
          100: "#fef3c7",
          200: "#fde68a",
          300: "#fcd34d",
          400: "#fbbf24",
          500: "#f59e0b",
          600: "#d97706",
          700: "#b45309",
          800: "#92400e",
          900: "#78350f"
        },
        yellow: {
          50: "#fefce8",
          100: "#fef9c3",
          200: "#fef08a",
          300: "#fde047",
          400: "#facc15",
          500: "#eab308",
          600: "#ca8a04",
          700: "#a16207",
          800: "#854d0e",
          900: "#713f12"
        },
        lime: {
          50: "#f7fee7",
          100: "#ecfccb",
          200: "#d9f99d",
          300: "#bef264",
          400: "#a3e635",
          500: "#84cc16",
          600: "#65a30d",
          700: "#4d7c0f",
          800: "#3f6212",
          900: "#365314"
        },
        green: {
          50: "#f0fdf4",
          100: "#dcfce7",
          200: "#bbf7d0",
          300: "#86efac",
          400: "#4ade80",
          500: "#22c55e",
          600: "#16a34a",
          700: "#15803d",
          800: "#166534",
          900: "#14532d"
        },
        emerald: {
          50: "#ecfdf5",
          100: "#d1fae5",
          200: "#a7f3d0",
          300: "#6ee7b7",
          400: "#34d399",
          500: "#10b981",
          600: "#059669",
          700: "#047857",
          800: "#065f46",
          900: "#064e3b"
        },
        teal: {
          50: "#f0fdfa",
          100: "#ccfbf1",
          200: "#99f6e4",
          300: "#5eead4",
          400: "#2dd4bf",
          500: "#14b8a6",
          600: "#0d9488",
          700: "#0f766e",
          800: "#115e59",
          900: "#134e4a"
        },
        cyan: {
          50: "#ecfeff",
          100: "#cffafe",
          200: "#a5f3fc",
          300: "#67e8f9",
          400: "#22d3ee",
          500: "#06b6d4",
          600: "#0891b2",
          700: "#0e7490",
          800: "#155e75",
          900: "#164e63"
        },
        sky: {
          50: "#f0f9ff",
          100: "#e0f2fe",
          200: "#bae6fd",
          300: "#7dd3fc",
          400: "#38bdf8",
          500: "#0ea5e9",
          600: "#0284c7",
          700: "#0369a1",
          800: "#075985",
          900: "#0c4a6e"
        },
        blue: {
          50: "#eff6ff",
          100: "#dbeafe",
          200: "#bfdbfe",
          300: "#93c5fd",
          400: "#60a5fa",
          500: "#3b82f6",
          600: "#2563eb",
          700: "#1d4ed8",
          800: "#1e40af",
          900: "#1e3a8a"
        },
        indigo: {
          50: "#eef2ff",
          100: "#e0e7ff",
          200: "#c7d2fe",
          300: "#a5b4fc",
          400: "#818cf8",
          500: "#6366f1",
          600: "#4f46e5",
          700: "#4338ca",
          800: "#3730a3",
          900: "#312e81"
        },
        violet: {
          50: "#f5f3ff",
          100: "#ede9fe",
          200: "#ddd6fe",
          300: "#c4b5fd",
          400: "#a78bfa",
          500: "#8b5cf6",
          600: "#7c3aed",
          700: "#6d28d9",
          800: "#5b21b6",
          900: "#4c1d95"
        },
        purple: {
          50: "#faf5ff",
          100: "#f3e8ff",
          200: "#e9d5ff",
          300: "#d8b4fe",
          400: "#c084fc",
          500: "#a855f7",
          600: "#9333ea",
          700: "#7e22ce",
          800: "#6b21a8",
          900: "#581c87"
        },
        fuchsia: {
          50: "#fdf4ff",
          100: "#fae8ff",
          200: "#f5d0fe",
          300: "#f0abfc",
          400: "#e879f9",
          500: "#d946ef",
          600: "#c026d3",
          700: "#a21caf",
          800: "#86198f",
          900: "#701a75"
        },
        pink: {
          50: "#fdf2f8",
          100: "#fce7f3",
          200: "#fbcfe8",
          300: "#f9a8d4",
          400: "#f472b6",
          500: "#ec4899",
          600: "#db2777",
          700: "#be185d",
          800: "#9d174d",
          900: "#831843"
        },
        rose: {
          50: "#fff1f2",
          100: "#ffe4e6",
          200: "#fecdd3",
          300: "#fda4af",
          400: "#fb7185",
          500: "#f43f5e",
          600: "#e11d48",
          700: "#be123c",
          800: "#9f1239",
          900: "#881337"
        }
      },
      p = {};
    for (var h in b) if ("string" == typeof b[h]) p[h] = b[h];else for (var v in b[h]) p["".concat(h, "-").concat(v)] = b[h][v];
    var y = function () {
      function c(e) {
        n(this, c), this.project = e, this.onCopy = function (e) {}, this.cells = [], this.initUI(), this.trackMouse(), this.handleColorCopy();
      }
      return l(c, [{
        key: "loadImage",
        value: function value(e) {
          var t = this;
          this.project.view.viewSize = new f.default.Size(e.width, e.height);
          var a = function a() {
            var a = new f.default.Raster(e);
            a.position = new f.default.Point(e.width / 2, e.height / 2), a.width = e.width, a.height = e.height, a.visible = !1, t.raster = a, t.moveTo(t.group.position);
          };
          e.complete ? a() : e.addEventListener("load", a);
        }
      }, {
        key: "moveTo",
        value: function value(e) {
          var f = this;
          this.group.position = e, this.raster && this.cells.forEach(function (e) {
            e.setColor(f.raster.getPixel(e.position));
          });
        }
      }, {
        key: "initUI",
        value: function value() {
          for (var e = (0, a.createCursor)(), r = e.position.subtract((u - 1) / 2), c = 0; c < u; c++) for (var i = 0; i < u; i++) this.cells.push(t.PixelCell.create({
            pixelAt: new f.default.Point(c, i),
            pivot: new f.default.Point(c, i).add(r),
            size: s
          }));
          var o = (0, a.createCircleMask)({
            radius: u * s / 2,
            children: this.cells.map(function (e) {
              return e.raw;
            })
          });
          this.targetCell.highlight(), this.group = new f.default.Group([o, e]), this.group.pivot = new f.default.Point(0, 0);
        }
      }, {
        key: "trackMouse",
        value: function value() {
          var e = this;
          this.project.view.on("mousemove", function (f) {
            var t = f.point;
            e.moveTo(t);
          }), document.body.addEventListener("mouseenter", function (t) {
            var a = t.clientX,
              r = t.clientY;
            e.moveTo(new f.default.Point(a, r));
          });
        }
      }, {
        key: "handleColorCopy",
        value: function value() {
          var f = this;
          this.project.view.on("click", function () {
            var t = f.targetCell.color,
              a = e.from(p)(t);
            (0, r.copy)(a.name), f.onCopy(t);
          });
        }
      }, {
        key: "targetCell",
        get: function get() {
          return this.cells[(this.cells.length - 1) / 2];
        }
      }]), c;
    }();
    exports.Inspector = y;
  }, {
    "nearest-color": "LKvk",
    "paper": "GYcQ",
    "./pixel-cell": "hSxs",
    "./primitive-factory": "XcBK",
    "./utils": "N6d1"
  }],
  "QCba": [function (require, module, exports) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    var e = {
      inspectorFactory: !0
    };
    exports.inspectorFactory = void 0;
    var r = o(require("paper")),
      t = require("./lib/inspector");
    function o(e) {
      return e && e.__esModule ? e : {
        default: e
      };
    }
    Object.keys(t).forEach(function (r) {
      "default" !== r && "__esModule" !== r && (Object.prototype.hasOwnProperty.call(e, r) || Object.defineProperty(exports, r, {
        enumerable: !0,
        get: function get() {
          return t[r];
        }
      }));
    });
    var n = function n(e) {
      var o = new r.default.Project(e),
        n = new t.Inspector(o);
      return e.style.cursor = "none", n;
    };
    exports.inspectorFactory = n;
  }, {
    "paper": "GYcQ",
    "./lib/inspector": "kPyX"
  }]
}, {}, ["QCba"], null);
},{}],"../node_modules/regenerator-runtime/runtime.js":[function(require,module,exports) {
var define;
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; };
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) });

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = GeneratorFunctionPrototype;
  defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: true });
  defineProperty(
    GeneratorFunctionPrototype,
    "constructor",
    { value: GeneratorFunction, configurable: true }
  );
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    defineProperty(this, "_invoke", { value: enqueue });
  }

  defineIteratorMethods(AsyncIterator.prototype);
  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  });
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var methodName = context.method;
    var method = delegate.iterator[methodName];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method, or a missing .next mehtod, always terminate the
      // yield* loop.
      context.delegate = null;

      // Note: ["return"] must be used for ES3 parsing compatibility.
      if (methodName === "throw" && delegate.iterator["return"]) {
        // If the delegate iterator has a return method, give it a
        // chance to clean up.
        context.method = "return";
        context.arg = undefined;
        maybeInvokeDelegate(delegate, context);

        if (context.method === "throw") {
          // If maybeInvokeDelegate(context) changed context.method from
          // "return" to "throw", let that override the TypeError below.
          return ContinueSentinel;
        }
      }
      if (methodName !== "return") {
        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a '" + methodName + "' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  define(Gp, iteratorSymbol, function() {
    return this;
  });

  define(Gp, "toString", function() {
    return "[object Generator]";
  });

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(val) {
    var object = Object(val);
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
  typeof module === "object" ? module.exports : {}
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, in modern engines
  // we can explicitly access globalThis. In older engines we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  if (typeof globalThis === "object") {
    globalThis.regeneratorRuntime = runtime;
  } else {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
}

},{}],"../node_modules/inversify/lib/constants/metadata_keys.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NON_CUSTOM_TAG_KEYS = exports.POST_CONSTRUCT = exports.DESIGN_PARAM_TYPES = exports.PARAM_TYPES = exports.TAGGED_PROP = exports.TAGGED = exports.MULTI_INJECT_TAG = exports.INJECT_TAG = exports.OPTIONAL_TAG = exports.UNMANAGED_TAG = exports.NAME_TAG = exports.NAMED_TAG = void 0;
exports.NAMED_TAG = "named";
exports.NAME_TAG = "name";
exports.UNMANAGED_TAG = "unmanaged";
exports.OPTIONAL_TAG = "optional";
exports.INJECT_TAG = "inject";
exports.MULTI_INJECT_TAG = "multi_inject";
exports.TAGGED = "inversify:tagged";
exports.TAGGED_PROP = "inversify:tagged_props";
exports.PARAM_TYPES = "inversify:paramtypes";
exports.DESIGN_PARAM_TYPES = "design:paramtypes";
exports.POST_CONSTRUCT = "post_construct";
function getNonCustomTagKeys() {
    return [
        exports.INJECT_TAG,
        exports.MULTI_INJECT_TAG,
        exports.NAME_TAG,
        exports.UNMANAGED_TAG,
        exports.NAMED_TAG,
        exports.OPTIONAL_TAG,
    ];
}
exports.NON_CUSTOM_TAG_KEYS = getNonCustomTagKeys();
//# sourceMappingURL=metadata_keys.js.map
},{}],"../node_modules/inversify/lib/constants/literal_types.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TargetTypeEnum = exports.BindingTypeEnum = exports.BindingScopeEnum = void 0;
var BindingScopeEnum = {
    Request: "Request",
    Singleton: "Singleton",
    Transient: "Transient"
};
exports.BindingScopeEnum = BindingScopeEnum;
var BindingTypeEnum = {
    ConstantValue: "ConstantValue",
    Constructor: "Constructor",
    DynamicValue: "DynamicValue",
    Factory: "Factory",
    Function: "Function",
    Instance: "Instance",
    Invalid: "Invalid",
    Provider: "Provider"
};
exports.BindingTypeEnum = BindingTypeEnum;
var TargetTypeEnum = {
    ClassProperty: "ClassProperty",
    ConstructorArgument: "ConstructorArgument",
    Variable: "Variable"
};
exports.TargetTypeEnum = TargetTypeEnum;
//# sourceMappingURL=literal_types.js.map
},{}],"../node_modules/inversify/lib/utils/id.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.id = void 0;
var idCounter = 0;
function id() {
    return idCounter++;
}
exports.id = id;
//# sourceMappingURL=id.js.map
},{}],"../node_modules/inversify/lib/bindings/binding.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Binding = void 0;
var literal_types_1 = require("../constants/literal_types");
var id_1 = require("../utils/id");
var Binding = (function () {
    function Binding(serviceIdentifier, scope) {
        this.id = id_1.id();
        this.activated = false;
        this.serviceIdentifier = serviceIdentifier;
        this.scope = scope;
        this.type = literal_types_1.BindingTypeEnum.Invalid;
        this.constraint = function (request) { return true; };
        this.implementationType = null;
        this.cache = null;
        this.factory = null;
        this.provider = null;
        this.onActivation = null;
        this.dynamicValue = null;
    }
    Binding.prototype.clone = function () {
        var clone = new Binding(this.serviceIdentifier, this.scope);
        clone.activated = (clone.scope === literal_types_1.BindingScopeEnum.Singleton) ? this.activated : false;
        clone.implementationType = this.implementationType;
        clone.dynamicValue = this.dynamicValue;
        clone.scope = this.scope;
        clone.type = this.type;
        clone.factory = this.factory;
        clone.provider = this.provider;
        clone.constraint = this.constraint;
        clone.onActivation = this.onActivation;
        clone.cache = this.cache;
        return clone;
    };
    return Binding;
}());
exports.Binding = Binding;
//# sourceMappingURL=binding.js.map
},{"../constants/literal_types":"../node_modules/inversify/lib/constants/literal_types.js","../utils/id":"../node_modules/inversify/lib/utils/id.js"}],"../node_modules/inversify/lib/constants/error_msgs.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.STACK_OVERFLOW = exports.CIRCULAR_DEPENDENCY_IN_FACTORY = exports.POST_CONSTRUCT_ERROR = exports.MULTIPLE_POST_CONSTRUCT_METHODS = exports.CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK = exports.CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE = exports.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE = exports.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT = exports.ARGUMENTS_LENGTH_MISMATCH = exports.INVALID_DECORATOR_OPERATION = exports.INVALID_TO_SELF_VALUE = exports.INVALID_FUNCTION_BINDING = exports.INVALID_MIDDLEWARE_RETURN = exports.NO_MORE_SNAPSHOTS_AVAILABLE = exports.INVALID_BINDING_TYPE = exports.NOT_IMPLEMENTED = exports.CIRCULAR_DEPENDENCY = exports.UNDEFINED_INJECT_ANNOTATION = exports.MISSING_INJECT_ANNOTATION = exports.MISSING_INJECTABLE_ANNOTATION = exports.NOT_REGISTERED = exports.CANNOT_UNBIND = exports.AMBIGUOUS_MATCH = exports.KEY_NOT_FOUND = exports.NULL_ARGUMENT = exports.DUPLICATED_METADATA = exports.DUPLICATED_INJECTABLE_DECORATOR = void 0;
exports.DUPLICATED_INJECTABLE_DECORATOR = "Cannot apply @injectable decorator multiple times.";
exports.DUPLICATED_METADATA = "Metadata key was used more than once in a parameter:";
exports.NULL_ARGUMENT = "NULL argument";
exports.KEY_NOT_FOUND = "Key Not Found";
exports.AMBIGUOUS_MATCH = "Ambiguous match found for serviceIdentifier:";
exports.CANNOT_UNBIND = "Could not unbind serviceIdentifier:";
exports.NOT_REGISTERED = "No matching bindings found for serviceIdentifier:";
exports.MISSING_INJECTABLE_ANNOTATION = "Missing required @injectable annotation in:";
exports.MISSING_INJECT_ANNOTATION = "Missing required @inject or @multiInject annotation in:";
var UNDEFINED_INJECT_ANNOTATION = function (name) {
    return "@inject called with undefined this could mean that the class " + name + " has " +
        "a circular dependency problem. You can use a LazyServiceIdentifer to  " +
        "overcome this limitation.";
};
exports.UNDEFINED_INJECT_ANNOTATION = UNDEFINED_INJECT_ANNOTATION;
exports.CIRCULAR_DEPENDENCY = "Circular dependency found:";
exports.NOT_IMPLEMENTED = "Sorry, this feature is not fully implemented yet.";
exports.INVALID_BINDING_TYPE = "Invalid binding type:";
exports.NO_MORE_SNAPSHOTS_AVAILABLE = "No snapshot available to restore.";
exports.INVALID_MIDDLEWARE_RETURN = "Invalid return type in middleware. Middleware must return!";
exports.INVALID_FUNCTION_BINDING = "Value provided to function binding must be a function!";
exports.INVALID_TO_SELF_VALUE = "The toSelf function can only be applied when a constructor is " +
    "used as service identifier";
exports.INVALID_DECORATOR_OPERATION = "The @inject @multiInject @tagged and @named decorators " +
    "must be applied to the parameters of a class constructor or a class property.";
var ARGUMENTS_LENGTH_MISMATCH = function () {
    var values = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        values[_i] = arguments[_i];
    }
    return "The number of constructor arguments in the derived class " +
        (values[0] + " must be >= than the number of constructor arguments of its base class.");
};
exports.ARGUMENTS_LENGTH_MISMATCH = ARGUMENTS_LENGTH_MISMATCH;
exports.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT = "Invalid Container constructor argument. Container options " +
    "must be an object.";
exports.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE = "Invalid Container option. Default scope must " +
    "be a string ('singleton' or 'transient').";
exports.CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE = "Invalid Container option. Auto bind injectable must " +
    "be a boolean";
exports.CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK = "Invalid Container option. Skip base check must " +
    "be a boolean";
exports.MULTIPLE_POST_CONSTRUCT_METHODS = "Cannot apply @postConstruct decorator multiple times in the same class";
var POST_CONSTRUCT_ERROR = function () {
    var values = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        values[_i] = arguments[_i];
    }
    return "@postConstruct error in class " + values[0] + ": " + values[1];
};
exports.POST_CONSTRUCT_ERROR = POST_CONSTRUCT_ERROR;
var CIRCULAR_DEPENDENCY_IN_FACTORY = function () {
    var values = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        values[_i] = arguments[_i];
    }
    return "It looks like there is a circular dependency " +
        ("in one of the '" + values[0] + "' bindings. Please investigate bindings with") +
        ("service identifier '" + values[1] + "'.");
};
exports.CIRCULAR_DEPENDENCY_IN_FACTORY = CIRCULAR_DEPENDENCY_IN_FACTORY;
exports.STACK_OVERFLOW = "Maximum call stack size exceeded";
//# sourceMappingURL=error_msgs.js.map
},{}],"../node_modules/inversify/lib/planning/metadata_reader.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MetadataReader = void 0;
var METADATA_KEY = require("../constants/metadata_keys");
var MetadataReader = (function () {
    function MetadataReader() {
    }
    MetadataReader.prototype.getConstructorMetadata = function (constructorFunc) {
        var compilerGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.PARAM_TYPES, constructorFunc);
        var userGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.TAGGED, constructorFunc);
        return {
            compilerGeneratedMetadata: compilerGeneratedMetadata,
            userGeneratedMetadata: userGeneratedMetadata || {}
        };
    };
    MetadataReader.prototype.getPropertiesMetadata = function (constructorFunc) {
        var userGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.TAGGED_PROP, constructorFunc) || [];
        return userGeneratedMetadata;
    };
    return MetadataReader;
}());
exports.MetadataReader = MetadataReader;
//# sourceMappingURL=metadata_reader.js.map
},{"../constants/metadata_keys":"../node_modules/inversify/lib/constants/metadata_keys.js"}],"../node_modules/inversify/lib/bindings/binding_count.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BindingCount = void 0;
var BindingCount = {
    MultipleBindingsAvailable: 2,
    NoBindingsAvailable: 0,
    OnlyOneBindingAvailable: 1
};
exports.BindingCount = BindingCount;
//# sourceMappingURL=binding_count.js.map
},{}],"../node_modules/inversify/lib/utils/exceptions.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isStackOverflowExeption = void 0;
var ERROR_MSGS = require("../constants/error_msgs");
function isStackOverflowExeption(error) {
    return (error instanceof RangeError ||
        error.message === ERROR_MSGS.STACK_OVERFLOW);
}
exports.isStackOverflowExeption = isStackOverflowExeption;
//# sourceMappingURL=exceptions.js.map
},{"../constants/error_msgs":"../node_modules/inversify/lib/constants/error_msgs.js"}],"../node_modules/inversify/lib/utils/serialization.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.circularDependencyToException = exports.listMetadataForTarget = exports.listRegisteredBindingsForServiceIdentifier = exports.getServiceIdentifierAsString = exports.getFunctionName = void 0;
var ERROR_MSGS = require("../constants/error_msgs");
function getServiceIdentifierAsString(serviceIdentifier) {
    if (typeof serviceIdentifier === "function") {
        var _serviceIdentifier = serviceIdentifier;
        return _serviceIdentifier.name;
    }
    else if (typeof serviceIdentifier === "symbol") {
        return serviceIdentifier.toString();
    }
    else {
        var _serviceIdentifier = serviceIdentifier;
        return _serviceIdentifier;
    }
}
exports.getServiceIdentifierAsString = getServiceIdentifierAsString;
function listRegisteredBindingsForServiceIdentifier(container, serviceIdentifier, getBindings) {
    var registeredBindingsList = "";
    var registeredBindings = getBindings(container, serviceIdentifier);
    if (registeredBindings.length !== 0) {
        registeredBindingsList = "\nRegistered bindings:";
        registeredBindings.forEach(function (binding) {
            var name = "Object";
            if (binding.implementationType !== null) {
                name = getFunctionName(binding.implementationType);
            }
            registeredBindingsList = registeredBindingsList + "\n " + name;
            if (binding.constraint.metaData) {
                registeredBindingsList = registeredBindingsList + " - " + binding.constraint.metaData;
            }
        });
    }
    return registeredBindingsList;
}
exports.listRegisteredBindingsForServiceIdentifier = listRegisteredBindingsForServiceIdentifier;
function alreadyDependencyChain(request, serviceIdentifier) {
    if (request.parentRequest === null) {
        return false;
    }
    else if (request.parentRequest.serviceIdentifier === serviceIdentifier) {
        return true;
    }
    else {
        return alreadyDependencyChain(request.parentRequest, serviceIdentifier);
    }
}
function dependencyChainToString(request) {
    function _createStringArr(req, result) {
        if (result === void 0) { result = []; }
        var serviceIdentifier = getServiceIdentifierAsString(req.serviceIdentifier);
        result.push(serviceIdentifier);
        if (req.parentRequest !== null) {
            return _createStringArr(req.parentRequest, result);
        }
        return result;
    }
    var stringArr = _createStringArr(request);
    return stringArr.reverse().join(" --> ");
}
function circularDependencyToException(request) {
    request.childRequests.forEach(function (childRequest) {
        if (alreadyDependencyChain(childRequest, childRequest.serviceIdentifier)) {
            var services = dependencyChainToString(childRequest);
            throw new Error(ERROR_MSGS.CIRCULAR_DEPENDENCY + " " + services);
        }
        else {
            circularDependencyToException(childRequest);
        }
    });
}
exports.circularDependencyToException = circularDependencyToException;
function listMetadataForTarget(serviceIdentifierString, target) {
    if (target.isTagged() || target.isNamed()) {
        var m_1 = "";
        var namedTag = target.getNamedTag();
        var otherTags = target.getCustomTags();
        if (namedTag !== null) {
            m_1 += namedTag.toString() + "\n";
        }
        if (otherTags !== null) {
            otherTags.forEach(function (tag) {
                m_1 += tag.toString() + "\n";
            });
        }
        return " " + serviceIdentifierString + "\n " + serviceIdentifierString + " - " + m_1;
    }
    else {
        return " " + serviceIdentifierString;
    }
}
exports.listMetadataForTarget = listMetadataForTarget;
function getFunctionName(v) {
    if (v.name) {
        return v.name;
    }
    else {
        var name_1 = v.toString();
        var match = name_1.match(/^function\s*([^\s(]+)/);
        return match ? match[1] : "Anonymous function: " + name_1;
    }
}
exports.getFunctionName = getFunctionName;
//# sourceMappingURL=serialization.js.map
},{"../constants/error_msgs":"../node_modules/inversify/lib/constants/error_msgs.js"}],"../node_modules/inversify/lib/planning/context.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Context = void 0;
var id_1 = require("../utils/id");
var Context = (function () {
    function Context(container) {
        this.id = id_1.id();
        this.container = container;
    }
    Context.prototype.addPlan = function (plan) {
        this.plan = plan;
    };
    Context.prototype.setCurrentRequest = function (currentRequest) {
        this.currentRequest = currentRequest;
    };
    return Context;
}());
exports.Context = Context;
//# sourceMappingURL=context.js.map
},{"../utils/id":"../node_modules/inversify/lib/utils/id.js"}],"../node_modules/inversify/lib/planning/metadata.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Metadata = void 0;
var METADATA_KEY = require("../constants/metadata_keys");
var Metadata = (function () {
    function Metadata(key, value) {
        this.key = key;
        this.value = value;
    }
    Metadata.prototype.toString = function () {
        if (this.key === METADATA_KEY.NAMED_TAG) {
            return "named: " + this.value.toString() + " ";
        }
        else {
            return "tagged: { key:" + this.key.toString() + ", value: " + this.value + " }";
        }
    };
    return Metadata;
}());
exports.Metadata = Metadata;
//# sourceMappingURL=metadata.js.map
},{"../constants/metadata_keys":"../node_modules/inversify/lib/constants/metadata_keys.js"}],"../node_modules/inversify/lib/planning/plan.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Plan = void 0;
var Plan = (function () {
    function Plan(parentContext, rootRequest) {
        this.parentContext = parentContext;
        this.rootRequest = rootRequest;
    }
    return Plan;
}());
exports.Plan = Plan;
//# sourceMappingURL=plan.js.map
},{}],"../node_modules/inversify/lib/annotation/decorator_utils.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.tagProperty = exports.tagParameter = exports.decorate = void 0;
var ERROR_MSGS = require("../constants/error_msgs");
var METADATA_KEY = require("../constants/metadata_keys");
function tagParameter(annotationTarget, propertyName, parameterIndex, metadata) {
    var metadataKey = METADATA_KEY.TAGGED;
    _tagParameterOrProperty(metadataKey, annotationTarget, propertyName, metadata, parameterIndex);
}
exports.tagParameter = tagParameter;
function tagProperty(annotationTarget, propertyName, metadata) {
    var metadataKey = METADATA_KEY.TAGGED_PROP;
    _tagParameterOrProperty(metadataKey, annotationTarget.constructor, propertyName, metadata);
}
exports.tagProperty = tagProperty;
function _tagParameterOrProperty(metadataKey, annotationTarget, propertyName, metadata, parameterIndex) {
    var paramsOrPropertiesMetadata = {};
    var isParameterDecorator = (typeof parameterIndex === "number");
    var key = (parameterIndex !== undefined && isParameterDecorator) ? parameterIndex.toString() : propertyName;
    if (isParameterDecorator && propertyName !== undefined) {
        throw new Error(ERROR_MSGS.INVALID_DECORATOR_OPERATION);
    }
    if (Reflect.hasOwnMetadata(metadataKey, annotationTarget)) {
        paramsOrPropertiesMetadata = Reflect.getMetadata(metadataKey, annotationTarget);
    }
    var paramOrPropertyMetadata = paramsOrPropertiesMetadata[key];
    if (!Array.isArray(paramOrPropertyMetadata)) {
        paramOrPropertyMetadata = [];
    }
    else {
        for (var _i = 0, paramOrPropertyMetadata_1 = paramOrPropertyMetadata; _i < paramOrPropertyMetadata_1.length; _i++) {
            var m = paramOrPropertyMetadata_1[_i];
            if (m.key === metadata.key) {
                throw new Error(ERROR_MSGS.DUPLICATED_METADATA + " " + m.key.toString());
            }
        }
    }
    paramOrPropertyMetadata.push(metadata);
    paramsOrPropertiesMetadata[key] = paramOrPropertyMetadata;
    Reflect.defineMetadata(metadataKey, paramsOrPropertiesMetadata, annotationTarget);
}
function _decorate(decorators, target) {
    Reflect.decorate(decorators, target);
}
function _param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); };
}
function decorate(decorator, target, parameterIndex) {
    if (typeof parameterIndex === "number") {
        _decorate([_param(parameterIndex, decorator)], target);
    }
    else if (typeof parameterIndex === "string") {
        Reflect.decorate([decorator], target, parameterIndex);
    }
    else {
        _decorate([decorator], target);
    }
}
exports.decorate = decorate;
//# sourceMappingURL=decorator_utils.js.map
},{"../constants/error_msgs":"../node_modules/inversify/lib/constants/error_msgs.js","../constants/metadata_keys":"../node_modules/inversify/lib/constants/metadata_keys.js"}],"../node_modules/inversify/lib/annotation/inject.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.inject = exports.LazyServiceIdentifer = void 0;
var error_msgs_1 = require("../constants/error_msgs");
var METADATA_KEY = require("../constants/metadata_keys");
var metadata_1 = require("../planning/metadata");
var decorator_utils_1 = require("./decorator_utils");
var LazyServiceIdentifer = (function () {
    function LazyServiceIdentifer(cb) {
        this._cb = cb;
    }
    LazyServiceIdentifer.prototype.unwrap = function () {
        return this._cb();
    };
    return LazyServiceIdentifer;
}());
exports.LazyServiceIdentifer = LazyServiceIdentifer;
function inject(serviceIdentifier) {
    return function (target, targetKey, index) {
        if (serviceIdentifier === undefined) {
            throw new Error(error_msgs_1.UNDEFINED_INJECT_ANNOTATION(target.name));
        }
        var metadata = new metadata_1.Metadata(METADATA_KEY.INJECT_TAG, serviceIdentifier);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.inject = inject;
//# sourceMappingURL=inject.js.map
},{"../constants/error_msgs":"../node_modules/inversify/lib/constants/error_msgs.js","../constants/metadata_keys":"../node_modules/inversify/lib/constants/metadata_keys.js","../planning/metadata":"../node_modules/inversify/lib/planning/metadata.js","./decorator_utils":"../node_modules/inversify/lib/annotation/decorator_utils.js"}],"../node_modules/inversify/lib/planning/queryable_string.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.QueryableString = void 0;
var QueryableString = (function () {
    function QueryableString(str) {
        this.str = str;
    }
    QueryableString.prototype.startsWith = function (searchString) {
        return this.str.indexOf(searchString) === 0;
    };
    QueryableString.prototype.endsWith = function (searchString) {
        var reverseString = "";
        var reverseSearchString = searchString.split("").reverse().join("");
        reverseString = this.str.split("").reverse().join("");
        return this.startsWith.call({ str: reverseString }, reverseSearchString);
    };
    QueryableString.prototype.contains = function (searchString) {
        return (this.str.indexOf(searchString) !== -1);
    };
    QueryableString.prototype.equals = function (compareString) {
        return this.str === compareString;
    };
    QueryableString.prototype.value = function () {
        return this.str;
    };
    return QueryableString;
}());
exports.QueryableString = QueryableString;
//# sourceMappingURL=queryable_string.js.map
},{}],"../node_modules/inversify/lib/planning/target.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Target = void 0;
var METADATA_KEY = require("../constants/metadata_keys");
var id_1 = require("../utils/id");
var metadata_1 = require("./metadata");
var queryable_string_1 = require("./queryable_string");
var Target = (function () {
    function Target(type, name, serviceIdentifier, namedOrTagged) {
        this.id = id_1.id();
        this.type = type;
        this.serviceIdentifier = serviceIdentifier;
        this.name = new queryable_string_1.QueryableString(name || "");
        this.metadata = new Array();
        var metadataItem = null;
        if (typeof namedOrTagged === "string") {
            metadataItem = new metadata_1.Metadata(METADATA_KEY.NAMED_TAG, namedOrTagged);
        }
        else if (namedOrTagged instanceof metadata_1.Metadata) {
            metadataItem = namedOrTagged;
        }
        if (metadataItem !== null) {
            this.metadata.push(metadataItem);
        }
    }
    Target.prototype.hasTag = function (key) {
        for (var _i = 0, _a = this.metadata; _i < _a.length; _i++) {
            var m = _a[_i];
            if (m.key === key) {
                return true;
            }
        }
        return false;
    };
    Target.prototype.isArray = function () {
        return this.hasTag(METADATA_KEY.MULTI_INJECT_TAG);
    };
    Target.prototype.matchesArray = function (name) {
        return this.matchesTag(METADATA_KEY.MULTI_INJECT_TAG)(name);
    };
    Target.prototype.isNamed = function () {
        return this.hasTag(METADATA_KEY.NAMED_TAG);
    };
    Target.prototype.isTagged = function () {
        return this.metadata.some(function (metadata) { return METADATA_KEY.NON_CUSTOM_TAG_KEYS.every(function (key) { return metadata.key !== key; }); });
    };
    Target.prototype.isOptional = function () {
        return this.matchesTag(METADATA_KEY.OPTIONAL_TAG)(true);
    };
    Target.prototype.getNamedTag = function () {
        if (this.isNamed()) {
            return this.metadata.filter(function (m) { return m.key === METADATA_KEY.NAMED_TAG; })[0];
        }
        return null;
    };
    Target.prototype.getCustomTags = function () {
        if (this.isTagged()) {
            return this.metadata.filter(function (metadata) { return METADATA_KEY.NON_CUSTOM_TAG_KEYS.every(function (key) { return metadata.key !== key; }); });
        }
        else {
            return null;
        }
    };
    Target.prototype.matchesNamedTag = function (name) {
        return this.matchesTag(METADATA_KEY.NAMED_TAG)(name);
    };
    Target.prototype.matchesTag = function (key) {
        var _this = this;
        return function (value) {
            for (var _i = 0, _a = _this.metadata; _i < _a.length; _i++) {
                var m = _a[_i];
                if (m.key === key && m.value === value) {
                    return true;
                }
            }
            return false;
        };
    };
    return Target;
}());
exports.Target = Target;
//# sourceMappingURL=target.js.map
},{"../constants/metadata_keys":"../node_modules/inversify/lib/constants/metadata_keys.js","../utils/id":"../node_modules/inversify/lib/utils/id.js","./metadata":"../node_modules/inversify/lib/planning/metadata.js","./queryable_string":"../node_modules/inversify/lib/planning/queryable_string.js"}],"../node_modules/inversify/lib/planning/reflection_utils.js":[function(require,module,exports) {
"use strict";
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFunctionName = exports.getBaseClassDependencyCount = exports.getDependencies = void 0;
var inject_1 = require("../annotation/inject");
var ERROR_MSGS = require("../constants/error_msgs");
var literal_types_1 = require("../constants/literal_types");
var METADATA_KEY = require("../constants/metadata_keys");
var serialization_1 = require("../utils/serialization");
Object.defineProperty(exports, "getFunctionName", { enumerable: true, get: function () { return serialization_1.getFunctionName; } });
var target_1 = require("./target");
function getDependencies(metadataReader, func) {
    var constructorName = serialization_1.getFunctionName(func);
    var targets = getTargets(metadataReader, constructorName, func, false);
    return targets;
}
exports.getDependencies = getDependencies;
function getTargets(metadataReader, constructorName, func, isBaseClass) {
    var metadata = metadataReader.getConstructorMetadata(func);
    var serviceIdentifiers = metadata.compilerGeneratedMetadata;
    if (serviceIdentifiers === undefined) {
        var msg = ERROR_MSGS.MISSING_INJECTABLE_ANNOTATION + " " + constructorName + ".";
        throw new Error(msg);
    }
    var constructorArgsMetadata = metadata.userGeneratedMetadata;
    var keys = Object.keys(constructorArgsMetadata);
    var hasUserDeclaredUnknownInjections = (func.length === 0 && keys.length > 0);
    var hasOptionalParameters = keys.length > func.length;
    var iterations = (hasUserDeclaredUnknownInjections || hasOptionalParameters) ? keys.length : func.length;
    var constructorTargets = getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, iterations);
    var propertyTargets = getClassPropsAsTargets(metadataReader, func);
    var targets = __spreadArray(__spreadArray([], constructorTargets), propertyTargets);
    return targets;
}
function getConstructorArgsAsTarget(index, isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata) {
    var targetMetadata = constructorArgsMetadata[index.toString()] || [];
    var metadata = formatTargetMetadata(targetMetadata);
    var isManaged = metadata.unmanaged !== true;
    var serviceIdentifier = serviceIdentifiers[index];
    var injectIdentifier = (metadata.inject || metadata.multiInject);
    serviceIdentifier = (injectIdentifier) ? (injectIdentifier) : serviceIdentifier;
    if (serviceIdentifier instanceof inject_1.LazyServiceIdentifer) {
        serviceIdentifier = serviceIdentifier.unwrap();
    }
    if (isManaged) {
        var isObject = serviceIdentifier === Object;
        var isFunction = serviceIdentifier === Function;
        var isUndefined = serviceIdentifier === undefined;
        var isUnknownType = (isObject || isFunction || isUndefined);
        if (!isBaseClass && isUnknownType) {
            var msg = ERROR_MSGS.MISSING_INJECT_ANNOTATION + " argument " + index + " in class " + constructorName + ".";
            throw new Error(msg);
        }
        var target = new target_1.Target(literal_types_1.TargetTypeEnum.ConstructorArgument, metadata.targetName, serviceIdentifier);
        target.metadata = targetMetadata;
        return target;
    }
    return null;
}
function getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, iterations) {
    var targets = [];
    for (var i = 0; i < iterations; i++) {
        var index = i;
        var target = getConstructorArgsAsTarget(index, isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata);
        if (target !== null) {
            targets.push(target);
        }
    }
    return targets;
}
function getClassPropsAsTargets(metadataReader, constructorFunc) {
    var classPropsMetadata = metadataReader.getPropertiesMetadata(constructorFunc);
    var targets = [];
    var keys = Object.keys(classPropsMetadata);
    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
        var key = keys_1[_i];
        var targetMetadata = classPropsMetadata[key];
        var metadata = formatTargetMetadata(classPropsMetadata[key]);
        var targetName = metadata.targetName || key;
        var serviceIdentifier = (metadata.inject || metadata.multiInject);
        var target = new target_1.Target(literal_types_1.TargetTypeEnum.ClassProperty, targetName, serviceIdentifier);
        target.metadata = targetMetadata;
        targets.push(target);
    }
    var baseConstructor = Object.getPrototypeOf(constructorFunc.prototype).constructor;
    if (baseConstructor !== Object) {
        var baseTargets = getClassPropsAsTargets(metadataReader, baseConstructor);
        targets = __spreadArray(__spreadArray([], targets), baseTargets);
    }
    return targets;
}
function getBaseClassDependencyCount(metadataReader, func) {
    var baseConstructor = Object.getPrototypeOf(func.prototype).constructor;
    if (baseConstructor !== Object) {
        var baseConstructorName = serialization_1.getFunctionName(baseConstructor);
        var targets = getTargets(metadataReader, baseConstructorName, baseConstructor, true);
        var metadata = targets.map(function (t) {
            return t.metadata.filter(function (m) {
                return m.key === METADATA_KEY.UNMANAGED_TAG;
            });
        });
        var unmanagedCount = [].concat.apply([], metadata).length;
        var dependencyCount = targets.length - unmanagedCount;
        if (dependencyCount > 0) {
            return dependencyCount;
        }
        else {
            return getBaseClassDependencyCount(metadataReader, baseConstructor);
        }
    }
    else {
        return 0;
    }
}
exports.getBaseClassDependencyCount = getBaseClassDependencyCount;
function formatTargetMetadata(targetMetadata) {
    var targetMetadataMap = {};
    targetMetadata.forEach(function (m) {
        targetMetadataMap[m.key.toString()] = m.value;
    });
    return {
        inject: targetMetadataMap[METADATA_KEY.INJECT_TAG],
        multiInject: targetMetadataMap[METADATA_KEY.MULTI_INJECT_TAG],
        targetName: targetMetadataMap[METADATA_KEY.NAME_TAG],
        unmanaged: targetMetadataMap[METADATA_KEY.UNMANAGED_TAG]
    };
}
//# sourceMappingURL=reflection_utils.js.map
},{"../annotation/inject":"../node_modules/inversify/lib/annotation/inject.js","../constants/error_msgs":"../node_modules/inversify/lib/constants/error_msgs.js","../constants/literal_types":"../node_modules/inversify/lib/constants/literal_types.js","../constants/metadata_keys":"../node_modules/inversify/lib/constants/metadata_keys.js","../utils/serialization":"../node_modules/inversify/lib/utils/serialization.js","./target":"../node_modules/inversify/lib/planning/target.js"}],"../node_modules/inversify/lib/planning/request.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Request = void 0;
var id_1 = require("../utils/id");
var Request = (function () {
    function Request(serviceIdentifier, parentContext, parentRequest, bindings, target) {
        this.id = id_1.id();
        this.serviceIdentifier = serviceIdentifier;
        this.parentContext = parentContext;
        this.parentRequest = parentRequest;
        this.target = target;
        this.childRequests = [];
        this.bindings = (Array.isArray(bindings) ? bindings : [bindings]);
        this.requestScope = parentRequest === null
            ? new Map()
            : null;
    }
    Request.prototype.addChildRequest = function (serviceIdentifier, bindings, target) {
        var child = new Request(serviceIdentifier, this.parentContext, this, bindings, target);
        this.childRequests.push(child);
        return child;
    };
    return Request;
}());
exports.Request = Request;
//# sourceMappingURL=request.js.map
},{"../utils/id":"../node_modules/inversify/lib/utils/id.js"}],"../node_modules/inversify/lib/planning/planner.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getBindingDictionary = exports.createMockRequest = exports.plan = void 0;
var binding_count_1 = require("../bindings/binding_count");
var ERROR_MSGS = require("../constants/error_msgs");
var literal_types_1 = require("../constants/literal_types");
var METADATA_KEY = require("../constants/metadata_keys");
var exceptions_1 = require("../utils/exceptions");
var serialization_1 = require("../utils/serialization");
var context_1 = require("./context");
var metadata_1 = require("./metadata");
var plan_1 = require("./plan");
var reflection_utils_1 = require("./reflection_utils");
var request_1 = require("./request");
var target_1 = require("./target");
function getBindingDictionary(cntnr) {
    return cntnr._bindingDictionary;
}
exports.getBindingDictionary = getBindingDictionary;
function _createTarget(isMultiInject, targetType, serviceIdentifier, name, key, value) {
    var metadataKey = isMultiInject ? METADATA_KEY.MULTI_INJECT_TAG : METADATA_KEY.INJECT_TAG;
    var injectMetadata = new metadata_1.Metadata(metadataKey, serviceIdentifier);
    var target = new target_1.Target(targetType, name, serviceIdentifier, injectMetadata);
    if (key !== undefined) {
        var tagMetadata = new metadata_1.Metadata(key, value);
        target.metadata.push(tagMetadata);
    }
    return target;
}
function _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target) {
    var bindings = getBindings(context.container, target.serviceIdentifier);
    var activeBindings = [];
    if (bindings.length === binding_count_1.BindingCount.NoBindingsAvailable &&
        context.container.options.autoBindInjectable &&
        typeof target.serviceIdentifier === "function" &&
        metadataReader.getConstructorMetadata(target.serviceIdentifier).compilerGeneratedMetadata) {
        context.container.bind(target.serviceIdentifier).toSelf();
        bindings = getBindings(context.container, target.serviceIdentifier);
    }
    if (!avoidConstraints) {
        activeBindings = bindings.filter(function (binding) {
            var request = new request_1.Request(binding.serviceIdentifier, context, parentRequest, binding, target);
            return binding.constraint(request);
        });
    }
    else {
        activeBindings = bindings;
    }
    _validateActiveBindingCount(target.serviceIdentifier, activeBindings, target, context.container);
    return activeBindings;
}
function _validateActiveBindingCount(serviceIdentifier, bindings, target, container) {
    switch (bindings.length) {
        case binding_count_1.BindingCount.NoBindingsAvailable:
            if (target.isOptional()) {
                return bindings;
            }
            else {
                var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier);
                var msg = ERROR_MSGS.NOT_REGISTERED;
                msg += serialization_1.listMetadataForTarget(serviceIdentifierString, target);
                msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);
                throw new Error(msg);
            }
        case binding_count_1.BindingCount.OnlyOneBindingAvailable:
            if (!target.isArray()) {
                return bindings;
            }
        case binding_count_1.BindingCount.MultipleBindingsAvailable:
        default:
            if (!target.isArray()) {
                var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier);
                var msg = ERROR_MSGS.AMBIGUOUS_MATCH + " " + serviceIdentifierString;
                msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);
                throw new Error(msg);
            }
            else {
                return bindings;
            }
    }
}
function _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, parentRequest, target) {
    var activeBindings;
    var childRequest;
    if (parentRequest === null) {
        activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, null, target);
        childRequest = new request_1.Request(serviceIdentifier, context, null, activeBindings, target);
        var thePlan = new plan_1.Plan(context, childRequest);
        context.addPlan(thePlan);
    }
    else {
        activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target);
        childRequest = parentRequest.addChildRequest(target.serviceIdentifier, activeBindings, target);
    }
    activeBindings.forEach(function (binding) {
        var subChildRequest = null;
        if (target.isArray()) {
            subChildRequest = childRequest.addChildRequest(binding.serviceIdentifier, binding, target);
        }
        else {
            if (binding.cache) {
                return;
            }
            subChildRequest = childRequest;
        }
        if (binding.type === literal_types_1.BindingTypeEnum.Instance && binding.implementationType !== null) {
            var dependencies = reflection_utils_1.getDependencies(metadataReader, binding.implementationType);
            if (!context.container.options.skipBaseClassChecks) {
                var baseClassDependencyCount = reflection_utils_1.getBaseClassDependencyCount(metadataReader, binding.implementationType);
                if (dependencies.length < baseClassDependencyCount) {
                    var error = ERROR_MSGS.ARGUMENTS_LENGTH_MISMATCH(reflection_utils_1.getFunctionName(binding.implementationType));
                    throw new Error(error);
                }
            }
            dependencies.forEach(function (dependency) {
                _createSubRequests(metadataReader, false, dependency.serviceIdentifier, context, subChildRequest, dependency);
            });
        }
    });
}
function getBindings(container, serviceIdentifier) {
    var bindings = [];
    var bindingDictionary = getBindingDictionary(container);
    if (bindingDictionary.hasKey(serviceIdentifier)) {
        bindings = bindingDictionary.get(serviceIdentifier);
    }
    else if (container.parent !== null) {
        bindings = getBindings(container.parent, serviceIdentifier);
    }
    return bindings;
}
function plan(metadataReader, container, isMultiInject, targetType, serviceIdentifier, key, value, avoidConstraints) {
    if (avoidConstraints === void 0) { avoidConstraints = false; }
    var context = new context_1.Context(container);
    var target = _createTarget(isMultiInject, targetType, serviceIdentifier, "", key, value);
    try {
        _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, null, target);
        return context;
    }
    catch (error) {
        if (exceptions_1.isStackOverflowExeption(error)) {
            if (context.plan) {
                serialization_1.circularDependencyToException(context.plan.rootRequest);
            }
        }
        throw error;
    }
}
exports.plan = plan;
function createMockRequest(container, serviceIdentifier, key, value) {
    var target = new target_1.Target(literal_types_1.TargetTypeEnum.Variable, "", serviceIdentifier, new metadata_1.Metadata(key, value));
    var context = new context_1.Context(container);
    var request = new request_1.Request(serviceIdentifier, context, null, [], target);
    return request;
}
exports.createMockRequest = createMockRequest;
//# sourceMappingURL=planner.js.map
},{"../bindings/binding_count":"../node_modules/inversify/lib/bindings/binding_count.js","../constants/error_msgs":"../node_modules/inversify/lib/constants/error_msgs.js","../constants/literal_types":"../node_modules/inversify/lib/constants/literal_types.js","../constants/metadata_keys":"../node_modules/inversify/lib/constants/metadata_keys.js","../utils/exceptions":"../node_modules/inversify/lib/utils/exceptions.js","../utils/serialization":"../node_modules/inversify/lib/utils/serialization.js","./context":"../node_modules/inversify/lib/planning/context.js","./metadata":"../node_modules/inversify/lib/planning/metadata.js","./plan":"../node_modules/inversify/lib/planning/plan.js","./reflection_utils":"../node_modules/inversify/lib/planning/reflection_utils.js","./request":"../node_modules/inversify/lib/planning/request.js","./target":"../node_modules/inversify/lib/planning/target.js"}],"../node_modules/inversify/lib/resolution/instantiation.js":[function(require,module,exports) {
"use strict";
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveInstance = void 0;
var error_msgs_1 = require("../constants/error_msgs");
var literal_types_1 = require("../constants/literal_types");
var METADATA_KEY = require("../constants/metadata_keys");
function _injectProperties(instance, childRequests, resolveRequest) {
    var propertyInjectionsRequests = childRequests.filter(function (childRequest) {
        return (childRequest.target !== null &&
            childRequest.target.type === literal_types_1.TargetTypeEnum.ClassProperty);
    });
    var propertyInjections = propertyInjectionsRequests.map(resolveRequest);
    propertyInjectionsRequests.forEach(function (r, index) {
        var propertyName = "";
        propertyName = r.target.name.value();
        var injection = propertyInjections[index];
        instance[propertyName] = injection;
    });
    return instance;
}
function _createInstance(Func, injections) {
    return new (Func.bind.apply(Func, __spreadArray([void 0], injections)))();
}
function _postConstruct(constr, result) {
    if (Reflect.hasMetadata(METADATA_KEY.POST_CONSTRUCT, constr)) {
        var data = Reflect.getMetadata(METADATA_KEY.POST_CONSTRUCT, constr);
        try {
            result[data.value]();
        }
        catch (e) {
            throw new Error(error_msgs_1.POST_CONSTRUCT_ERROR(constr.name, e.message));
        }
    }
}
function resolveInstance(constr, childRequests, resolveRequest) {
    var result = null;
    if (childRequests.length > 0) {
        var constructorInjectionsRequests = childRequests.filter(function (childRequest) {
            return (childRequest.target !== null && childRequest.target.type === literal_types_1.TargetTypeEnum.ConstructorArgument);
        });
        var constructorInjections = constructorInjectionsRequests.map(resolveRequest);
        result = _createInstance(constr, constructorInjections);
        result = _injectProperties(result, childRequests, resolveRequest);
    }
    else {
        result = new constr();
    }
    _postConstruct(constr, result);
    return result;
}
exports.resolveInstance = resolveInstance;
//# sourceMappingURL=instantiation.js.map
},{"../constants/error_msgs":"../node_modules/inversify/lib/constants/error_msgs.js","../constants/literal_types":"../node_modules/inversify/lib/constants/literal_types.js","../constants/metadata_keys":"../node_modules/inversify/lib/constants/metadata_keys.js"}],"../node_modules/inversify/lib/resolution/resolver.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolve = void 0;
var ERROR_MSGS = require("../constants/error_msgs");
var literal_types_1 = require("../constants/literal_types");
var exceptions_1 = require("../utils/exceptions");
var serialization_1 = require("../utils/serialization");
var instantiation_1 = require("./instantiation");
var invokeFactory = function (factoryType, serviceIdentifier, fn) {
    try {
        return fn();
    }
    catch (error) {
        if (exceptions_1.isStackOverflowExeption(error)) {
            throw new Error(ERROR_MSGS.CIRCULAR_DEPENDENCY_IN_FACTORY(factoryType, serviceIdentifier.toString()));
        }
        else {
            throw error;
        }
    }
};
var _resolveRequest = function (requestScope) {
    return function (request) {
        request.parentContext.setCurrentRequest(request);
        var bindings = request.bindings;
        var childRequests = request.childRequests;
        var targetIsAnArray = request.target && request.target.isArray();
        var targetParentIsNotAnArray = !request.parentRequest ||
            !request.parentRequest.target ||
            !request.target ||
            !request.parentRequest.target.matchesArray(request.target.serviceIdentifier);
        if (targetIsAnArray && targetParentIsNotAnArray) {
            return childRequests.map(function (childRequest) {
                var _f = _resolveRequest(requestScope);
                return _f(childRequest);
            });
        }
        else {
            var result = null;
            if (request.target.isOptional() && bindings.length === 0) {
                return undefined;
            }
            var binding_1 = bindings[0];
            var isSingleton = binding_1.scope === literal_types_1.BindingScopeEnum.Singleton;
            var isRequestSingleton = binding_1.scope === literal_types_1.BindingScopeEnum.Request;
            if (isSingleton && binding_1.activated) {
                return binding_1.cache;
            }
            if (isRequestSingleton &&
                requestScope !== null &&
                requestScope.has(binding_1.id)) {
                return requestScope.get(binding_1.id);
            }
            if (binding_1.type === literal_types_1.BindingTypeEnum.ConstantValue) {
                result = binding_1.cache;
                binding_1.activated = true;
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.Function) {
                result = binding_1.cache;
                binding_1.activated = true;
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.Constructor) {
                result = binding_1.implementationType;
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.DynamicValue && binding_1.dynamicValue !== null) {
                result = invokeFactory("toDynamicValue", binding_1.serviceIdentifier, function () { return binding_1.dynamicValue(request.parentContext); });
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.Factory && binding_1.factory !== null) {
                result = invokeFactory("toFactory", binding_1.serviceIdentifier, function () { return binding_1.factory(request.parentContext); });
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.Provider && binding_1.provider !== null) {
                result = invokeFactory("toProvider", binding_1.serviceIdentifier, function () { return binding_1.provider(request.parentContext); });
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.Instance && binding_1.implementationType !== null) {
                result = instantiation_1.resolveInstance(binding_1.implementationType, childRequests, _resolveRequest(requestScope));
            }
            else {
                var serviceIdentifier = serialization_1.getServiceIdentifierAsString(request.serviceIdentifier);
                throw new Error(ERROR_MSGS.INVALID_BINDING_TYPE + " " + serviceIdentifier);
            }
            if (typeof binding_1.onActivation === "function") {
                result = binding_1.onActivation(request.parentContext, result);
            }
            if (isSingleton) {
                binding_1.cache = result;
                binding_1.activated = true;
            }
            if (isRequestSingleton &&
                requestScope !== null &&
                !requestScope.has(binding_1.id)) {
                requestScope.set(binding_1.id, result);
            }
            return result;
        }
    };
};
function resolve(context) {
    var _f = _resolveRequest(context.plan.rootRequest.requestScope);
    return _f(context.plan.rootRequest);
}
exports.resolve = resolve;
//# sourceMappingURL=resolver.js.map
},{"../constants/error_msgs":"../node_modules/inversify/lib/constants/error_msgs.js","../constants/literal_types":"../node_modules/inversify/lib/constants/literal_types.js","../utils/exceptions":"../node_modules/inversify/lib/utils/exceptions.js","../utils/serialization":"../node_modules/inversify/lib/utils/serialization.js","./instantiation":"../node_modules/inversify/lib/resolution/instantiation.js"}],"../node_modules/inversify/lib/syntax/constraint_helpers.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.typeConstraint = exports.namedConstraint = exports.taggedConstraint = exports.traverseAncerstors = void 0;
var METADATA_KEY = require("../constants/metadata_keys");
var metadata_1 = require("../planning/metadata");
var traverseAncerstors = function (request, constraint) {
    var parent = request.parentRequest;
    if (parent !== null) {
        return constraint(parent) ? true : traverseAncerstors(parent, constraint);
    }
    else {
        return false;
    }
};
exports.traverseAncerstors = traverseAncerstors;
var taggedConstraint = function (key) { return function (value) {
    var constraint = function (request) {
        return request !== null && request.target !== null && request.target.matchesTag(key)(value);
    };
    constraint.metaData = new metadata_1.Metadata(key, value);
    return constraint;
}; };
exports.taggedConstraint = taggedConstraint;
var namedConstraint = taggedConstraint(METADATA_KEY.NAMED_TAG);
exports.namedConstraint = namedConstraint;
var typeConstraint = function (type) { return function (request) {
    var binding = null;
    if (request !== null) {
        binding = request.bindings[0];
        if (typeof type === "string") {
            var serviceIdentifier = binding.serviceIdentifier;
            return serviceIdentifier === type;
        }
        else {
            var constructor = request.bindings[0].implementationType;
            return type === constructor;
        }
    }
    return false;
}; };
exports.typeConstraint = typeConstraint;
//# sourceMappingURL=constraint_helpers.js.map
},{"../constants/metadata_keys":"../node_modules/inversify/lib/constants/metadata_keys.js","../planning/metadata":"../node_modules/inversify/lib/planning/metadata.js"}],"../node_modules/inversify/lib/syntax/binding_when_syntax.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BindingWhenSyntax = void 0;
var binding_on_syntax_1 = require("./binding_on_syntax");
var constraint_helpers_1 = require("./constraint_helpers");
var BindingWhenSyntax = (function () {
    function BindingWhenSyntax(binding) {
        this._binding = binding;
    }
    BindingWhenSyntax.prototype.when = function (constraint) {
        this._binding.constraint = constraint;
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenTargetNamed = function (name) {
        this._binding.constraint = constraint_helpers_1.namedConstraint(name);
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenTargetIsDefault = function () {
        this._binding.constraint = function (request) {
            var targetIsDefault = (request.target !== null) &&
                (!request.target.isNamed()) &&
                (!request.target.isTagged());
            return targetIsDefault;
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenTargetTagged = function (tag, value) {
        this._binding.constraint = constraint_helpers_1.taggedConstraint(tag)(value);
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenInjectedInto = function (parent) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.typeConstraint(parent)(request.parentRequest);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenParentNamed = function (name) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.namedConstraint(name)(request.parentRequest);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenParentTagged = function (tag, value) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.taggedConstraint(tag)(value)(request.parentRequest);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorIs = function (ancestor) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorIs = function (ancestor) {
        this._binding.constraint = function (request) {
            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorNamed = function (name) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorNamed = function (name) {
        this._binding.constraint = function (request) {
            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorTagged = function (tag, value) {
        this._binding.constraint = function (request) {
            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorMatches = function (constraint) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.traverseAncerstors(request, constraint);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorMatches = function (constraint) {
        this._binding.constraint = function (request) {
            return !constraint_helpers_1.traverseAncerstors(request, constraint);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    return BindingWhenSyntax;
}());
exports.BindingWhenSyntax = BindingWhenSyntax;
//# sourceMappingURL=binding_when_syntax.js.map
},{"./binding_on_syntax":"../node_modules/inversify/lib/syntax/binding_on_syntax.js","./constraint_helpers":"../node_modules/inversify/lib/syntax/constraint_helpers.js"}],"../node_modules/inversify/lib/syntax/binding_on_syntax.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BindingOnSyntax = void 0;
var binding_when_syntax_1 = require("./binding_when_syntax");
var BindingOnSyntax = (function () {
    function BindingOnSyntax(binding) {
        this._binding = binding;
    }
    BindingOnSyntax.prototype.onActivation = function (handler) {
        this._binding.onActivation = handler;
        return new binding_when_syntax_1.BindingWhenSyntax(this._binding);
    };
    return BindingOnSyntax;
}());
exports.BindingOnSyntax = BindingOnSyntax;
//# sourceMappingURL=binding_on_syntax.js.map
},{"./binding_when_syntax":"../node_modules/inversify/lib/syntax/binding_when_syntax.js"}],"../node_modules/inversify/lib/syntax/binding_when_on_syntax.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BindingWhenOnSyntax = void 0;
var binding_on_syntax_1 = require("./binding_on_syntax");
var binding_when_syntax_1 = require("./binding_when_syntax");
var BindingWhenOnSyntax = (function () {
    function BindingWhenOnSyntax(binding) {
        this._binding = binding;
        this._bindingWhenSyntax = new binding_when_syntax_1.BindingWhenSyntax(this._binding);
        this._bindingOnSyntax = new binding_on_syntax_1.BindingOnSyntax(this._binding);
    }
    BindingWhenOnSyntax.prototype.when = function (constraint) {
        return this._bindingWhenSyntax.when(constraint);
    };
    BindingWhenOnSyntax.prototype.whenTargetNamed = function (name) {
        return this._bindingWhenSyntax.whenTargetNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenTargetIsDefault = function () {
        return this._bindingWhenSyntax.whenTargetIsDefault();
    };
    BindingWhenOnSyntax.prototype.whenTargetTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenTargetTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenInjectedInto = function (parent) {
        return this._bindingWhenSyntax.whenInjectedInto(parent);
    };
    BindingWhenOnSyntax.prototype.whenParentNamed = function (name) {
        return this._bindingWhenSyntax.whenParentNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenParentTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenParentTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenAnyAncestorIs(ancestor);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenNoAncestorIs(ancestor);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenAnyAncestorNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenAnyAncestorTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenNoAncestorNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenNoAncestorTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenAnyAncestorMatches(constraint);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenNoAncestorMatches(constraint);
    };
    BindingWhenOnSyntax.prototype.onActivation = function (handler) {
        return this._bindingOnSyntax.onActivation(handler);
    };
    return BindingWhenOnSyntax;
}());
exports.BindingWhenOnSyntax = BindingWhenOnSyntax;
//# sourceMappingURL=binding_when_on_syntax.js.map
},{"./binding_on_syntax":"../node_modules/inversify/lib/syntax/binding_on_syntax.js","./binding_when_syntax":"../node_modules/inversify/lib/syntax/binding_when_syntax.js"}],"../node_modules/inversify/lib/syntax/binding_in_syntax.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BindingInSyntax = void 0;
var literal_types_1 = require("../constants/literal_types");
var binding_when_on_syntax_1 = require("./binding_when_on_syntax");
var BindingInSyntax = (function () {
    function BindingInSyntax(binding) {
        this._binding = binding;
    }
    BindingInSyntax.prototype.inRequestScope = function () {
        this._binding.scope = literal_types_1.BindingScopeEnum.Request;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingInSyntax.prototype.inSingletonScope = function () {
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingInSyntax.prototype.inTransientScope = function () {
        this._binding.scope = literal_types_1.BindingScopeEnum.Transient;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    return BindingInSyntax;
}());
exports.BindingInSyntax = BindingInSyntax;
//# sourceMappingURL=binding_in_syntax.js.map
},{"../constants/literal_types":"../node_modules/inversify/lib/constants/literal_types.js","./binding_when_on_syntax":"../node_modules/inversify/lib/syntax/binding_when_on_syntax.js"}],"../node_modules/inversify/lib/syntax/binding_in_when_on_syntax.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BindingInWhenOnSyntax = void 0;
var binding_in_syntax_1 = require("./binding_in_syntax");
var binding_on_syntax_1 = require("./binding_on_syntax");
var binding_when_syntax_1 = require("./binding_when_syntax");
var BindingInWhenOnSyntax = (function () {
    function BindingInWhenOnSyntax(binding) {
        this._binding = binding;
        this._bindingWhenSyntax = new binding_when_syntax_1.BindingWhenSyntax(this._binding);
        this._bindingOnSyntax = new binding_on_syntax_1.BindingOnSyntax(this._binding);
        this._bindingInSyntax = new binding_in_syntax_1.BindingInSyntax(binding);
    }
    BindingInWhenOnSyntax.prototype.inRequestScope = function () {
        return this._bindingInSyntax.inRequestScope();
    };
    BindingInWhenOnSyntax.prototype.inSingletonScope = function () {
        return this._bindingInSyntax.inSingletonScope();
    };
    BindingInWhenOnSyntax.prototype.inTransientScope = function () {
        return this._bindingInSyntax.inTransientScope();
    };
    BindingInWhenOnSyntax.prototype.when = function (constraint) {
        return this._bindingWhenSyntax.when(constraint);
    };
    BindingInWhenOnSyntax.prototype.whenTargetNamed = function (name) {
        return this._bindingWhenSyntax.whenTargetNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenTargetIsDefault = function () {
        return this._bindingWhenSyntax.whenTargetIsDefault();
    };
    BindingInWhenOnSyntax.prototype.whenTargetTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenTargetTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenInjectedInto = function (parent) {
        return this._bindingWhenSyntax.whenInjectedInto(parent);
    };
    BindingInWhenOnSyntax.prototype.whenParentNamed = function (name) {
        return this._bindingWhenSyntax.whenParentNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenParentTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenParentTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenAnyAncestorIs(ancestor);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenNoAncestorIs(ancestor);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenAnyAncestorNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenAnyAncestorTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenNoAncestorNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenNoAncestorTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenAnyAncestorMatches(constraint);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenNoAncestorMatches(constraint);
    };
    BindingInWhenOnSyntax.prototype.onActivation = function (handler) {
        return this._bindingOnSyntax.onActivation(handler);
    };
    return BindingInWhenOnSyntax;
}());
exports.BindingInWhenOnSyntax = BindingInWhenOnSyntax;
//# sourceMappingURL=binding_in_when_on_syntax.js.map
},{"./binding_in_syntax":"../node_modules/inversify/lib/syntax/binding_in_syntax.js","./binding_on_syntax":"../node_modules/inversify/lib/syntax/binding_on_syntax.js","./binding_when_syntax":"../node_modules/inversify/lib/syntax/binding_when_syntax.js"}],"../node_modules/inversify/lib/syntax/binding_to_syntax.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BindingToSyntax = void 0;
var ERROR_MSGS = require("../constants/error_msgs");
var literal_types_1 = require("../constants/literal_types");
var binding_in_when_on_syntax_1 = require("./binding_in_when_on_syntax");
var binding_when_on_syntax_1 = require("./binding_when_on_syntax");
var BindingToSyntax = (function () {
    function BindingToSyntax(binding) {
        this._binding = binding;
    }
    BindingToSyntax.prototype.to = function (constructor) {
        this._binding.type = literal_types_1.BindingTypeEnum.Instance;
        this._binding.implementationType = constructor;
        return new binding_in_when_on_syntax_1.BindingInWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toSelf = function () {
        if (typeof this._binding.serviceIdentifier !== "function") {
            throw new Error("" + ERROR_MSGS.INVALID_TO_SELF_VALUE);
        }
        var self = this._binding.serviceIdentifier;
        return this.to(self);
    };
    BindingToSyntax.prototype.toConstantValue = function (value) {
        this._binding.type = literal_types_1.BindingTypeEnum.ConstantValue;
        this._binding.cache = value;
        this._binding.dynamicValue = null;
        this._binding.implementationType = null;
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toDynamicValue = function (func) {
        this._binding.type = literal_types_1.BindingTypeEnum.DynamicValue;
        this._binding.cache = null;
        this._binding.dynamicValue = func;
        this._binding.implementationType = null;
        return new binding_in_when_on_syntax_1.BindingInWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toConstructor = function (constructor) {
        this._binding.type = literal_types_1.BindingTypeEnum.Constructor;
        this._binding.implementationType = constructor;
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toFactory = function (factory) {
        this._binding.type = literal_types_1.BindingTypeEnum.Factory;
        this._binding.factory = factory;
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toFunction = function (func) {
        if (typeof func !== "function") {
            throw new Error(ERROR_MSGS.INVALID_FUNCTION_BINDING);
        }
        var bindingWhenOnSyntax = this.toConstantValue(func);
        this._binding.type = literal_types_1.BindingTypeEnum.Function;
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return bindingWhenOnSyntax;
    };
    BindingToSyntax.prototype.toAutoFactory = function (serviceIdentifier) {
        this._binding.type = literal_types_1.BindingTypeEnum.Factory;
        this._binding.factory = function (context) {
            var autofactory = function () { return context.container.get(serviceIdentifier); };
            return autofactory;
        };
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toProvider = function (provider) {
        this._binding.type = literal_types_1.BindingTypeEnum.Provider;
        this._binding.provider = provider;
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toService = function (service) {
        this.toDynamicValue(function (context) { return context.container.get(service); });
    };
    return BindingToSyntax;
}());
exports.BindingToSyntax = BindingToSyntax;
//# sourceMappingURL=binding_to_syntax.js.map
},{"../constants/error_msgs":"../node_modules/inversify/lib/constants/error_msgs.js","../constants/literal_types":"../node_modules/inversify/lib/constants/literal_types.js","./binding_in_when_on_syntax":"../node_modules/inversify/lib/syntax/binding_in_when_on_syntax.js","./binding_when_on_syntax":"../node_modules/inversify/lib/syntax/binding_when_on_syntax.js"}],"../node_modules/inversify/lib/container/container_snapshot.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContainerSnapshot = void 0;
var ContainerSnapshot = (function () {
    function ContainerSnapshot() {
    }
    ContainerSnapshot.of = function (bindings, middleware) {
        var snapshot = new ContainerSnapshot();
        snapshot.bindings = bindings;
        snapshot.middleware = middleware;
        return snapshot;
    };
    return ContainerSnapshot;
}());
exports.ContainerSnapshot = ContainerSnapshot;
//# sourceMappingURL=container_snapshot.js.map
},{}],"../node_modules/inversify/lib/container/lookup.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Lookup = void 0;
var ERROR_MSGS = require("../constants/error_msgs");
var Lookup = (function () {
    function Lookup() {
        this._map = new Map();
    }
    Lookup.prototype.getMap = function () {
        return this._map;
    };
    Lookup.prototype.add = function (serviceIdentifier, value) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        if (value === null || value === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        var entry = this._map.get(serviceIdentifier);
        if (entry !== undefined) {
            entry.push(value);
            this._map.set(serviceIdentifier, entry);
        }
        else {
            this._map.set(serviceIdentifier, [value]);
        }
    };
    Lookup.prototype.get = function (serviceIdentifier) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        var entry = this._map.get(serviceIdentifier);
        if (entry !== undefined) {
            return entry;
        }
        else {
            throw new Error(ERROR_MSGS.KEY_NOT_FOUND);
        }
    };
    Lookup.prototype.remove = function (serviceIdentifier) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        if (!this._map.delete(serviceIdentifier)) {
            throw new Error(ERROR_MSGS.KEY_NOT_FOUND);
        }
    };
    Lookup.prototype.removeByCondition = function (condition) {
        var _this = this;
        this._map.forEach(function (entries, key) {
            var updatedEntries = entries.filter(function (entry) { return !condition(entry); });
            if (updatedEntries.length > 0) {
                _this._map.set(key, updatedEntries);
            }
            else {
                _this._map.delete(key);
            }
        });
    };
    Lookup.prototype.hasKey = function (serviceIdentifier) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        return this._map.has(serviceIdentifier);
    };
    Lookup.prototype.clone = function () {
        var copy = new Lookup();
        this._map.forEach(function (value, key) {
            value.forEach(function (b) { return copy.add(key, b.clone()); });
        });
        return copy;
    };
    Lookup.prototype.traverse = function (func) {
        this._map.forEach(function (value, key) {
            func(key, value);
        });
    };
    return Lookup;
}());
exports.Lookup = Lookup;
//# sourceMappingURL=lookup.js.map
},{"../constants/error_msgs":"../node_modules/inversify/lib/constants/error_msgs.js"}],"../node_modules/inversify/lib/container/container.js":[function(require,module,exports) {
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Container = void 0;
var binding_1 = require("../bindings/binding");
var ERROR_MSGS = require("../constants/error_msgs");
var literal_types_1 = require("../constants/literal_types");
var METADATA_KEY = require("../constants/metadata_keys");
var metadata_reader_1 = require("../planning/metadata_reader");
var planner_1 = require("../planning/planner");
var resolver_1 = require("../resolution/resolver");
var binding_to_syntax_1 = require("../syntax/binding_to_syntax");
var id_1 = require("../utils/id");
var serialization_1 = require("../utils/serialization");
var container_snapshot_1 = require("./container_snapshot");
var lookup_1 = require("./lookup");
var Container = (function () {
    function Container(containerOptions) {
        this._appliedMiddleware = [];
        var options = containerOptions || {};
        if (typeof options !== "object") {
            throw new Error("" + ERROR_MSGS.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT);
        }
        if (options.defaultScope === undefined) {
            options.defaultScope = literal_types_1.BindingScopeEnum.Transient;
        }
        else if (options.defaultScope !== literal_types_1.BindingScopeEnum.Singleton &&
            options.defaultScope !== literal_types_1.BindingScopeEnum.Transient &&
            options.defaultScope !== literal_types_1.BindingScopeEnum.Request) {
            throw new Error("" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE);
        }
        if (options.autoBindInjectable === undefined) {
            options.autoBindInjectable = false;
        }
        else if (typeof options.autoBindInjectable !== "boolean") {
            throw new Error("" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE);
        }
        if (options.skipBaseClassChecks === undefined) {
            options.skipBaseClassChecks = false;
        }
        else if (typeof options.skipBaseClassChecks !== "boolean") {
            throw new Error("" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK);
        }
        this.options = {
            autoBindInjectable: options.autoBindInjectable,
            defaultScope: options.defaultScope,
            skipBaseClassChecks: options.skipBaseClassChecks
        };
        this.id = id_1.id();
        this._bindingDictionary = new lookup_1.Lookup();
        this._snapshots = [];
        this._middleware = null;
        this.parent = null;
        this._metadataReader = new metadata_reader_1.MetadataReader();
    }
    Container.merge = function (container1, container2) {
        var container3 = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            container3[_i - 2] = arguments[_i];
        }
        var container = new Container();
        var targetContainers = __spreadArray([container1, container2], container3).map(function (targetContainer) { return planner_1.getBindingDictionary(targetContainer); });
        var bindingDictionary = planner_1.getBindingDictionary(container);
        function copyDictionary(origin, destination) {
            origin.traverse(function (key, value) {
                value.forEach(function (binding) {
                    destination.add(binding.serviceIdentifier, binding.clone());
                });
            });
        }
        targetContainers.forEach(function (targetBindingDictionary) {
            copyDictionary(targetBindingDictionary, bindingDictionary);
        });
        return container;
    };
    Container.prototype.load = function () {
        var modules = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            modules[_i] = arguments[_i];
        }
        var getHelpers = this._getContainerModuleHelpersFactory();
        for (var _a = 0, modules_1 = modules; _a < modules_1.length; _a++) {
            var currentModule = modules_1[_a];
            var containerModuleHelpers = getHelpers(currentModule.id);
            currentModule.registry(containerModuleHelpers.bindFunction, containerModuleHelpers.unbindFunction, containerModuleHelpers.isboundFunction, containerModuleHelpers.rebindFunction);
        }
    };
    Container.prototype.loadAsync = function () {
        var modules = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            modules[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, void 0, function () {
            var getHelpers, _a, modules_2, currentModule, containerModuleHelpers;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        getHelpers = this._getContainerModuleHelpersFactory();
                        _a = 0, modules_2 = modules;
                        _b.label = 1;
                    case 1:
                        if (!(_a < modules_2.length)) return [3, 4];
                        currentModule = modules_2[_a];
                        containerModuleHelpers = getHelpers(currentModule.id);
                        return [4, currentModule.registry(containerModuleHelpers.bindFunction, containerModuleHelpers.unbindFunction, containerModuleHelpers.isboundFunction, containerModuleHelpers.rebindFunction)];
                    case 2:
                        _b.sent();
                        _b.label = 3;
                    case 3:
                        _a++;
                        return [3, 1];
                    case 4: return [2];
                }
            });
        });
    };
    Container.prototype.unload = function () {
        var _this = this;
        var modules = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            modules[_i] = arguments[_i];
        }
        var conditionFactory = function (expected) { return function (item) {
            return item.moduleId === expected;
        }; };
        modules.forEach(function (module) {
            var condition = conditionFactory(module.id);
            _this._bindingDictionary.removeByCondition(condition);
        });
    };
    Container.prototype.bind = function (serviceIdentifier) {
        var scope = this.options.defaultScope || literal_types_1.BindingScopeEnum.Transient;
        var binding = new binding_1.Binding(serviceIdentifier, scope);
        this._bindingDictionary.add(serviceIdentifier, binding);
        return new binding_to_syntax_1.BindingToSyntax(binding);
    };
    Container.prototype.rebind = function (serviceIdentifier) {
        this.unbind(serviceIdentifier);
        return this.bind(serviceIdentifier);
    };
    Container.prototype.unbind = function (serviceIdentifier) {
        try {
            this._bindingDictionary.remove(serviceIdentifier);
        }
        catch (e) {
            throw new Error(ERROR_MSGS.CANNOT_UNBIND + " " + serialization_1.getServiceIdentifierAsString(serviceIdentifier));
        }
    };
    Container.prototype.unbindAll = function () {
        this._bindingDictionary = new lookup_1.Lookup();
    };
    Container.prototype.isBound = function (serviceIdentifier) {
        var bound = this._bindingDictionary.hasKey(serviceIdentifier);
        if (!bound && this.parent) {
            bound = this.parent.isBound(serviceIdentifier);
        }
        return bound;
    };
    Container.prototype.isBoundNamed = function (serviceIdentifier, named) {
        return this.isBoundTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);
    };
    Container.prototype.isBoundTagged = function (serviceIdentifier, key, value) {
        var bound = false;
        if (this._bindingDictionary.hasKey(serviceIdentifier)) {
            var bindings = this._bindingDictionary.get(serviceIdentifier);
            var request_1 = planner_1.createMockRequest(this, serviceIdentifier, key, value);
            bound = bindings.some(function (b) { return b.constraint(request_1); });
        }
        if (!bound && this.parent) {
            bound = this.parent.isBoundTagged(serviceIdentifier, key, value);
        }
        return bound;
    };
    Container.prototype.snapshot = function () {
        this._snapshots.push(container_snapshot_1.ContainerSnapshot.of(this._bindingDictionary.clone(), this._middleware));
    };
    Container.prototype.restore = function () {
        var snapshot = this._snapshots.pop();
        if (snapshot === undefined) {
            throw new Error(ERROR_MSGS.NO_MORE_SNAPSHOTS_AVAILABLE);
        }
        this._bindingDictionary = snapshot.bindings;
        this._middleware = snapshot.middleware;
    };
    Container.prototype.createChild = function (containerOptions) {
        var child = new Container(containerOptions || this.options);
        child.parent = this;
        return child;
    };
    Container.prototype.applyMiddleware = function () {
        var middlewares = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            middlewares[_i] = arguments[_i];
        }
        this._appliedMiddleware = this._appliedMiddleware.concat(middlewares);
        var initial = (this._middleware) ? this._middleware : this._planAndResolve();
        this._middleware = middlewares.reduce(function (prev, curr) { return curr(prev); }, initial);
    };
    Container.prototype.applyCustomMetadataReader = function (metadataReader) {
        this._metadataReader = metadataReader;
    };
    Container.prototype.get = function (serviceIdentifier) {
        return this._get(false, false, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier);
    };
    Container.prototype.getTagged = function (serviceIdentifier, key, value) {
        return this._get(false, false, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier, key, value);
    };
    Container.prototype.getNamed = function (serviceIdentifier, named) {
        return this.getTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);
    };
    Container.prototype.getAll = function (serviceIdentifier) {
        return this._get(true, true, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier);
    };
    Container.prototype.getAllTagged = function (serviceIdentifier, key, value) {
        return this._get(false, true, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier, key, value);
    };
    Container.prototype.getAllNamed = function (serviceIdentifier, named) {
        return this.getAllTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);
    };
    Container.prototype.resolve = function (constructorFunction) {
        var tempContainer = this.createChild();
        tempContainer.bind(constructorFunction).toSelf();
        this._appliedMiddleware.forEach(function (m) {
            tempContainer.applyMiddleware(m);
        });
        return tempContainer.get(constructorFunction);
    };
    Container.prototype._getContainerModuleHelpersFactory = function () {
        var _this = this;
        var setModuleId = function (bindingToSyntax, moduleId) {
            bindingToSyntax._binding.moduleId = moduleId;
        };
        var getBindFunction = function (moduleId) {
            return function (serviceIdentifier) {
                var _bind = _this.bind.bind(_this);
                var bindingToSyntax = _bind(serviceIdentifier);
                setModuleId(bindingToSyntax, moduleId);
                return bindingToSyntax;
            };
        };
        var getUnbindFunction = function (moduleId) {
            return function (serviceIdentifier) {
                var _unbind = _this.unbind.bind(_this);
                _unbind(serviceIdentifier);
            };
        };
        var getIsboundFunction = function (moduleId) {
            return function (serviceIdentifier) {
                var _isBound = _this.isBound.bind(_this);
                return _isBound(serviceIdentifier);
            };
        };
        var getRebindFunction = function (moduleId) {
            return function (serviceIdentifier) {
                var _rebind = _this.rebind.bind(_this);
                var bindingToSyntax = _rebind(serviceIdentifier);
                setModuleId(bindingToSyntax, moduleId);
                return bindingToSyntax;
            };
        };
        return function (mId) { return ({
            bindFunction: getBindFunction(mId),
            isboundFunction: getIsboundFunction(mId),
            rebindFunction: getRebindFunction(mId),
            unbindFunction: getUnbindFunction(mId)
        }); };
    };
    Container.prototype._get = function (avoidConstraints, isMultiInject, targetType, serviceIdentifier, key, value) {
        var result = null;
        var defaultArgs = {
            avoidConstraints: avoidConstraints,
            contextInterceptor: function (context) { return context; },
            isMultiInject: isMultiInject,
            key: key,
            serviceIdentifier: serviceIdentifier,
            targetType: targetType,
            value: value
        };
        if (this._middleware) {
            result = this._middleware(defaultArgs);
            if (result === undefined || result === null) {
                throw new Error(ERROR_MSGS.INVALID_MIDDLEWARE_RETURN);
            }
        }
        else {
            result = this._planAndResolve()(defaultArgs);
        }
        return result;
    };
    Container.prototype._planAndResolve = function () {
        var _this = this;
        return function (args) {
            var context = planner_1.plan(_this._metadataReader, _this, args.isMultiInject, args.targetType, args.serviceIdentifier, args.key, args.value, args.avoidConstraints);
            context = args.contextInterceptor(context);
            var result = resolver_1.resolve(context);
            return result;
        };
    };
    return Container;
}());
exports.Container = Container;
//# sourceMappingURL=container.js.map
},{"../bindings/binding":"../node_modules/inversify/lib/bindings/binding.js","../constants/error_msgs":"../node_modules/inversify/lib/constants/error_msgs.js","../constants/literal_types":"../node_modules/inversify/lib/constants/literal_types.js","../constants/metadata_keys":"../node_modules/inversify/lib/constants/metadata_keys.js","../planning/metadata_reader":"../node_modules/inversify/lib/planning/metadata_reader.js","../planning/planner":"../node_modules/inversify/lib/planning/planner.js","../resolution/resolver":"../node_modules/inversify/lib/resolution/resolver.js","../syntax/binding_to_syntax":"../node_modules/inversify/lib/syntax/binding_to_syntax.js","../utils/id":"../node_modules/inversify/lib/utils/id.js","../utils/serialization":"../node_modules/inversify/lib/utils/serialization.js","./container_snapshot":"../node_modules/inversify/lib/container/container_snapshot.js","./lookup":"../node_modules/inversify/lib/container/lookup.js"}],"../node_modules/inversify/lib/container/container_module.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AsyncContainerModule = exports.ContainerModule = void 0;
var id_1 = require("../utils/id");
var ContainerModule = (function () {
    function ContainerModule(registry) {
        this.id = id_1.id();
        this.registry = registry;
    }
    return ContainerModule;
}());
exports.ContainerModule = ContainerModule;
var AsyncContainerModule = (function () {
    function AsyncContainerModule(registry) {
        this.id = id_1.id();
        this.registry = registry;
    }
    return AsyncContainerModule;
}());
exports.AsyncContainerModule = AsyncContainerModule;
//# sourceMappingURL=container_module.js.map
},{"../utils/id":"../node_modules/inversify/lib/utils/id.js"}],"../node_modules/inversify/lib/annotation/injectable.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.injectable = void 0;
var ERRORS_MSGS = require("../constants/error_msgs");
var METADATA_KEY = require("../constants/metadata_keys");
function injectable() {
    return function (target) {
        if (Reflect.hasOwnMetadata(METADATA_KEY.PARAM_TYPES, target)) {
            throw new Error(ERRORS_MSGS.DUPLICATED_INJECTABLE_DECORATOR);
        }
        var types = Reflect.getMetadata(METADATA_KEY.DESIGN_PARAM_TYPES, target) || [];
        Reflect.defineMetadata(METADATA_KEY.PARAM_TYPES, types, target);
        return target;
    };
}
exports.injectable = injectable;
//# sourceMappingURL=injectable.js.map
},{"../constants/error_msgs":"../node_modules/inversify/lib/constants/error_msgs.js","../constants/metadata_keys":"../node_modules/inversify/lib/constants/metadata_keys.js"}],"../node_modules/inversify/lib/annotation/tagged.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.tagged = void 0;
var metadata_1 = require("../planning/metadata");
var decorator_utils_1 = require("./decorator_utils");
function tagged(metadataKey, metadataValue) {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(metadataKey, metadataValue);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.tagged = tagged;
//# sourceMappingURL=tagged.js.map
},{"../planning/metadata":"../node_modules/inversify/lib/planning/metadata.js","./decorator_utils":"../node_modules/inversify/lib/annotation/decorator_utils.js"}],"../node_modules/inversify/lib/annotation/named.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.named = void 0;
var METADATA_KEY = require("../constants/metadata_keys");
var metadata_1 = require("../planning/metadata");
var decorator_utils_1 = require("./decorator_utils");
function named(name) {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.NAMED_TAG, name);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.named = named;
//# sourceMappingURL=named.js.map
},{"../constants/metadata_keys":"../node_modules/inversify/lib/constants/metadata_keys.js","../planning/metadata":"../node_modules/inversify/lib/planning/metadata.js","./decorator_utils":"../node_modules/inversify/lib/annotation/decorator_utils.js"}],"../node_modules/inversify/lib/annotation/optional.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.optional = void 0;
var METADATA_KEY = require("../constants/metadata_keys");
var metadata_1 = require("../planning/metadata");
var decorator_utils_1 = require("./decorator_utils");
function optional() {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.OPTIONAL_TAG, true);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.optional = optional;
//# sourceMappingURL=optional.js.map
},{"../constants/metadata_keys":"../node_modules/inversify/lib/constants/metadata_keys.js","../planning/metadata":"../node_modules/inversify/lib/planning/metadata.js","./decorator_utils":"../node_modules/inversify/lib/annotation/decorator_utils.js"}],"../node_modules/inversify/lib/annotation/unmanaged.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.unmanaged = void 0;
var METADATA_KEY = require("../constants/metadata_keys");
var metadata_1 = require("../planning/metadata");
var decorator_utils_1 = require("./decorator_utils");
function unmanaged() {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.UNMANAGED_TAG, true);
        decorator_utils_1.tagParameter(target, targetKey, index, metadata);
    };
}
exports.unmanaged = unmanaged;
//# sourceMappingURL=unmanaged.js.map
},{"../constants/metadata_keys":"../node_modules/inversify/lib/constants/metadata_keys.js","../planning/metadata":"../node_modules/inversify/lib/planning/metadata.js","./decorator_utils":"../node_modules/inversify/lib/annotation/decorator_utils.js"}],"../node_modules/inversify/lib/annotation/multi_inject.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.multiInject = void 0;
var METADATA_KEY = require("../constants/metadata_keys");
var metadata_1 = require("../planning/metadata");
var decorator_utils_1 = require("./decorator_utils");
function multiInject(serviceIdentifier) {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.MULTI_INJECT_TAG, serviceIdentifier);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.multiInject = multiInject;
//# sourceMappingURL=multi_inject.js.map
},{"../constants/metadata_keys":"../node_modules/inversify/lib/constants/metadata_keys.js","../planning/metadata":"../node_modules/inversify/lib/planning/metadata.js","./decorator_utils":"../node_modules/inversify/lib/annotation/decorator_utils.js"}],"../node_modules/inversify/lib/annotation/target_name.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.targetName = void 0;
var METADATA_KEY = require("../constants/metadata_keys");
var metadata_1 = require("../planning/metadata");
var decorator_utils_1 = require("./decorator_utils");
function targetName(name) {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.NAME_TAG, name);
        decorator_utils_1.tagParameter(target, targetKey, index, metadata);
    };
}
exports.targetName = targetName;
//# sourceMappingURL=target_name.js.map
},{"../constants/metadata_keys":"../node_modules/inversify/lib/constants/metadata_keys.js","../planning/metadata":"../node_modules/inversify/lib/planning/metadata.js","./decorator_utils":"../node_modules/inversify/lib/annotation/decorator_utils.js"}],"../node_modules/inversify/lib/annotation/post_construct.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.postConstruct = void 0;
var ERRORS_MSGS = require("../constants/error_msgs");
var METADATA_KEY = require("../constants/metadata_keys");
var metadata_1 = require("../planning/metadata");
function postConstruct() {
    return function (target, propertyKey, descriptor) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.POST_CONSTRUCT, propertyKey);
        if (Reflect.hasOwnMetadata(METADATA_KEY.POST_CONSTRUCT, target.constructor)) {
            throw new Error(ERRORS_MSGS.MULTIPLE_POST_CONSTRUCT_METHODS);
        }
        Reflect.defineMetadata(METADATA_KEY.POST_CONSTRUCT, metadata, target.constructor);
    };
}
exports.postConstruct = postConstruct;
//# sourceMappingURL=post_construct.js.map
},{"../constants/error_msgs":"../node_modules/inversify/lib/constants/error_msgs.js","../constants/metadata_keys":"../node_modules/inversify/lib/constants/metadata_keys.js","../planning/metadata":"../node_modules/inversify/lib/planning/metadata.js"}],"../node_modules/inversify/lib/utils/binding_utils.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.multiBindToService = void 0;
var multiBindToService = function (container) {
    return function (service) {
        return function () {
            var types = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                types[_i] = arguments[_i];
            }
            return types.forEach(function (t) { return container.bind(t).toService(service); });
        };
    };
};
exports.multiBindToService = multiBindToService;
//# sourceMappingURL=binding_utils.js.map
},{}],"../node_modules/inversify/lib/inversify.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.multiBindToService = exports.getServiceIdentifierAsString = exports.typeConstraint = exports.namedConstraint = exports.taggedConstraint = exports.traverseAncerstors = exports.decorate = exports.id = exports.MetadataReader = exports.postConstruct = exports.targetName = exports.multiInject = exports.unmanaged = exports.optional = exports.LazyServiceIdentifer = exports.inject = exports.named = exports.tagged = exports.injectable = exports.ContainerModule = exports.AsyncContainerModule = exports.TargetTypeEnum = exports.BindingTypeEnum = exports.BindingScopeEnum = exports.Container = exports.METADATA_KEY = void 0;
var keys = require("./constants/metadata_keys");
exports.METADATA_KEY = keys;
var container_1 = require("./container/container");
Object.defineProperty(exports, "Container", { enumerable: true, get: function () { return container_1.Container; } });
var literal_types_1 = require("./constants/literal_types");
Object.defineProperty(exports, "BindingScopeEnum", { enumerable: true, get: function () { return literal_types_1.BindingScopeEnum; } });
Object.defineProperty(exports, "BindingTypeEnum", { enumerable: true, get: function () { return literal_types_1.BindingTypeEnum; } });
Object.defineProperty(exports, "TargetTypeEnum", { enumerable: true, get: function () { return literal_types_1.TargetTypeEnum; } });
var container_module_1 = require("./container/container_module");
Object.defineProperty(exports, "AsyncContainerModule", { enumerable: true, get: function () { return container_module_1.AsyncContainerModule; } });
Object.defineProperty(exports, "ContainerModule", { enumerable: true, get: function () { return container_module_1.ContainerModule; } });
var injectable_1 = require("./annotation/injectable");
Object.defineProperty(exports, "injectable", { enumerable: true, get: function () { return injectable_1.injectable; } });
var tagged_1 = require("./annotation/tagged");
Object.defineProperty(exports, "tagged", { enumerable: true, get: function () { return tagged_1.tagged; } });
var named_1 = require("./annotation/named");
Object.defineProperty(exports, "named", { enumerable: true, get: function () { return named_1.named; } });
var inject_1 = require("./annotation/inject");
Object.defineProperty(exports, "inject", { enumerable: true, get: function () { return inject_1.inject; } });
Object.defineProperty(exports, "LazyServiceIdentifer", { enumerable: true, get: function () { return inject_1.LazyServiceIdentifer; } });
var optional_1 = require("./annotation/optional");
Object.defineProperty(exports, "optional", { enumerable: true, get: function () { return optional_1.optional; } });
var unmanaged_1 = require("./annotation/unmanaged");
Object.defineProperty(exports, "unmanaged", { enumerable: true, get: function () { return unmanaged_1.unmanaged; } });
var multi_inject_1 = require("./annotation/multi_inject");
Object.defineProperty(exports, "multiInject", { enumerable: true, get: function () { return multi_inject_1.multiInject; } });
var target_name_1 = require("./annotation/target_name");
Object.defineProperty(exports, "targetName", { enumerable: true, get: function () { return target_name_1.targetName; } });
var post_construct_1 = require("./annotation/post_construct");
Object.defineProperty(exports, "postConstruct", { enumerable: true, get: function () { return post_construct_1.postConstruct; } });
var metadata_reader_1 = require("./planning/metadata_reader");
Object.defineProperty(exports, "MetadataReader", { enumerable: true, get: function () { return metadata_reader_1.MetadataReader; } });
var id_1 = require("./utils/id");
Object.defineProperty(exports, "id", { enumerable: true, get: function () { return id_1.id; } });
var decorator_utils_1 = require("./annotation/decorator_utils");
Object.defineProperty(exports, "decorate", { enumerable: true, get: function () { return decorator_utils_1.decorate; } });
var constraint_helpers_1 = require("./syntax/constraint_helpers");
Object.defineProperty(exports, "traverseAncerstors", { enumerable: true, get: function () { return constraint_helpers_1.traverseAncerstors; } });
Object.defineProperty(exports, "taggedConstraint", { enumerable: true, get: function () { return constraint_helpers_1.taggedConstraint; } });
Object.defineProperty(exports, "namedConstraint", { enumerable: true, get: function () { return constraint_helpers_1.namedConstraint; } });
Object.defineProperty(exports, "typeConstraint", { enumerable: true, get: function () { return constraint_helpers_1.typeConstraint; } });
var serialization_1 = require("./utils/serialization");
Object.defineProperty(exports, "getServiceIdentifierAsString", { enumerable: true, get: function () { return serialization_1.getServiceIdentifierAsString; } });
var binding_utils_1 = require("./utils/binding_utils");
Object.defineProperty(exports, "multiBindToService", { enumerable: true, get: function () { return binding_utils_1.multiBindToService; } });
//# sourceMappingURL=inversify.js.map
},{"./constants/metadata_keys":"../node_modules/inversify/lib/constants/metadata_keys.js","./container/container":"../node_modules/inversify/lib/container/container.js","./constants/literal_types":"../node_modules/inversify/lib/constants/literal_types.js","./container/container_module":"../node_modules/inversify/lib/container/container_module.js","./annotation/injectable":"../node_modules/inversify/lib/annotation/injectable.js","./annotation/tagged":"../node_modules/inversify/lib/annotation/tagged.js","./annotation/named":"../node_modules/inversify/lib/annotation/named.js","./annotation/inject":"../node_modules/inversify/lib/annotation/inject.js","./annotation/optional":"../node_modules/inversify/lib/annotation/optional.js","./annotation/unmanaged":"../node_modules/inversify/lib/annotation/unmanaged.js","./annotation/multi_inject":"../node_modules/inversify/lib/annotation/multi_inject.js","./annotation/target_name":"../node_modules/inversify/lib/annotation/target_name.js","./annotation/post_construct":"../node_modules/inversify/lib/annotation/post_construct.js","./planning/metadata_reader":"../node_modules/inversify/lib/planning/metadata_reader.js","./utils/id":"../node_modules/inversify/lib/utils/id.js","./annotation/decorator_utils":"../node_modules/inversify/lib/annotation/decorator_utils.js","./syntax/constraint_helpers":"../node_modules/inversify/lib/syntax/constraint_helpers.js","./utils/serialization":"../node_modules/inversify/lib/utils/serialization.js","./utils/binding_utils":"../node_modules/inversify/lib/utils/binding_utils.js"}],"../node_modules/process/browser.js":[function(require,module,exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;
function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}
(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }
  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();
function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  }
  // if setTimeout wasn't available but was latter defined
  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }
  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}
function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  }
  // if clearTimeout wasn't available but was latter defined
  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }
  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;
function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }
  draining = false;
  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }
  if (queue.length) {
    drainQueue();
  }
}
function drainQueue() {
  if (draining) {
    return;
  }
  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;
  while (len) {
    currentQueue = queue;
    queue = [];
    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }
    queueIndex = -1;
    len = queue.length;
  }
  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}
process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);
  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }
  queue.push(new Item(fun, args));
  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
};

// v8 likes predictible objects
function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}
Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};
process.title = 'browser';
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};
function noop() {}
process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;
process.listeners = function (name) {
  return [];
};
process.binding = function (name) {
  throw new Error('process.binding is not supported');
};
process.cwd = function () {
  return '/';
};
process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};
process.umask = function () {
  return 0;
};
},{}],"../node_modules/reflect-metadata/Reflect.js":[function(require,module,exports) {
var global = arguments[3];
var process = require("process");
/*! *****************************************************************************
Copyright (C) Microsoft. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
var Reflect;
(function (Reflect) {
  // Metadata Proposal
  // https://rbuckton.github.io/reflect-metadata/
  (function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : Function("return this;")();
    var exporter = makeExporter(Reflect);
    if (typeof root.Reflect === "undefined") {
      root.Reflect = Reflect;
    } else {
      exporter = makeExporter(root.Reflect, exporter);
    }
    factory(exporter);
    function makeExporter(target, previous) {
      return function (key, value) {
        if (typeof target[key] !== "function") {
          Object.defineProperty(target, key, {
            configurable: true,
            writable: true,
            value: value
          });
        }
        if (previous) previous(key, value);
      };
    }
  })(function (exporter) {
    var hasOwn = Object.prototype.hasOwnProperty;
    // feature test for Symbol support
    var supportsSymbol = typeof Symbol === "function";
    var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== "undefined" ? Symbol.toPrimitive : "@@toPrimitive";
    var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== "undefined" ? Symbol.iterator : "@@iterator";
    var supportsCreate = typeof Object.create === "function"; // feature test for Object.create support
    var supportsProto = {
      __proto__: []
    } instanceof Array; // feature test for __proto__ support
    var downLevel = !supportsCreate && !supportsProto;
    var HashMap = {
      // create an object in dictionary mode (a.k.a. "slow" mode in v8)
      create: supportsCreate ? function () {
        return MakeDictionary(Object.create(null));
      } : supportsProto ? function () {
        return MakeDictionary({
          __proto__: null
        });
      } : function () {
        return MakeDictionary({});
      },
      has: downLevel ? function (map, key) {
        return hasOwn.call(map, key);
      } : function (map, key) {
        return key in map;
      },
      get: downLevel ? function (map, key) {
        return hasOwn.call(map, key) ? map[key] : undefined;
      } : function (map, key) {
        return map[key];
      }
    };
    // Load global or shim versions of Map, Set, and WeakMap
    var functionPrototype = Object.getPrototypeOf(Function);
    var usePolyfill = typeof process === "object" && process.env && undefined === "true";
    var _Map = !usePolyfill && typeof Map === "function" && typeof Map.prototype.entries === "function" ? Map : CreateMapPolyfill();
    var _Set = !usePolyfill && typeof Set === "function" && typeof Set.prototype.entries === "function" ? Set : CreateSetPolyfill();
    var _WeakMap = !usePolyfill && typeof WeakMap === "function" ? WeakMap : CreateWeakMapPolyfill();
    // [[Metadata]] internal slot
    // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots
    var Metadata = new _WeakMap();
    /**
     * Applies a set of decorators to a property of a target object.
     * @param decorators An array of decorators.
     * @param target The target object.
     * @param propertyKey (Optional) The property key to decorate.
     * @param attributes (Optional) The property descriptor for the target key.
     * @remarks Decorators are applied in reverse order.
     * @example
     *
     *     class Example {
     *         // property declarations are not part of ES6, though they are valid in TypeScript:
     *         // static staticProperty;
     *         // property;
     *
     *         constructor(p) { }
     *         static staticMethod(p) { }
     *         method(p) { }
     *     }
     *
     *     // constructor
     *     Example = Reflect.decorate(decoratorsArray, Example);
     *
     *     // property (on constructor)
     *     Reflect.decorate(decoratorsArray, Example, "staticProperty");
     *
     *     // property (on prototype)
     *     Reflect.decorate(decoratorsArray, Example.prototype, "property");
     *
     *     // method (on constructor)
     *     Object.defineProperty(Example, "staticMethod",
     *         Reflect.decorate(decoratorsArray, Example, "staticMethod",
     *             Object.getOwnPropertyDescriptor(Example, "staticMethod")));
     *
     *     // method (on prototype)
     *     Object.defineProperty(Example.prototype, "method",
     *         Reflect.decorate(decoratorsArray, Example.prototype, "method",
     *             Object.getOwnPropertyDescriptor(Example.prototype, "method")));
     *
     */
    function decorate(decorators, target, propertyKey, attributes) {
      if (!IsUndefined(propertyKey)) {
        if (!IsArray(decorators)) throw new TypeError();
        if (!IsObject(target)) throw new TypeError();
        if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes)) throw new TypeError();
        if (IsNull(attributes)) attributes = undefined;
        propertyKey = ToPropertyKey(propertyKey);
        return DecorateProperty(decorators, target, propertyKey, attributes);
      } else {
        if (!IsArray(decorators)) throw new TypeError();
        if (!IsConstructor(target)) throw new TypeError();
        return DecorateConstructor(decorators, target);
      }
    }
    exporter("decorate", decorate);
    // 4.1.2 Reflect.metadata(metadataKey, metadataValue)
    // https://rbuckton.github.io/reflect-metadata/#reflect.metadata
    /**
     * A default metadata decorator factory that can be used on a class, class member, or parameter.
     * @param metadataKey The key for the metadata entry.
     * @param metadataValue The value for the metadata entry.
     * @returns A decorator function.
     * @remarks
     * If `metadataKey` is already defined for the target and target key, the
     * metadataValue for that key will be overwritten.
     * @example
     *
     *     // constructor
     *     @Reflect.metadata(key, value)
     *     class Example {
     *     }
     *
     *     // property (on constructor, TypeScript only)
     *     class Example {
     *         @Reflect.metadata(key, value)
     *         static staticProperty;
     *     }
     *
     *     // property (on prototype, TypeScript only)
     *     class Example {
     *         @Reflect.metadata(key, value)
     *         property;
     *     }
     *
     *     // method (on constructor)
     *     class Example {
     *         @Reflect.metadata(key, value)
     *         static staticMethod() { }
     *     }
     *
     *     // method (on prototype)
     *     class Example {
     *         @Reflect.metadata(key, value)
     *         method() { }
     *     }
     *
     */
    function metadata(metadataKey, metadataValue) {
      function decorator(target, propertyKey) {
        if (!IsObject(target)) throw new TypeError();
        if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey)) throw new TypeError();
        OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
      }
      return decorator;
    }
    exporter("metadata", metadata);
    /**
     * Define a unique metadata entry on the target.
     * @param metadataKey A key used to store and retrieve metadata.
     * @param metadataValue A value that contains attached metadata.
     * @param target The target object on which to define metadata.
     * @param propertyKey (Optional) The property key for the target.
     * @example
     *
     *     class Example {
     *         // property declarations are not part of ES6, though they are valid in TypeScript:
     *         // static staticProperty;
     *         // property;
     *
     *         constructor(p) { }
     *         static staticMethod(p) { }
     *         method(p) { }
     *     }
     *
     *     // constructor
     *     Reflect.defineMetadata("custom:annotation", options, Example);
     *
     *     // property (on constructor)
     *     Reflect.defineMetadata("custom:annotation", options, Example, "staticProperty");
     *
     *     // property (on prototype)
     *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "property");
     *
     *     // method (on constructor)
     *     Reflect.defineMetadata("custom:annotation", options, Example, "staticMethod");
     *
     *     // method (on prototype)
     *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "method");
     *
     *     // decorator factory as metadata-producing annotation.
     *     function MyAnnotation(options): Decorator {
     *         return (target, key?) => Reflect.defineMetadata("custom:annotation", options, target, key);
     *     }
     *
     */
    function defineMetadata(metadataKey, metadataValue, target, propertyKey) {
      if (!IsObject(target)) throw new TypeError();
      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
      return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
    }
    exporter("defineMetadata", defineMetadata);
    /**
     * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.
     * @param metadataKey A key used to store and retrieve metadata.
     * @param target The target object on which the metadata is defined.
     * @param propertyKey (Optional) The property key for the target.
     * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.
     * @example
     *
     *     class Example {
     *         // property declarations are not part of ES6, though they are valid in TypeScript:
     *         // static staticProperty;
     *         // property;
     *
     *         constructor(p) { }
     *         static staticMethod(p) { }
     *         method(p) { }
     *     }
     *
     *     // constructor
     *     result = Reflect.hasMetadata("custom:annotation", Example);
     *
     *     // property (on constructor)
     *     result = Reflect.hasMetadata("custom:annotation", Example, "staticProperty");
     *
     *     // property (on prototype)
     *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "property");
     *
     *     // method (on constructor)
     *     result = Reflect.hasMetadata("custom:annotation", Example, "staticMethod");
     *
     *     // method (on prototype)
     *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "method");
     *
     */
    function hasMetadata(metadataKey, target, propertyKey) {
      if (!IsObject(target)) throw new TypeError();
      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
      return OrdinaryHasMetadata(metadataKey, target, propertyKey);
    }
    exporter("hasMetadata", hasMetadata);
    /**
     * Gets a value indicating whether the target object has the provided metadata key defined.
     * @param metadataKey A key used to store and retrieve metadata.
     * @param target The target object on which the metadata is defined.
     * @param propertyKey (Optional) The property key for the target.
     * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.
     * @example
     *
     *     class Example {
     *         // property declarations are not part of ES6, though they are valid in TypeScript:
     *         // static staticProperty;
     *         // property;
     *
     *         constructor(p) { }
     *         static staticMethod(p) { }
     *         method(p) { }
     *     }
     *
     *     // constructor
     *     result = Reflect.hasOwnMetadata("custom:annotation", Example);
     *
     *     // property (on constructor)
     *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticProperty");
     *
     *     // property (on prototype)
     *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "property");
     *
     *     // method (on constructor)
     *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticMethod");
     *
     *     // method (on prototype)
     *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "method");
     *
     */
    function hasOwnMetadata(metadataKey, target, propertyKey) {
      if (!IsObject(target)) throw new TypeError();
      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
      return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);
    }
    exporter("hasOwnMetadata", hasOwnMetadata);
    /**
     * Gets the metadata value for the provided metadata key on the target object or its prototype chain.
     * @param metadataKey A key used to store and retrieve metadata.
     * @param target The target object on which the metadata is defined.
     * @param propertyKey (Optional) The property key for the target.
     * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
     * @example
     *
     *     class Example {
     *         // property declarations are not part of ES6, though they are valid in TypeScript:
     *         // static staticProperty;
     *         // property;
     *
     *         constructor(p) { }
     *         static staticMethod(p) { }
     *         method(p) { }
     *     }
     *
     *     // constructor
     *     result = Reflect.getMetadata("custom:annotation", Example);
     *
     *     // property (on constructor)
     *     result = Reflect.getMetadata("custom:annotation", Example, "staticProperty");
     *
     *     // property (on prototype)
     *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "property");
     *
     *     // method (on constructor)
     *     result = Reflect.getMetadata("custom:annotation", Example, "staticMethod");
     *
     *     // method (on prototype)
     *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "method");
     *
     */
    function getMetadata(metadataKey, target, propertyKey) {
      if (!IsObject(target)) throw new TypeError();
      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
      return OrdinaryGetMetadata(metadataKey, target, propertyKey);
    }
    exporter("getMetadata", getMetadata);
    /**
     * Gets the metadata value for the provided metadata key on the target object.
     * @param metadataKey A key used to store and retrieve metadata.
     * @param target The target object on which the metadata is defined.
     * @param propertyKey (Optional) The property key for the target.
     * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
     * @example
     *
     *     class Example {
     *         // property declarations are not part of ES6, though they are valid in TypeScript:
     *         // static staticProperty;
     *         // property;
     *
     *         constructor(p) { }
     *         static staticMethod(p) { }
     *         method(p) { }
     *     }
     *
     *     // constructor
     *     result = Reflect.getOwnMetadata("custom:annotation", Example);
     *
     *     // property (on constructor)
     *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticProperty");
     *
     *     // property (on prototype)
     *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "property");
     *
     *     // method (on constructor)
     *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticMethod");
     *
     *     // method (on prototype)
     *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "method");
     *
     */
    function getOwnMetadata(metadataKey, target, propertyKey) {
      if (!IsObject(target)) throw new TypeError();
      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
      return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);
    }
    exporter("getOwnMetadata", getOwnMetadata);
    /**
     * Gets the metadata keys defined on the target object or its prototype chain.
     * @param target The target object on which the metadata is defined.
     * @param propertyKey (Optional) The property key for the target.
     * @returns An array of unique metadata keys.
     * @example
     *
     *     class Example {
     *         // property declarations are not part of ES6, though they are valid in TypeScript:
     *         // static staticProperty;
     *         // property;
     *
     *         constructor(p) { }
     *         static staticMethod(p) { }
     *         method(p) { }
     *     }
     *
     *     // constructor
     *     result = Reflect.getMetadataKeys(Example);
     *
     *     // property (on constructor)
     *     result = Reflect.getMetadataKeys(Example, "staticProperty");
     *
     *     // property (on prototype)
     *     result = Reflect.getMetadataKeys(Example.prototype, "property");
     *
     *     // method (on constructor)
     *     result = Reflect.getMetadataKeys(Example, "staticMethod");
     *
     *     // method (on prototype)
     *     result = Reflect.getMetadataKeys(Example.prototype, "method");
     *
     */
    function getMetadataKeys(target, propertyKey) {
      if (!IsObject(target)) throw new TypeError();
      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
      return OrdinaryMetadataKeys(target, propertyKey);
    }
    exporter("getMetadataKeys", getMetadataKeys);
    /**
     * Gets the unique metadata keys defined on the target object.
     * @param target The target object on which the metadata is defined.
     * @param propertyKey (Optional) The property key for the target.
     * @returns An array of unique metadata keys.
     * @example
     *
     *     class Example {
     *         // property declarations are not part of ES6, though they are valid in TypeScript:
     *         // static staticProperty;
     *         // property;
     *
     *         constructor(p) { }
     *         static staticMethod(p) { }
     *         method(p) { }
     *     }
     *
     *     // constructor
     *     result = Reflect.getOwnMetadataKeys(Example);
     *
     *     // property (on constructor)
     *     result = Reflect.getOwnMetadataKeys(Example, "staticProperty");
     *
     *     // property (on prototype)
     *     result = Reflect.getOwnMetadataKeys(Example.prototype, "property");
     *
     *     // method (on constructor)
     *     result = Reflect.getOwnMetadataKeys(Example, "staticMethod");
     *
     *     // method (on prototype)
     *     result = Reflect.getOwnMetadataKeys(Example.prototype, "method");
     *
     */
    function getOwnMetadataKeys(target, propertyKey) {
      if (!IsObject(target)) throw new TypeError();
      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
      return OrdinaryOwnMetadataKeys(target, propertyKey);
    }
    exporter("getOwnMetadataKeys", getOwnMetadataKeys);
    /**
     * Deletes the metadata entry from the target object with the provided key.
     * @param metadataKey A key used to store and retrieve metadata.
     * @param target The target object on which the metadata is defined.
     * @param propertyKey (Optional) The property key for the target.
     * @returns `true` if the metadata entry was found and deleted; otherwise, false.
     * @example
     *
     *     class Example {
     *         // property declarations are not part of ES6, though they are valid in TypeScript:
     *         // static staticProperty;
     *         // property;
     *
     *         constructor(p) { }
     *         static staticMethod(p) { }
     *         method(p) { }
     *     }
     *
     *     // constructor
     *     result = Reflect.deleteMetadata("custom:annotation", Example);
     *
     *     // property (on constructor)
     *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticProperty");
     *
     *     // property (on prototype)
     *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "property");
     *
     *     // method (on constructor)
     *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticMethod");
     *
     *     // method (on prototype)
     *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "method");
     *
     */
    function deleteMetadata(metadataKey, target, propertyKey) {
      if (!IsObject(target)) throw new TypeError();
      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
      var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/false);
      if (IsUndefined(metadataMap)) return false;
      if (!metadataMap.delete(metadataKey)) return false;
      if (metadataMap.size > 0) return true;
      var targetMetadata = Metadata.get(target);
      targetMetadata.delete(propertyKey);
      if (targetMetadata.size > 0) return true;
      Metadata.delete(target);
      return true;
    }
    exporter("deleteMetadata", deleteMetadata);
    function DecorateConstructor(decorators, target) {
      for (var i = decorators.length - 1; i >= 0; --i) {
        var decorator = decorators[i];
        var decorated = decorator(target);
        if (!IsUndefined(decorated) && !IsNull(decorated)) {
          if (!IsConstructor(decorated)) throw new TypeError();
          target = decorated;
        }
      }
      return target;
    }
    function DecorateProperty(decorators, target, propertyKey, descriptor) {
      for (var i = decorators.length - 1; i >= 0; --i) {
        var decorator = decorators[i];
        var decorated = decorator(target, propertyKey, descriptor);
        if (!IsUndefined(decorated) && !IsNull(decorated)) {
          if (!IsObject(decorated)) throw new TypeError();
          descriptor = decorated;
        }
      }
      return descriptor;
    }
    function GetOrCreateMetadataMap(O, P, Create) {
      var targetMetadata = Metadata.get(O);
      if (IsUndefined(targetMetadata)) {
        if (!Create) return undefined;
        targetMetadata = new _Map();
        Metadata.set(O, targetMetadata);
      }
      var metadataMap = targetMetadata.get(P);
      if (IsUndefined(metadataMap)) {
        if (!Create) return undefined;
        metadataMap = new _Map();
        targetMetadata.set(P, metadataMap);
      }
      return metadataMap;
    }
    // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)
    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata
    function OrdinaryHasMetadata(MetadataKey, O, P) {
      var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
      if (hasOwn) return true;
      var parent = OrdinaryGetPrototypeOf(O);
      if (!IsNull(parent)) return OrdinaryHasMetadata(MetadataKey, parent, P);
      return false;
    }
    // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)
    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata
    function OrdinaryHasOwnMetadata(MetadataKey, O, P) {
      var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/false);
      if (IsUndefined(metadataMap)) return false;
      return ToBoolean(metadataMap.has(MetadataKey));
    }
    // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)
    // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata
    function OrdinaryGetMetadata(MetadataKey, O, P) {
      var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
      if (hasOwn) return OrdinaryGetOwnMetadata(MetadataKey, O, P);
      var parent = OrdinaryGetPrototypeOf(O);
      if (!IsNull(parent)) return OrdinaryGetMetadata(MetadataKey, parent, P);
      return undefined;
    }
    // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)
    // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata
    function OrdinaryGetOwnMetadata(MetadataKey, O, P) {
      var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/false);
      if (IsUndefined(metadataMap)) return undefined;
      return metadataMap.get(MetadataKey);
    }
    // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)
    // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata
    function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {
      var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/true);
      metadataMap.set(MetadataKey, MetadataValue);
    }
    // 3.1.6.1 OrdinaryMetadataKeys(O, P)
    // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys
    function OrdinaryMetadataKeys(O, P) {
      var ownKeys = OrdinaryOwnMetadataKeys(O, P);
      var parent = OrdinaryGetPrototypeOf(O);
      if (parent === null) return ownKeys;
      var parentKeys = OrdinaryMetadataKeys(parent, P);
      if (parentKeys.length <= 0) return ownKeys;
      if (ownKeys.length <= 0) return parentKeys;
      var set = new _Set();
      var keys = [];
      for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {
        var key = ownKeys_1[_i];
        var hasKey = set.has(key);
        if (!hasKey) {
          set.add(key);
          keys.push(key);
        }
      }
      for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {
        var key = parentKeys_1[_a];
        var hasKey = set.has(key);
        if (!hasKey) {
          set.add(key);
          keys.push(key);
        }
      }
      return keys;
    }
    // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)
    // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys
    function OrdinaryOwnMetadataKeys(O, P) {
      var keys = [];
      var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/false);
      if (IsUndefined(metadataMap)) return keys;
      var keysObj = metadataMap.keys();
      var iterator = GetIterator(keysObj);
      var k = 0;
      while (true) {
        var next = IteratorStep(iterator);
        if (!next) {
          keys.length = k;
          return keys;
        }
        var nextValue = IteratorValue(next);
        try {
          keys[k] = nextValue;
        } catch (e) {
          try {
            IteratorClose(iterator);
          } finally {
            throw e;
          }
        }
        k++;
      }
    }
    // 6 ECMAScript Data Typ0es and Values
    // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values
    function Type(x) {
      if (x === null) return 1 /* Null */;
      switch (typeof x) {
        case "undefined":
          return 0 /* Undefined */;
        case "boolean":
          return 2 /* Boolean */;
        case "string":
          return 3 /* String */;
        case "symbol":
          return 4 /* Symbol */;
        case "number":
          return 5 /* Number */;
        case "object":
          return x === null ? 1 /* Null */ : 6 /* Object */;
        default:
          return 6 /* Object */;
      }
    }
    // 6.1.1 The Undefined Type
    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type
    function IsUndefined(x) {
      return x === undefined;
    }
    // 6.1.2 The Null Type
    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type
    function IsNull(x) {
      return x === null;
    }
    // 6.1.5 The Symbol Type
    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type
    function IsSymbol(x) {
      return typeof x === "symbol";
    }
    // 6.1.7 The Object Type
    // https://tc39.github.io/ecma262/#sec-object-type
    function IsObject(x) {
      return typeof x === "object" ? x !== null : typeof x === "function";
    }
    // 7.1 Type Conversion
    // https://tc39.github.io/ecma262/#sec-type-conversion
    // 7.1.1 ToPrimitive(input [, PreferredType])
    // https://tc39.github.io/ecma262/#sec-toprimitive
    function ToPrimitive(input, PreferredType) {
      switch (Type(input)) {
        case 0 /* Undefined */:
          return input;
        case 1 /* Null */:
          return input;
        case 2 /* Boolean */:
          return input;
        case 3 /* String */:
          return input;
        case 4 /* Symbol */:
          return input;
        case 5 /* Number */:
          return input;
      }
      var hint = PreferredType === 3 /* String */ ? "string" : PreferredType === 5 /* Number */ ? "number" : "default";
      var exoticToPrim = GetMethod(input, toPrimitiveSymbol);
      if (exoticToPrim !== undefined) {
        var result = exoticToPrim.call(input, hint);
        if (IsObject(result)) throw new TypeError();
        return result;
      }
      return OrdinaryToPrimitive(input, hint === "default" ? "number" : hint);
    }
    // 7.1.1.1 OrdinaryToPrimitive(O, hint)
    // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive
    function OrdinaryToPrimitive(O, hint) {
      if (hint === "string") {
        var toString_1 = O.toString;
        if (IsCallable(toString_1)) {
          var result = toString_1.call(O);
          if (!IsObject(result)) return result;
        }
        var valueOf = O.valueOf;
        if (IsCallable(valueOf)) {
          var result = valueOf.call(O);
          if (!IsObject(result)) return result;
        }
      } else {
        var valueOf = O.valueOf;
        if (IsCallable(valueOf)) {
          var result = valueOf.call(O);
          if (!IsObject(result)) return result;
        }
        var toString_2 = O.toString;
        if (IsCallable(toString_2)) {
          var result = toString_2.call(O);
          if (!IsObject(result)) return result;
        }
      }
      throw new TypeError();
    }
    // 7.1.2 ToBoolean(argument)
    // https://tc39.github.io/ecma262/2016/#sec-toboolean
    function ToBoolean(argument) {
      return !!argument;
    }
    // 7.1.12 ToString(argument)
    // https://tc39.github.io/ecma262/#sec-tostring
    function ToString(argument) {
      return "" + argument;
    }
    // 7.1.14 ToPropertyKey(argument)
    // https://tc39.github.io/ecma262/#sec-topropertykey
    function ToPropertyKey(argument) {
      var key = ToPrimitive(argument, 3 /* String */);
      if (IsSymbol(key)) return key;
      return ToString(key);
    }
    // 7.2 Testing and Comparison Operations
    // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations
    // 7.2.2 IsArray(argument)
    // https://tc39.github.io/ecma262/#sec-isarray
    function IsArray(argument) {
      return Array.isArray ? Array.isArray(argument) : argument instanceof Object ? argument instanceof Array : Object.prototype.toString.call(argument) === "[object Array]";
    }
    // 7.2.3 IsCallable(argument)
    // https://tc39.github.io/ecma262/#sec-iscallable
    function IsCallable(argument) {
      // NOTE: This is an approximation as we cannot check for [[Call]] internal method.
      return typeof argument === "function";
    }
    // 7.2.4 IsConstructor(argument)
    // https://tc39.github.io/ecma262/#sec-isconstructor
    function IsConstructor(argument) {
      // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.
      return typeof argument === "function";
    }
    // 7.2.7 IsPropertyKey(argument)
    // https://tc39.github.io/ecma262/#sec-ispropertykey
    function IsPropertyKey(argument) {
      switch (Type(argument)) {
        case 3 /* String */:
          return true;
        case 4 /* Symbol */:
          return true;
        default:
          return false;
      }
    }
    // 7.3 Operations on Objects
    // https://tc39.github.io/ecma262/#sec-operations-on-objects
    // 7.3.9 GetMethod(V, P)
    // https://tc39.github.io/ecma262/#sec-getmethod
    function GetMethod(V, P) {
      var func = V[P];
      if (func === undefined || func === null) return undefined;
      if (!IsCallable(func)) throw new TypeError();
      return func;
    }
    // 7.4 Operations on Iterator Objects
    // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects
    function GetIterator(obj) {
      var method = GetMethod(obj, iteratorSymbol);
      if (!IsCallable(method)) throw new TypeError(); // from Call
      var iterator = method.call(obj);
      if (!IsObject(iterator)) throw new TypeError();
      return iterator;
    }
    // 7.4.4 IteratorValue(iterResult)
    // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue
    function IteratorValue(iterResult) {
      return iterResult.value;
    }
    // 7.4.5 IteratorStep(iterator)
    // https://tc39.github.io/ecma262/#sec-iteratorstep
    function IteratorStep(iterator) {
      var result = iterator.next();
      return result.done ? false : result;
    }
    // 7.4.6 IteratorClose(iterator, completion)
    // https://tc39.github.io/ecma262/#sec-iteratorclose
    function IteratorClose(iterator) {
      var f = iterator["return"];
      if (f) f.call(iterator);
    }
    // 9.1 Ordinary Object Internal Methods and Internal Slots
    // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots
    // 9.1.1.1 OrdinaryGetPrototypeOf(O)
    // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof
    function OrdinaryGetPrototypeOf(O) {
      var proto = Object.getPrototypeOf(O);
      if (typeof O !== "function" || O === functionPrototype) return proto;
      // TypeScript doesn't set __proto__ in ES5, as it's non-standard.
      // Try to determine the superclass constructor. Compatible implementations
      // must either set __proto__ on a subclass constructor to the superclass constructor,
      // or ensure each class has a valid `constructor` property on its prototype that
      // points back to the constructor.
      // If this is not the same as Function.[[Prototype]], then this is definately inherited.
      // This is the case when in ES6 or when using __proto__ in a compatible browser.
      if (proto !== functionPrototype) return proto;
      // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.
      var prototype = O.prototype;
      var prototypeProto = prototype && Object.getPrototypeOf(prototype);
      if (prototypeProto == null || prototypeProto === Object.prototype) return proto;
      // If the constructor was not a function, then we cannot determine the heritage.
      var constructor = prototypeProto.constructor;
      if (typeof constructor !== "function") return proto;
      // If we have some kind of self-reference, then we cannot determine the heritage.
      if (constructor === O) return proto;
      // we have a pretty good guess at the heritage.
      return constructor;
    }
    // naive Map shim
    function CreateMapPolyfill() {
      var cacheSentinel = {};
      var arraySentinel = [];
      var MapIterator = /** @class */function () {
        function MapIterator(keys, values, selector) {
          this._index = 0;
          this._keys = keys;
          this._values = values;
          this._selector = selector;
        }
        MapIterator.prototype["@@iterator"] = function () {
          return this;
        };
        MapIterator.prototype[iteratorSymbol] = function () {
          return this;
        };
        MapIterator.prototype.next = function () {
          var index = this._index;
          if (index >= 0 && index < this._keys.length) {
            var result = this._selector(this._keys[index], this._values[index]);
            if (index + 1 >= this._keys.length) {
              this._index = -1;
              this._keys = arraySentinel;
              this._values = arraySentinel;
            } else {
              this._index++;
            }
            return {
              value: result,
              done: false
            };
          }
          return {
            value: undefined,
            done: true
          };
        };
        MapIterator.prototype.throw = function (error) {
          if (this._index >= 0) {
            this._index = -1;
            this._keys = arraySentinel;
            this._values = arraySentinel;
          }
          throw error;
        };
        MapIterator.prototype.return = function (value) {
          if (this._index >= 0) {
            this._index = -1;
            this._keys = arraySentinel;
            this._values = arraySentinel;
          }
          return {
            value: value,
            done: true
          };
        };
        return MapIterator;
      }();
      return (/** @class */function () {
          function Map() {
            this._keys = [];
            this._values = [];
            this._cacheKey = cacheSentinel;
            this._cacheIndex = -2;
          }
          Object.defineProperty(Map.prototype, "size", {
            get: function () {
              return this._keys.length;
            },
            enumerable: true,
            configurable: true
          });
          Map.prototype.has = function (key) {
            return this._find(key, /*insert*/false) >= 0;
          };
          Map.prototype.get = function (key) {
            var index = this._find(key, /*insert*/false);
            return index >= 0 ? this._values[index] : undefined;
          };
          Map.prototype.set = function (key, value) {
            var index = this._find(key, /*insert*/true);
            this._values[index] = value;
            return this;
          };
          Map.prototype.delete = function (key) {
            var index = this._find(key, /*insert*/false);
            if (index >= 0) {
              var size = this._keys.length;
              for (var i = index + 1; i < size; i++) {
                this._keys[i - 1] = this._keys[i];
                this._values[i - 1] = this._values[i];
              }
              this._keys.length--;
              this._values.length--;
              if (key === this._cacheKey) {
                this._cacheKey = cacheSentinel;
                this._cacheIndex = -2;
              }
              return true;
            }
            return false;
          };
          Map.prototype.clear = function () {
            this._keys.length = 0;
            this._values.length = 0;
            this._cacheKey = cacheSentinel;
            this._cacheIndex = -2;
          };
          Map.prototype.keys = function () {
            return new MapIterator(this._keys, this._values, getKey);
          };
          Map.prototype.values = function () {
            return new MapIterator(this._keys, this._values, getValue);
          };
          Map.prototype.entries = function () {
            return new MapIterator(this._keys, this._values, getEntry);
          };
          Map.prototype["@@iterator"] = function () {
            return this.entries();
          };
          Map.prototype[iteratorSymbol] = function () {
            return this.entries();
          };
          Map.prototype._find = function (key, insert) {
            if (this._cacheKey !== key) {
              this._cacheIndex = this._keys.indexOf(this._cacheKey = key);
            }
            if (this._cacheIndex < 0 && insert) {
              this._cacheIndex = this._keys.length;
              this._keys.push(key);
              this._values.push(undefined);
            }
            return this._cacheIndex;
          };
          return Map;
        }()
      );
      function getKey(key, _) {
        return key;
      }
      function getValue(_, value) {
        return value;
      }
      function getEntry(key, value) {
        return [key, value];
      }
    }
    // naive Set shim
    function CreateSetPolyfill() {
      return (/** @class */function () {
          function Set() {
            this._map = new _Map();
          }
          Object.defineProperty(Set.prototype, "size", {
            get: function () {
              return this._map.size;
            },
            enumerable: true,
            configurable: true
          });
          Set.prototype.has = function (value) {
            return this._map.has(value);
          };
          Set.prototype.add = function (value) {
            return this._map.set(value, value), this;
          };
          Set.prototype.delete = function (value) {
            return this._map.delete(value);
          };
          Set.prototype.clear = function () {
            this._map.clear();
          };
          Set.prototype.keys = function () {
            return this._map.keys();
          };
          Set.prototype.values = function () {
            return this._map.values();
          };
          Set.prototype.entries = function () {
            return this._map.entries();
          };
          Set.prototype["@@iterator"] = function () {
            return this.keys();
          };
          Set.prototype[iteratorSymbol] = function () {
            return this.keys();
          };
          return Set;
        }()
      );
    }
    // naive WeakMap shim
    function CreateWeakMapPolyfill() {
      var UUID_SIZE = 16;
      var keys = HashMap.create();
      var rootKey = CreateUniqueKey();
      return (/** @class */function () {
          function WeakMap() {
            this._key = CreateUniqueKey();
          }
          WeakMap.prototype.has = function (target) {
            var table = GetOrCreateWeakMapTable(target, /*create*/false);
            return table !== undefined ? HashMap.has(table, this._key) : false;
          };
          WeakMap.prototype.get = function (target) {
            var table = GetOrCreateWeakMapTable(target, /*create*/false);
            return table !== undefined ? HashMap.get(table, this._key) : undefined;
          };
          WeakMap.prototype.set = function (target, value) {
            var table = GetOrCreateWeakMapTable(target, /*create*/true);
            table[this._key] = value;
            return this;
          };
          WeakMap.prototype.delete = function (target) {
            var table = GetOrCreateWeakMapTable(target, /*create*/false);
            return table !== undefined ? delete table[this._key] : false;
          };
          WeakMap.prototype.clear = function () {
            // NOTE: not a real clear, just makes the previous data unreachable
            this._key = CreateUniqueKey();
          };
          return WeakMap;
        }()
      );
      function CreateUniqueKey() {
        var key;
        do key = "@@WeakMap@@" + CreateUUID(); while (HashMap.has(keys, key));
        keys[key] = true;
        return key;
      }
      function GetOrCreateWeakMapTable(target, create) {
        if (!hasOwn.call(target, rootKey)) {
          if (!create) return undefined;
          Object.defineProperty(target, rootKey, {
            value: HashMap.create()
          });
        }
        return target[rootKey];
      }
      function FillRandomBytes(buffer, size) {
        for (var i = 0; i < size; ++i) buffer[i] = Math.random() * 0xff | 0;
        return buffer;
      }
      function GenRandomBytes(size) {
        if (typeof Uint8Array === "function") {
          if (typeof crypto !== "undefined") return crypto.getRandomValues(new Uint8Array(size));
          if (typeof msCrypto !== "undefined") return msCrypto.getRandomValues(new Uint8Array(size));
          return FillRandomBytes(new Uint8Array(size), size);
        }
        return FillRandomBytes(new Array(size), size);
      }
      function CreateUUID() {
        var data = GenRandomBytes(UUID_SIZE);
        // mark as random - RFC 4122 § 4.4
        data[6] = data[6] & 0x4f | 0x40;
        data[8] = data[8] & 0xbf | 0x80;
        var result = "";
        for (var offset = 0; offset < UUID_SIZE; ++offset) {
          var byte = data[offset];
          if (offset === 4 || offset === 6 || offset === 8) result += "-";
          if (byte < 16) result += "0";
          result += byte.toString(16).toLowerCase();
        }
        return result;
      }
    }
    // uses a heuristic used by v8 and chakra to force an object into dictionary mode.
    function MakeDictionary(obj) {
      obj.__ = undefined;
      delete obj.__;
      return obj;
    }
  });
})(Reflect || (Reflect = {}));
},{"process":"../node_modules/process/browser.js"}],"../node_modules/inversify-inject-decorators/lib/decorators.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var INJECTION = Symbol.for("INJECTION");
function _proxyGetter(proto, key, resolve, doCache) {
    function getter() {
        if (doCache && !Reflect.hasMetadata(INJECTION, this, key)) {
            Reflect.defineMetadata(INJECTION, resolve(), this, key);
        }
        if (Reflect.hasMetadata(INJECTION, this, key)) {
            return Reflect.getMetadata(INJECTION, this, key);
        }
        else {
            return resolve();
        }
    }
    function setter(newVal) {
        Reflect.defineMetadata(INJECTION, newVal, this, key);
    }
    Object.defineProperty(proto, key, {
        configurable: true,
        enumerable: true,
        get: getter,
        set: setter
    });
}
function makePropertyInjectDecorator(container, doCache) {
    return function (serviceIdentifier) {
        return function (proto, key) {
            var resolve = function () {
                return container.get(serviceIdentifier);
            };
            _proxyGetter(proto, key, resolve, doCache);
        };
    };
}
exports.makePropertyInjectDecorator = makePropertyInjectDecorator;
function makePropertyInjectNamedDecorator(container, doCache) {
    return function (serviceIdentifier, named) {
        return function (proto, key) {
            var resolve = function () {
                return container.getNamed(serviceIdentifier, named);
            };
            _proxyGetter(proto, key, resolve, doCache);
        };
    };
}
exports.makePropertyInjectNamedDecorator = makePropertyInjectNamedDecorator;
function makePropertyInjectTaggedDecorator(container, doCache) {
    return function (serviceIdentifier, key, value) {
        return function (proto, propertyName) {
            var resolve = function () {
                return container.getTagged(serviceIdentifier, key, value);
            };
            _proxyGetter(proto, propertyName, resolve, doCache);
        };
    };
}
exports.makePropertyInjectTaggedDecorator = makePropertyInjectTaggedDecorator;
function makePropertyMultiInjectDecorator(container, doCache) {
    return function (serviceIdentifier) {
        return function (proto, key) {
            var resolve = function () {
                return container.getAll(serviceIdentifier);
            };
            _proxyGetter(proto, key, resolve, doCache);
        };
    };
}
exports.makePropertyMultiInjectDecorator = makePropertyMultiInjectDecorator;

},{}],"../node_modules/inversify-inject-decorators/lib/index.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = require("./decorators");
function getDecorators(container, doCache) {
    if (doCache === void 0) { doCache = true; }
    var lazyInject = decorators_1.makePropertyInjectDecorator(container, doCache);
    var lazyInjectNamed = decorators_1.makePropertyInjectNamedDecorator(container, doCache);
    var lazyInjectTagged = decorators_1.makePropertyInjectTaggedDecorator(container, doCache);
    var lazyMultiInject = decorators_1.makePropertyMultiInjectDecorator(container, doCache);
    return {
        lazyInject: lazyInject,
        lazyInjectNamed: lazyInjectNamed,
        lazyInjectTagged: lazyInjectTagged,
        lazyMultiInject: lazyMultiInject
    };
}
exports.default = getDecorators;

},{"./decorators":"../node_modules/inversify-inject-decorators/lib/decorators.js"}],"common/utils.ts":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.copy = exports.toPromise = void 0;
function toPromise(callback) {
  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return new Promise(function (resolve) {
      callback.apply(void 0, args.concat([resolve]));
    });
  };
}
exports.toPromise = toPromise;
/**
 * Helper for copying text to system clipboard.
 */
function copy(text) {
  var input = document.createElement('textarea');
  input.innerHTML = text;
  document.body.appendChild(input);
  input.select();
  var result = document.execCommand('copy');
  document.body.removeChild(input);
  return result;
}
exports.copy = copy;
},{}],"common/message-service.ts":[function(require,module,exports) {
"use strict";

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
    d;
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = this && this.__metadata || function (k, v) {
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MessageService = void 0;
var inversify_1 = require("inversify");
var utils_1 = require("./utils");
require("reflect-metadata");
var MessageService = /*#__PURE__*/function () {
  function MessageService() {
    _classCallCheck(this, MessageService);
    this.eventMap = {};
    this.handleMessages();
  }
  /**
   * Send message to a {@link chrome.tabs.Tab}.
   */
  _createClass(MessageService, [{
    key: "sendTab",
    value: function sendTab(eventName) {
      var detail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        var tabs;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              if (chrome.tabs) {
                _context.next = 2;
                break;
              }
              return _context.abrupt("return", Promise.resolve(null));
            case 2:
              _context.next = 4;
              return utils_1.toPromise(chrome.tabs.query)({
                active: true,
                currentWindow: true
              });
            case 4:
              tabs = _context.sent;
              return _context.abrupt("return", utils_1.toPromise(chrome.tabs.sendMessage)(tabs[0].id, {
                eventName: eventName,
                detail: detail
              }));
            case 6:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
    }
    /**
     * Send message to runtime (background script).
     */
  }, {
    key: "send",
    value: function send(eventName) {
      var detail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              return _context2.abrupt("return", utils_1.toPromise(chrome.runtime.sendMessage)({
                eventName: eventName,
                detail: detail
              }));
            case 1:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
    }
  }, {
    key: "on",
    value: function on(eventName, callback) {
      this.eventMap[eventName] = callback;
    }
  }, {
    key: "handleMessages",
    value: function handleMessages() {
      var _this = this;
      if (!chrome.runtime.onMessage) {
        return;
      }
      chrome.runtime.onMessage.addListener(function (payload, _sender, sendResponse) {
        var callback = _this.eventMap[payload.eventName];
        if (callback) {
          Promise.resolve(callback(payload.detail)).then(function (result) {
            sendResponse(result);
          });
        }
        // keep the connection open during the async execution
        return true;
      });
    }
  }]);
  return MessageService;
}();
MessageService = __decorate([inversify_1.injectable(), __metadata("design:paramtypes", [])], MessageService);
exports.MessageService = MessageService;
},{"inversify":"../node_modules/inversify/lib/inversify.js","./utils":"common/utils.ts","reflect-metadata":"../node_modules/reflect-metadata/Reflect.js"}],"common/inversify.config.ts":[function(require,module,exports) {
"use strict";

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.lazyInject = exports.container = void 0;
var inversify_1 = require("inversify");
var inversify_inject_decorators_1 = __importDefault(require("inversify-inject-decorators"));
var message_service_1 = require("./message-service");
var container = new inversify_1.Container();
exports.container = container;
container.bind(message_service_1.MessageService).toSelf();
var _inversify_inject_dec = inversify_inject_decorators_1.default(container),
  lazyInject = _inversify_inject_dec.lazyInject;
exports.lazyInject = lazyInject;
},{"inversify":"../node_modules/inversify/lib/inversify.js","inversify-inject-decorators":"../node_modules/inversify-inject-decorators/lib/index.js","./message-service":"common/message-service.ts"}],"common/models.ts":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"common/content-injector.ts":[function(require,module,exports) {
"use strict";

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
    d;
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ContentInjector = void 0;
var inversify_1 = require("inversify");
var common_1 = require("~/common");
require("reflect-metadata");
var ContentInjector = /*#__PURE__*/function () {
  function ContentInjector() {
    _classCallCheck(this, ContentInjector);
  }
  _createClass(ContentInjector, [{
    key: "inject",
    value: function inject(tabId) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        var isInjected;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return this.isInjected(tabId);
            case 2:
              isInjected = _context.sent;
              if (!isInjected) {
                _context.next = 5;
                break;
              }
              return _context.abrupt("return");
            case 5:
              return _context.abrupt("return", common_1.toPromise(chrome.scripting.executeScript)({
                target: {
                  tabId: tabId
                },
                files: ['content.js']
              }));
            case 6:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
    }
  }, {
    key: "getActiveTabId",
    value: function getActiveTabId() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
        var tabs;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return common_1.toPromise(chrome.tabs.query)({
                active: true,
                currentWindow: true
              });
            case 2:
              tabs = _context2.sent;
              return _context2.abrupt("return", tabs[0].id);
            case 4:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
    }
  }, {
    key: "runCode",
    value: function runCode() {
      var a = document.querySelector('ac-root');
      return a ? true : null;
    }
  }, {
    key: "isInjected",
    value: function isInjected(tabId) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
        var results;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return common_1.toPromise(chrome.scripting.executeScript)({
                target: {
                  tabId: tabId
                },
                func: this.runCode
              });
            case 2:
              results = _context3.sent;
              return _context3.abrupt("return", results[0].result);
            case 4:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
    }
  }]);
  return ContentInjector;
}();
ContentInjector = __decorate([inversify_1.injectable()], ContentInjector);
exports.ContentInjector = ContentInjector;
},{"inversify":"../node_modules/inversify/lib/inversify.js","~/common":"common/index.ts","reflect-metadata":"../node_modules/reflect-metadata/Reflect.js"}],"common/index.ts":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
__exportStar(require("./inversify.config"), exports);
__exportStar(require("./message-service"), exports);
__exportStar(require("./utils"), exports);
__exportStar(require("./models"), exports);
__exportStar(require("./content-injector"), exports);
},{"./inversify.config":"common/inversify.config.ts","./message-service":"common/message-service.ts","./utils":"common/utils.ts","./models":"common/models.ts","./content-injector":"common/content-injector.ts"}],"../node_modules/lit-html/lib/dom.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reparentNodes = exports.removeNodes = exports.isCEPolyfill = void 0;
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
/**
 * True if the custom elements polyfill is in use.
 */
const isCEPolyfill = typeof window !== 'undefined' && window.customElements != null && window.customElements.polyfillWrapFlushCallback !== undefined;
/**
 * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),
 * into another container (could be the same container), before `before`. If
 * `before` is null, it appends the nodes to the container.
 */
exports.isCEPolyfill = isCEPolyfill;
const reparentNodes = (container, start, end = null, before = null) => {
  while (start !== end) {
    const n = start.nextSibling;
    container.insertBefore(start, before);
    start = n;
  }
};
/**
 * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from
 * `container`.
 */
exports.reparentNodes = reparentNodes;
const removeNodes = (container, start, end = null) => {
  while (start !== end) {
    const n = start.nextSibling;
    container.removeChild(start);
    start = n;
  }
};
exports.removeNodes = removeNodes;
},{}],"../node_modules/lit-html/lib/template.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nodeMarker = exports.markerRegex = exports.marker = exports.lastAttributeNameRegex = exports.isTemplatePartActive = exports.createMarker = exports.boundAttributeSuffix = exports.Template = void 0;
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
/**
 * An expression marker with embedded unique key to avoid collision with
 * possible text in templates.
 */
const marker = `{{lit-${String(Math.random()).slice(2)}}}`;
/**
 * An expression marker used text-positions, multi-binding attributes, and
 * attributes with markup-like text values.
 */
exports.marker = marker;
const nodeMarker = `<!--${marker}-->`;
exports.nodeMarker = nodeMarker;
const markerRegex = new RegExp(`${marker}|${nodeMarker}`);
/**
 * Suffix appended to all bound attribute names.
 */
exports.markerRegex = markerRegex;
const boundAttributeSuffix = '$lit$';
/**
 * An updatable Template that tracks the location of dynamic parts.
 */
exports.boundAttributeSuffix = boundAttributeSuffix;
class Template {
  constructor(result, element) {
    this.parts = [];
    this.element = element;
    const nodesToRemove = [];
    const stack = [];
    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null
    const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);
    // Keeps track of the last index associated with a part. We try to delete
    // unnecessary nodes, but we never want to associate two different parts
    // to the same index. They must have a constant node between.
    let lastPartIndex = 0;
    let index = -1;
    let partIndex = 0;
    const {
      strings,
      values: {
        length
      }
    } = result;
    while (partIndex < length) {
      const node = walker.nextNode();
      if (node === null) {
        // We've exhausted the content inside a nested template element.
        // Because we still have parts (the outer for-loop), we know:
        // - There is a template in the stack
        // - The walker will find a nextNode outside the template
        walker.currentNode = stack.pop();
        continue;
      }
      index++;
      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {
        if (node.hasAttributes()) {
          const attributes = node.attributes;
          const {
            length
          } = attributes;
          // Per
          // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,
          // attributes are not guaranteed to be returned in document order.
          // In particular, Edge/IE can return them out of order, so we cannot
          // assume a correspondence between part index and attribute index.
          let count = 0;
          for (let i = 0; i < length; i++) {
            if (endsWith(attributes[i].name, boundAttributeSuffix)) {
              count++;
            }
          }
          while (count-- > 0) {
            // Get the template literal section leading up to the first
            // expression in this attribute
            const stringForPart = strings[partIndex];
            // Find the attribute name
            const name = lastAttributeNameRegex.exec(stringForPart)[2];
            // Find the corresponding attribute
            // All bound attributes have had a suffix added in
            // TemplateResult#getHTML to opt out of special attribute
            // handling. To look up the attribute value we also need to add
            // the suffix.
            const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;
            const attributeValue = node.getAttribute(attributeLookupName);
            node.removeAttribute(attributeLookupName);
            const statics = attributeValue.split(markerRegex);
            this.parts.push({
              type: 'attribute',
              index,
              name,
              strings: statics
            });
            partIndex += statics.length - 1;
          }
        }
        if (node.tagName === 'TEMPLATE') {
          stack.push(node);
          walker.currentNode = node.content;
        }
      } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {
        const data = node.data;
        if (data.indexOf(marker) >= 0) {
          const parent = node.parentNode;
          const strings = data.split(markerRegex);
          const lastIndex = strings.length - 1;
          // Generate a new text node for each literal section
          // These nodes are also used as the markers for node parts
          for (let i = 0; i < lastIndex; i++) {
            let insert;
            let s = strings[i];
            if (s === '') {
              insert = createMarker();
            } else {
              const match = lastAttributeNameRegex.exec(s);
              if (match !== null && endsWith(match[2], boundAttributeSuffix)) {
                s = s.slice(0, match.index) + match[1] + match[2].slice(0, -boundAttributeSuffix.length) + match[3];
              }
              insert = document.createTextNode(s);
            }
            parent.insertBefore(insert, node);
            this.parts.push({
              type: 'node',
              index: ++index
            });
          }
          // If there's no text, we must insert a comment to mark our place.
          // Else, we can trust it will stick around after cloning.
          if (strings[lastIndex] === '') {
            parent.insertBefore(createMarker(), node);
            nodesToRemove.push(node);
          } else {
            node.data = strings[lastIndex];
          }
          // We have a part for each match found
          partIndex += lastIndex;
        }
      } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {
        if (node.data === marker) {
          const parent = node.parentNode;
          // Add a new marker node to be the startNode of the Part if any of
          // the following are true:
          //  * We don't have a previousSibling
          //  * The previousSibling is already the start of a previous part
          if (node.previousSibling === null || index === lastPartIndex) {
            index++;
            parent.insertBefore(createMarker(), node);
          }
          lastPartIndex = index;
          this.parts.push({
            type: 'node',
            index
          });
          // If we don't have a nextSibling, keep this node so we have an end.
          // Else, we can remove it to save future costs.
          if (node.nextSibling === null) {
            node.data = '';
          } else {
            nodesToRemove.push(node);
            index--;
          }
          partIndex++;
        } else {
          let i = -1;
          while ((i = node.data.indexOf(marker, i + 1)) !== -1) {
            // Comment node has a binding marker inside, make an inactive part
            // The binding won't work, but subsequent bindings will
            // TODO (justinfagnani): consider whether it's even worth it to
            // make bindings in comments work
            this.parts.push({
              type: 'node',
              index: -1
            });
            partIndex++;
          }
        }
      }
    }
    // Remove text binding nodes after the walk to not disturb the TreeWalker
    for (const n of nodesToRemove) {
      n.parentNode.removeChild(n);
    }
  }
}
exports.Template = Template;
const endsWith = (str, suffix) => {
  const index = str.length - suffix.length;
  return index >= 0 && str.slice(index) === suffix;
};
const isTemplatePartActive = part => part.index !== -1;
// Allows `document.createComment('')` to be renamed for a
// small manual size-savings.
exports.isTemplatePartActive = isTemplatePartActive;
const createMarker = () => document.createComment('');
/**
 * This regex extracts the attribute name preceding an attribute-position
 * expression. It does this by matching the syntax allowed for attributes
 * against the string literal directly preceding the expression, assuming that
 * the expression is in an attribute-value position.
 *
 * See attributes in the HTML spec:
 * https://www.w3.org/TR/html5/syntax.html#elements-attributes
 *
 * " \x09\x0a\x0c\x0d" are HTML space characters:
 * https://www.w3.org/TR/html5/infrastructure.html#space-characters
 *
 * "\0-\x1F\x7F-\x9F" are Unicode control characters, which includes every
 * space character except " ".
 *
 * So an attribute is:
 *  * The name: any character except a control character, space character, ('),
 *    ("), ">", "=", or "/"
 *  * Followed by zero or more space characters
 *  * Followed by "="
 *  * Followed by zero or more space characters
 *  * Followed by:
 *    * Any character except space, ('), ("), "<", ">", "=", (`), or
 *    * (") then any non-("), or
 *    * (') then any non-(')
 */
exports.createMarker = createMarker;
const lastAttributeNameRegex =
// eslint-disable-next-line no-control-regex
/([ \x09\x0a\x0c\x0d])([^\0-\x1F\x7F-\x9F "'>=/]+)([ \x09\x0a\x0c\x0d]*=[ \x09\x0a\x0c\x0d]*(?:[^ \x09\x0a\x0c\x0d"'`<>=]*|"[^"]*|'[^']*))$/;
exports.lastAttributeNameRegex = lastAttributeNameRegex;
},{}],"../node_modules/lit-html/lib/modify-template.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.insertNodeIntoTemplate = insertNodeIntoTemplate;
exports.removeNodesFromTemplate = removeNodesFromTemplate;
var _template = require("./template.js");
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */

const walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;
/**
 * Removes the list of nodes from a Template safely. In addition to removing
 * nodes from the Template, the Template part indices are updated to match
 * the mutated Template DOM.
 *
 * As the template is walked the removal state is tracked and
 * part indices are adjusted as needed.
 *
 * div
 *   div#1 (remove) <-- start removing (removing node is div#1)
 *     div
 *       div#2 (remove)  <-- continue removing (removing node is still div#1)
 *         div
 * div <-- stop removing since previous sibling is the removing node (div#1,
 * removed 4 nodes)
 */
function removeNodesFromTemplate(template, nodesToRemove) {
  const {
    element: {
      content
    },
    parts
  } = template;
  const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);
  let partIndex = nextActiveIndexInTemplateParts(parts);
  let part = parts[partIndex];
  let nodeIndex = -1;
  let removeCount = 0;
  const nodesToRemoveInTemplate = [];
  let currentRemovingNode = null;
  while (walker.nextNode()) {
    nodeIndex++;
    const node = walker.currentNode;
    // End removal if stepped past the removing node
    if (node.previousSibling === currentRemovingNode) {
      currentRemovingNode = null;
    }
    // A node to remove was found in the template
    if (nodesToRemove.has(node)) {
      nodesToRemoveInTemplate.push(node);
      // Track node we're removing
      if (currentRemovingNode === null) {
        currentRemovingNode = node;
      }
    }
    // When removing, increment count by which to adjust subsequent part indices
    if (currentRemovingNode !== null) {
      removeCount++;
    }
    while (part !== undefined && part.index === nodeIndex) {
      // If part is in a removed node deactivate it by setting index to -1 or
      // adjust the index as needed.
      part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;
      // go to the next active part.
      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);
      part = parts[partIndex];
    }
  }
  nodesToRemoveInTemplate.forEach(n => n.parentNode.removeChild(n));
}
const countNodes = node => {
  let count = node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ ? 0 : 1;
  const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);
  while (walker.nextNode()) {
    count++;
  }
  return count;
};
const nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {
  for (let i = startIndex + 1; i < parts.length; i++) {
    const part = parts[i];
    if ((0, _template.isTemplatePartActive)(part)) {
      return i;
    }
  }
  return -1;
};
/**
 * Inserts the given node into the Template, optionally before the given
 * refNode. In addition to inserting the node into the Template, the Template
 * part indices are updated to match the mutated Template DOM.
 */
function insertNodeIntoTemplate(template, node, refNode = null) {
  const {
    element: {
      content
    },
    parts
  } = template;
  // If there's no refNode, then put node at end of template.
  // No part indices need to be shifted in this case.
  if (refNode === null || refNode === undefined) {
    content.appendChild(node);
    return;
  }
  const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);
  let partIndex = nextActiveIndexInTemplateParts(parts);
  let insertCount = 0;
  let walkerIndex = -1;
  while (walker.nextNode()) {
    walkerIndex++;
    const walkerNode = walker.currentNode;
    if (walkerNode === refNode) {
      insertCount = countNodes(node);
      refNode.parentNode.insertBefore(node, refNode);
    }
    while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {
      // If we've inserted the node, simply adjust all subsequent parts
      if (insertCount > 0) {
        while (partIndex !== -1) {
          parts[partIndex].index += insertCount;
          partIndex = nextActiveIndexInTemplateParts(parts, partIndex);
        }
        return;
      }
      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);
    }
  }
}
},{"./template.js":"../node_modules/lit-html/lib/template.js"}],"../node_modules/lit-html/lib/directive.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isDirective = exports.directive = void 0;
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
const directives = new WeakMap();
/**
 * Brands a function as a directive factory function so that lit-html will call
 * the function during template rendering, rather than passing as a value.
 *
 * A _directive_ is a function that takes a Part as an argument. It has the
 * signature: `(part: Part) => void`.
 *
 * A directive _factory_ is a function that takes arguments for data and
 * configuration and returns a directive. Users of directive usually refer to
 * the directive factory as the directive. For example, "The repeat directive".
 *
 * Usually a template author will invoke a directive factory in their template
 * with relevant arguments, which will then return a directive function.
 *
 * Here's an example of using the `repeat()` directive factory that takes an
 * array and a function to render an item:
 *
 * ```js
 * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`
 * ```
 *
 * When `repeat` is invoked, it returns a directive function that closes over
 * `items` and the template function. When the outer template is rendered, the
 * return directive function is called with the Part for the expression.
 * `repeat` then performs it's custom logic to render multiple items.
 *
 * @param f The directive factory function. Must be a function that returns a
 * function of the signature `(part: Part) => void`. The returned function will
 * be called with the part object.
 *
 * @example
 *
 * import {directive, html} from 'lit-html';
 *
 * const immutable = directive((v) => (part) => {
 *   if (part.value !== v) {
 *     part.setValue(v)
 *   }
 * });
 */
const directive = f => (...args) => {
  const d = f(...args);
  directives.set(d, true);
  return d;
};
exports.directive = directive;
const isDirective = o => {
  return typeof o === 'function' && directives.has(o);
};
exports.isDirective = isDirective;
},{}],"../node_modules/lit-html/lib/part.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nothing = exports.noChange = void 0;
/**
 * @license
 * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
/**
 * A sentinel value that signals that a value was handled by a directive and
 * should not be written to the DOM.
 */
const noChange = {};
/**
 * A sentinel value that signals a NodePart to fully clear its content.
 */
exports.noChange = noChange;
const nothing = {};
exports.nothing = nothing;
},{}],"../node_modules/lit-html/lib/template-instance.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TemplateInstance = void 0;
var _dom = require("./dom.js");
var _template = require("./template.js");
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */

/**
 * An instance of a `Template` that can be attached to the DOM and updated
 * with new values.
 */
class TemplateInstance {
  constructor(template, processor, options) {
    this.__parts = [];
    this.template = template;
    this.processor = processor;
    this.options = options;
  }
  update(values) {
    let i = 0;
    for (const part of this.__parts) {
      if (part !== undefined) {
        part.setValue(values[i]);
      }
      i++;
    }
    for (const part of this.__parts) {
      if (part !== undefined) {
        part.commit();
      }
    }
  }
  _clone() {
    // There are a number of steps in the lifecycle of a template instance's
    // DOM fragment:
    //  1. Clone - create the instance fragment
    //  2. Adopt - adopt into the main document
    //  3. Process - find part markers and create parts
    //  4. Upgrade - upgrade custom elements
    //  5. Update - set node, attribute, property, etc., values
    //  6. Connect - connect to the document. Optional and outside of this
    //     method.
    //
    // We have a few constraints on the ordering of these steps:
    //  * We need to upgrade before updating, so that property values will pass
    //    through any property setters.
    //  * We would like to process before upgrading so that we're sure that the
    //    cloned fragment is inert and not disturbed by self-modifying DOM.
    //  * We want custom elements to upgrade even in disconnected fragments.
    //
    // Given these constraints, with full custom elements support we would
    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect
    //
    // But Safari does not implement CustomElementRegistry#upgrade, so we
    // can not implement that order and still have upgrade-before-update and
    // upgrade disconnected fragments. So we instead sacrifice the
    // process-before-upgrade constraint, since in Custom Elements v1 elements
    // must not modify their light DOM in the constructor. We still have issues
    // when co-existing with CEv0 elements like Polymer 1, and with polyfills
    // that don't strictly adhere to the no-modification rule because shadow
    // DOM, which may be created in the constructor, is emulated by being placed
    // in the light DOM.
    //
    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,
    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade
    // in one step.
    //
    // The Custom Elements v1 polyfill supports upgrade(), so the order when
    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,
    // Connect.
    const fragment = _dom.isCEPolyfill ? this.template.element.content.cloneNode(true) : document.importNode(this.template.element.content, true);
    const stack = [];
    const parts = this.template.parts;
    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null
    const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);
    let partIndex = 0;
    let nodeIndex = 0;
    let part;
    let node = walker.nextNode();
    // Loop through all the nodes and parts of a template
    while (partIndex < parts.length) {
      part = parts[partIndex];
      if (!(0, _template.isTemplatePartActive)(part)) {
        this.__parts.push(undefined);
        partIndex++;
        continue;
      }
      // Progress the tree walker until we find our next part's node.
      // Note that multiple parts may share the same node (attribute parts
      // on a single element), so this loop may not run at all.
      while (nodeIndex < part.index) {
        nodeIndex++;
        if (node.nodeName === 'TEMPLATE') {
          stack.push(node);
          walker.currentNode = node.content;
        }
        if ((node = walker.nextNode()) === null) {
          // We've exhausted the content inside a nested template element.
          // Because we still have parts (the outer for-loop), we know:
          // - There is a template in the stack
          // - The walker will find a nextNode outside the template
          walker.currentNode = stack.pop();
          node = walker.nextNode();
        }
      }
      // We've arrived at our part's node.
      if (part.type === 'node') {
        const part = this.processor.handleTextExpression(this.options);
        part.insertAfterNode(node.previousSibling);
        this.__parts.push(part);
      } else {
        this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));
      }
      partIndex++;
    }
    if (_dom.isCEPolyfill) {
      document.adoptNode(fragment);
      customElements.upgrade(fragment);
    }
    return fragment;
  }
}
exports.TemplateInstance = TemplateInstance;
},{"./dom.js":"../node_modules/lit-html/lib/dom.js","./template.js":"../node_modules/lit-html/lib/template.js"}],"../node_modules/lit-html/lib/template-result.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TemplateResult = exports.SVGTemplateResult = void 0;
var _dom = require("./dom.js");
var _template = require("./template.js");
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
/**
 * @module lit-html
 */

/**
 * Our TrustedTypePolicy for HTML which is declared using the html template
 * tag function.
 *
 * That HTML is a developer-authored constant, and is parsed with innerHTML
 * before any untrusted expressions have been mixed in. Therefor it is
 * considered safe by construction.
 */
const policy = window.trustedTypes && trustedTypes.createPolicy('lit-html', {
  createHTML: s => s
});
const commentMarker = ` ${_template.marker} `;
/**
 * The return type of `html`, which holds a Template and the values from
 * interpolated expressions.
 */
class TemplateResult {
  constructor(strings, values, type, processor) {
    this.strings = strings;
    this.values = values;
    this.type = type;
    this.processor = processor;
  }
  /**
   * Returns a string of HTML used to create a `<template>` element.
   */
  getHTML() {
    const l = this.strings.length - 1;
    let html = '';
    let isCommentBinding = false;
    for (let i = 0; i < l; i++) {
      const s = this.strings[i];
      // For each binding we want to determine the kind of marker to insert
      // into the template source before it's parsed by the browser's HTML
      // parser. The marker type is based on whether the expression is in an
      // attribute, text, or comment position.
      //   * For node-position bindings we insert a comment with the marker
      //     sentinel as its text content, like <!--{{lit-guid}}-->.
      //   * For attribute bindings we insert just the marker sentinel for the
      //     first binding, so that we support unquoted attribute bindings.
      //     Subsequent bindings can use a comment marker because multi-binding
      //     attributes must be quoted.
      //   * For comment bindings we insert just the marker sentinel so we don't
      //     close the comment.
      //
      // The following code scans the template source, but is *not* an HTML
      // parser. We don't need to track the tree structure of the HTML, only
      // whether a binding is inside a comment, and if not, if it appears to be
      // the first binding in an attribute.
      const commentOpen = s.lastIndexOf('<!--');
      // We're in comment position if we have a comment open with no following
      // comment close. Because <-- can appear in an attribute value there can
      // be false positives.
      isCommentBinding = (commentOpen > -1 || isCommentBinding) && s.indexOf('-->', commentOpen + 1) === -1;
      // Check to see if we have an attribute-like sequence preceding the
      // expression. This can match "name=value" like structures in text,
      // comments, and attribute values, so there can be false-positives.
      const attributeMatch = _template.lastAttributeNameRegex.exec(s);
      if (attributeMatch === null) {
        // We're only in this branch if we don't have a attribute-like
        // preceding sequence. For comments, this guards against unusual
        // attribute values like <div foo="<!--${'bar'}">. Cases like
        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch
        // below.
        html += s + (isCommentBinding ? commentMarker : _template.nodeMarker);
      } else {
        // For attributes we use just a marker sentinel, and also append a
        // $lit$ suffix to the name to opt-out of attribute-specific parsing
        // that IE and Edge do for style and certain SVG attributes.
        html += s.substr(0, attributeMatch.index) + attributeMatch[1] + attributeMatch[2] + _template.boundAttributeSuffix + attributeMatch[3] + _template.marker;
      }
    }
    html += this.strings[l];
    return html;
  }
  getTemplateElement() {
    const template = document.createElement('template');
    let value = this.getHTML();
    if (policy !== undefined) {
      // this is secure because `this.strings` is a TemplateStringsArray.
      // TODO: validate this when
      // https://github.com/tc39/proposal-array-is-template-object is
      // implemented.
      value = policy.createHTML(value);
    }
    template.innerHTML = value;
    return template;
  }
}
/**
 * A TemplateResult for SVG fragments.
 *
 * This class wraps HTML in an `<svg>` tag in order to parse its contents in the
 * SVG namespace, then modifies the template to remove the `<svg>` tag so that
 * clones only container the original fragment.
 */
exports.TemplateResult = TemplateResult;
class SVGTemplateResult extends TemplateResult {
  getHTML() {
    return `<svg>${super.getHTML()}</svg>`;
  }
  getTemplateElement() {
    const template = super.getTemplateElement();
    const content = template.content;
    const svgElement = content.firstChild;
    content.removeChild(svgElement);
    (0, _dom.reparentNodes)(content, svgElement.firstChild);
    return template;
  }
}
exports.SVGTemplateResult = SVGTemplateResult;
},{"./dom.js":"../node_modules/lit-html/lib/dom.js","./template.js":"../node_modules/lit-html/lib/template.js"}],"../node_modules/lit-html/lib/parts.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isPrimitive = exports.isIterable = exports.PropertyPart = exports.PropertyCommitter = exports.NodePart = exports.EventPart = exports.BooleanAttributePart = exports.AttributePart = exports.AttributeCommitter = void 0;
var _directive = require("./directive.js");
var _dom = require("./dom.js");
var _part = require("./part.js");
var _templateInstance = require("./template-instance.js");
var _templateResult = require("./template-result.js");
var _template = require("./template.js");
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */

const isPrimitive = value => {
  return value === null || !(typeof value === 'object' || typeof value === 'function');
};
exports.isPrimitive = isPrimitive;
const isIterable = value => {
  return Array.isArray(value) ||
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  !!(value && value[Symbol.iterator]);
};
/**
 * Writes attribute values to the DOM for a group of AttributeParts bound to a
 * single attribute. The value is only set once even if there are multiple parts
 * for an attribute.
 */
exports.isIterable = isIterable;
class AttributeCommitter {
  constructor(element, name, strings) {
    this.dirty = true;
    this.element = element;
    this.name = name;
    this.strings = strings;
    this.parts = [];
    for (let i = 0; i < strings.length - 1; i++) {
      this.parts[i] = this._createPart();
    }
  }
  /**
   * Creates a single part. Override this to create a differnt type of part.
   */
  _createPart() {
    return new AttributePart(this);
  }
  _getValue() {
    const strings = this.strings;
    const l = strings.length - 1;
    const parts = this.parts;
    // If we're assigning an attribute via syntax like:
    //    attr="${foo}"  or  attr=${foo}
    // but not
    //    attr="${foo} ${bar}" or attr="${foo} baz"
    // then we don't want to coerce the attribute value into one long
    // string. Instead we want to just return the value itself directly,
    // so that sanitizeDOMValue can get the actual value rather than
    // String(value)
    // The exception is if v is an array, in which case we do want to smash
    // it together into a string without calling String() on the array.
    //
    // This also allows trusted values (when using TrustedTypes) being
    // assigned to DOM sinks without being stringified in the process.
    if (l === 1 && strings[0] === '' && strings[1] === '') {
      const v = parts[0].value;
      if (typeof v === 'symbol') {
        return String(v);
      }
      if (typeof v === 'string' || !isIterable(v)) {
        return v;
      }
    }
    let text = '';
    for (let i = 0; i < l; i++) {
      text += strings[i];
      const part = parts[i];
      if (part !== undefined) {
        const v = part.value;
        if (isPrimitive(v) || !isIterable(v)) {
          text += typeof v === 'string' ? v : String(v);
        } else {
          for (const t of v) {
            text += typeof t === 'string' ? t : String(t);
          }
        }
      }
    }
    text += strings[l];
    return text;
  }
  commit() {
    if (this.dirty) {
      this.dirty = false;
      this.element.setAttribute(this.name, this._getValue());
    }
  }
}
/**
 * A Part that controls all or part of an attribute value.
 */
exports.AttributeCommitter = AttributeCommitter;
class AttributePart {
  constructor(committer) {
    this.value = undefined;
    this.committer = committer;
  }
  setValue(value) {
    if (value !== _part.noChange && (!isPrimitive(value) || value !== this.value)) {
      this.value = value;
      // If the value is a not a directive, dirty the committer so that it'll
      // call setAttribute. If the value is a directive, it'll dirty the
      // committer if it calls setValue().
      if (!(0, _directive.isDirective)(value)) {
        this.committer.dirty = true;
      }
    }
  }
  commit() {
    while ((0, _directive.isDirective)(this.value)) {
      const directive = this.value;
      this.value = _part.noChange;
      directive(this);
    }
    if (this.value === _part.noChange) {
      return;
    }
    this.committer.commit();
  }
}
/**
 * A Part that controls a location within a Node tree. Like a Range, NodePart
 * has start and end locations and can set and update the Nodes between those
 * locations.
 *
 * NodeParts support several value types: primitives, Nodes, TemplateResults,
 * as well as arrays and iterables of those types.
 */
exports.AttributePart = AttributePart;
class NodePart {
  constructor(options) {
    this.value = undefined;
    this.__pendingValue = undefined;
    this.options = options;
  }
  /**
   * Appends this part into a container.
   *
   * This part must be empty, as its contents are not automatically moved.
   */
  appendInto(container) {
    this.startNode = container.appendChild((0, _template.createMarker)());
    this.endNode = container.appendChild((0, _template.createMarker)());
  }
  /**
   * Inserts this part after the `ref` node (between `ref` and `ref`'s next
   * sibling). Both `ref` and its next sibling must be static, unchanging nodes
   * such as those that appear in a literal section of a template.
   *
   * This part must be empty, as its contents are not automatically moved.
   */
  insertAfterNode(ref) {
    this.startNode = ref;
    this.endNode = ref.nextSibling;
  }
  /**
   * Appends this part into a parent part.
   *
   * This part must be empty, as its contents are not automatically moved.
   */
  appendIntoPart(part) {
    part.__insert(this.startNode = (0, _template.createMarker)());
    part.__insert(this.endNode = (0, _template.createMarker)());
  }
  /**
   * Inserts this part after the `ref` part.
   *
   * This part must be empty, as its contents are not automatically moved.
   */
  insertAfterPart(ref) {
    ref.__insert(this.startNode = (0, _template.createMarker)());
    this.endNode = ref.endNode;
    ref.endNode = this.startNode;
  }
  setValue(value) {
    this.__pendingValue = value;
  }
  commit() {
    if (this.startNode.parentNode === null) {
      return;
    }
    while ((0, _directive.isDirective)(this.__pendingValue)) {
      const directive = this.__pendingValue;
      this.__pendingValue = _part.noChange;
      directive(this);
    }
    const value = this.__pendingValue;
    if (value === _part.noChange) {
      return;
    }
    if (isPrimitive(value)) {
      if (value !== this.value) {
        this.__commitText(value);
      }
    } else if (value instanceof _templateResult.TemplateResult) {
      this.__commitTemplateResult(value);
    } else if (value instanceof Node) {
      this.__commitNode(value);
    } else if (isIterable(value)) {
      this.__commitIterable(value);
    } else if (value === _part.nothing) {
      this.value = _part.nothing;
      this.clear();
    } else {
      // Fallback, will render the string representation
      this.__commitText(value);
    }
  }
  __insert(node) {
    this.endNode.parentNode.insertBefore(node, this.endNode);
  }
  __commitNode(value) {
    if (this.value === value) {
      return;
    }
    this.clear();
    this.__insert(value);
    this.value = value;
  }
  __commitText(value) {
    const node = this.startNode.nextSibling;
    value = value == null ? '' : value;
    // If `value` isn't already a string, we explicitly convert it here in case
    // it can't be implicitly converted - i.e. it's a symbol.
    const valueAsString = typeof value === 'string' ? value : String(value);
    if (node === this.endNode.previousSibling && node.nodeType === 3 /* Node.TEXT_NODE */) {
      // If we only have a single text node between the markers, we can just
      // set its value, rather than replacing it.
      // TODO(justinfagnani): Can we just check if this.value is primitive?
      node.data = valueAsString;
    } else {
      this.__commitNode(document.createTextNode(valueAsString));
    }
    this.value = value;
  }
  __commitTemplateResult(value) {
    const template = this.options.templateFactory(value);
    if (this.value instanceof _templateInstance.TemplateInstance && this.value.template === template) {
      this.value.update(value.values);
    } else {
      // Make sure we propagate the template processor from the TemplateResult
      // so that we use its syntax extension, etc. The template factory comes
      // from the render function options so that it can control template
      // caching and preprocessing.
      const instance = new _templateInstance.TemplateInstance(template, value.processor, this.options);
      const fragment = instance._clone();
      instance.update(value.values);
      this.__commitNode(fragment);
      this.value = instance;
    }
  }
  __commitIterable(value) {
    // For an Iterable, we create a new InstancePart per item, then set its
    // value to the item. This is a little bit of overhead for every item in
    // an Iterable, but it lets us recurse easily and efficiently update Arrays
    // of TemplateResults that will be commonly returned from expressions like:
    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.
    // If _value is an array, then the previous render was of an
    // iterable and _value will contain the NodeParts from the previous
    // render. If _value is not an array, clear this part and make a new
    // array for NodeParts.
    if (!Array.isArray(this.value)) {
      this.value = [];
      this.clear();
    }
    // Lets us keep track of how many items we stamped so we can clear leftover
    // items from a previous render
    const itemParts = this.value;
    let partIndex = 0;
    let itemPart;
    for (const item of value) {
      // Try to reuse an existing part
      itemPart = itemParts[partIndex];
      // If no existing part, create a new one
      if (itemPart === undefined) {
        itemPart = new NodePart(this.options);
        itemParts.push(itemPart);
        if (partIndex === 0) {
          itemPart.appendIntoPart(this);
        } else {
          itemPart.insertAfterPart(itemParts[partIndex - 1]);
        }
      }
      itemPart.setValue(item);
      itemPart.commit();
      partIndex++;
    }
    if (partIndex < itemParts.length) {
      // Truncate the parts array so _value reflects the current state
      itemParts.length = partIndex;
      this.clear(itemPart && itemPart.endNode);
    }
  }
  clear(startNode = this.startNode) {
    (0, _dom.removeNodes)(this.startNode.parentNode, startNode.nextSibling, this.endNode);
  }
}
/**
 * Implements a boolean attribute, roughly as defined in the HTML
 * specification.
 *
 * If the value is truthy, then the attribute is present with a value of
 * ''. If the value is falsey, the attribute is removed.
 */
exports.NodePart = NodePart;
class BooleanAttributePart {
  constructor(element, name, strings) {
    this.value = undefined;
    this.__pendingValue = undefined;
    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {
      throw new Error('Boolean attributes can only contain a single expression');
    }
    this.element = element;
    this.name = name;
    this.strings = strings;
  }
  setValue(value) {
    this.__pendingValue = value;
  }
  commit() {
    while ((0, _directive.isDirective)(this.__pendingValue)) {
      const directive = this.__pendingValue;
      this.__pendingValue = _part.noChange;
      directive(this);
    }
    if (this.__pendingValue === _part.noChange) {
      return;
    }
    const value = !!this.__pendingValue;
    if (this.value !== value) {
      if (value) {
        this.element.setAttribute(this.name, '');
      } else {
        this.element.removeAttribute(this.name);
      }
      this.value = value;
    }
    this.__pendingValue = _part.noChange;
  }
}
/**
 * Sets attribute values for PropertyParts, so that the value is only set once
 * even if there are multiple parts for a property.
 *
 * If an expression controls the whole property value, then the value is simply
 * assigned to the property under control. If there are string literals or
 * multiple expressions, then the strings are expressions are interpolated into
 * a string first.
 */
exports.BooleanAttributePart = BooleanAttributePart;
class PropertyCommitter extends AttributeCommitter {
  constructor(element, name, strings) {
    super(element, name, strings);
    this.single = strings.length === 2 && strings[0] === '' && strings[1] === '';
  }
  _createPart() {
    return new PropertyPart(this);
  }
  _getValue() {
    if (this.single) {
      return this.parts[0].value;
    }
    return super._getValue();
  }
  commit() {
    if (this.dirty) {
      this.dirty = false;
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      this.element[this.name] = this._getValue();
    }
  }
}
exports.PropertyCommitter = PropertyCommitter;
class PropertyPart extends AttributePart {}
// Detect event listener options support. If the `capture` property is read
// from the options object, then options are supported. If not, then the third
// argument to add/removeEventListener is interpreted as the boolean capture
// value so we should only pass the `capture` property.
exports.PropertyPart = PropertyPart;
let eventOptionsSupported = false;
// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch
// blocks right into the body of a module
(() => {
  try {
    const options = {
      get capture() {
        eventOptionsSupported = true;
        return false;
      }
    };
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    window.addEventListener('test', options, options);
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    window.removeEventListener('test', options, options);
  } catch (_e) {
    // event options not supported
  }
})();
class EventPart {
  constructor(element, eventName, eventContext) {
    this.value = undefined;
    this.__pendingValue = undefined;
    this.element = element;
    this.eventName = eventName;
    this.eventContext = eventContext;
    this.__boundHandleEvent = e => this.handleEvent(e);
  }
  setValue(value) {
    this.__pendingValue = value;
  }
  commit() {
    while ((0, _directive.isDirective)(this.__pendingValue)) {
      const directive = this.__pendingValue;
      this.__pendingValue = _part.noChange;
      directive(this);
    }
    if (this.__pendingValue === _part.noChange) {
      return;
    }
    const newListener = this.__pendingValue;
    const oldListener = this.value;
    const shouldRemoveListener = newListener == null || oldListener != null && (newListener.capture !== oldListener.capture || newListener.once !== oldListener.once || newListener.passive !== oldListener.passive);
    const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);
    if (shouldRemoveListener) {
      this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);
    }
    if (shouldAddListener) {
      this.__options = getOptions(newListener);
      this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);
    }
    this.value = newListener;
    this.__pendingValue = _part.noChange;
  }
  handleEvent(event) {
    if (typeof this.value === 'function') {
      this.value.call(this.eventContext || this.element, event);
    } else {
      this.value.handleEvent(event);
    }
  }
}
// We copy options because of the inconsistent behavior of browsers when reading
// the third argument of add/removeEventListener. IE11 doesn't support options
// at all. Chrome 41 only reads `capture` if the argument is an object.
exports.EventPart = EventPart;
const getOptions = o => o && (eventOptionsSupported ? {
  capture: o.capture,
  passive: o.passive,
  once: o.once
} : o.capture);
},{"./directive.js":"../node_modules/lit-html/lib/directive.js","./dom.js":"../node_modules/lit-html/lib/dom.js","./part.js":"../node_modules/lit-html/lib/part.js","./template-instance.js":"../node_modules/lit-html/lib/template-instance.js","./template-result.js":"../node_modules/lit-html/lib/template-result.js","./template.js":"../node_modules/lit-html/lib/template.js"}],"../node_modules/lit-html/lib/template-factory.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.templateCaches = void 0;
exports.templateFactory = templateFactory;
var _template = require("./template.js");
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */

/**
 * The default TemplateFactory which caches Templates keyed on
 * result.type and result.strings.
 */
function templateFactory(result) {
  let templateCache = templateCaches.get(result.type);
  if (templateCache === undefined) {
    templateCache = {
      stringsArray: new WeakMap(),
      keyString: new Map()
    };
    templateCaches.set(result.type, templateCache);
  }
  let template = templateCache.stringsArray.get(result.strings);
  if (template !== undefined) {
    return template;
  }
  // If the TemplateStringsArray is new, generate a key from the strings
  // This key is shared between all templates with identical content
  const key = result.strings.join(_template.marker);
  // Check if we already have a Template for this key
  template = templateCache.keyString.get(key);
  if (template === undefined) {
    // If we have not seen this key before, create a new Template
    template = new _template.Template(result, result.getTemplateElement());
    // Cache the Template for this key
    templateCache.keyString.set(key, template);
  }
  // Cache all future queries for this TemplateStringsArray
  templateCache.stringsArray.set(result.strings, template);
  return template;
}
const templateCaches = new Map();
exports.templateCaches = templateCaches;
},{"./template.js":"../node_modules/lit-html/lib/template.js"}],"../node_modules/lit-html/lib/render.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.render = exports.parts = void 0;
var _dom = require("./dom.js");
var _parts = require("./parts.js");
var _templateFactory = require("./template-factory.js");
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */

const parts = new WeakMap();
/**
 * Renders a template result or other value to a container.
 *
 * To update a container with new values, reevaluate the template literal and
 * call `render` with the new result.
 *
 * @param result Any value renderable by NodePart - typically a TemplateResult
 *     created by evaluating a template tag like `html` or `svg`.
 * @param container A DOM parent to render to. The entire contents are either
 *     replaced, or efficiently updated if the same result type was previous
 *     rendered there.
 * @param options RenderOptions for the entire render tree rendered to this
 *     container. Render options must *not* change between renders to the same
 *     container, as those changes will not effect previously rendered DOM.
 */
exports.parts = parts;
const render = (result, container, options) => {
  let part = parts.get(container);
  if (part === undefined) {
    (0, _dom.removeNodes)(container, container.firstChild);
    parts.set(container, part = new _parts.NodePart(Object.assign({
      templateFactory: _templateFactory.templateFactory
    }, options)));
    part.appendInto(container);
  }
  part.setValue(result);
  part.commit();
};
exports.render = render;
},{"./dom.js":"../node_modules/lit-html/lib/dom.js","./parts.js":"../node_modules/lit-html/lib/parts.js","./template-factory.js":"../node_modules/lit-html/lib/template-factory.js"}],"../node_modules/lit-html/lib/default-template-processor.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultTemplateProcessor = exports.DefaultTemplateProcessor = void 0;
var _parts = require("./parts.js");
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */

/**
 * Creates Parts when a template is instantiated.
 */
class DefaultTemplateProcessor {
  /**
   * Create parts for an attribute-position binding, given the event, attribute
   * name, and string literals.
   *
   * @param element The element containing the binding
   * @param name  The attribute name
   * @param strings The string literals. There are always at least two strings,
   *   event for fully-controlled bindings with a single expression.
   */
  handleAttributeExpressions(element, name, strings, options) {
    const prefix = name[0];
    if (prefix === '.') {
      const committer = new _parts.PropertyCommitter(element, name.slice(1), strings);
      return committer.parts;
    }
    if (prefix === '@') {
      return [new _parts.EventPart(element, name.slice(1), options.eventContext)];
    }
    if (prefix === '?') {
      return [new _parts.BooleanAttributePart(element, name.slice(1), strings)];
    }
    const committer = new _parts.AttributeCommitter(element, name, strings);
    return committer.parts;
  }
  /**
   * Create parts for a text-position binding.
   * @param templateFactory
   */
  handleTextExpression(options) {
    return new _parts.NodePart(options);
  }
}
exports.DefaultTemplateProcessor = DefaultTemplateProcessor;
const defaultTemplateProcessor = new DefaultTemplateProcessor();
exports.defaultTemplateProcessor = defaultTemplateProcessor;
},{"./parts.js":"../node_modules/lit-html/lib/parts.js"}],"../node_modules/lit-html/lit-html.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "AttributeCommitter", {
  enumerable: true,
  get: function () {
    return _parts.AttributeCommitter;
  }
});
Object.defineProperty(exports, "AttributePart", {
  enumerable: true,
  get: function () {
    return _parts.AttributePart;
  }
});
Object.defineProperty(exports, "BooleanAttributePart", {
  enumerable: true,
  get: function () {
    return _parts.BooleanAttributePart;
  }
});
Object.defineProperty(exports, "DefaultTemplateProcessor", {
  enumerable: true,
  get: function () {
    return _defaultTemplateProcessor.DefaultTemplateProcessor;
  }
});
Object.defineProperty(exports, "EventPart", {
  enumerable: true,
  get: function () {
    return _parts.EventPart;
  }
});
Object.defineProperty(exports, "NodePart", {
  enumerable: true,
  get: function () {
    return _parts.NodePart;
  }
});
Object.defineProperty(exports, "PropertyCommitter", {
  enumerable: true,
  get: function () {
    return _parts.PropertyCommitter;
  }
});
Object.defineProperty(exports, "PropertyPart", {
  enumerable: true,
  get: function () {
    return _parts.PropertyPart;
  }
});
Object.defineProperty(exports, "SVGTemplateResult", {
  enumerable: true,
  get: function () {
    return _templateResult.SVGTemplateResult;
  }
});
Object.defineProperty(exports, "Template", {
  enumerable: true,
  get: function () {
    return _template.Template;
  }
});
Object.defineProperty(exports, "TemplateInstance", {
  enumerable: true,
  get: function () {
    return _templateInstance.TemplateInstance;
  }
});
Object.defineProperty(exports, "TemplateResult", {
  enumerable: true,
  get: function () {
    return _templateResult.TemplateResult;
  }
});
Object.defineProperty(exports, "createMarker", {
  enumerable: true,
  get: function () {
    return _template.createMarker;
  }
});
Object.defineProperty(exports, "defaultTemplateProcessor", {
  enumerable: true,
  get: function () {
    return _defaultTemplateProcessor.defaultTemplateProcessor;
  }
});
Object.defineProperty(exports, "directive", {
  enumerable: true,
  get: function () {
    return _directive.directive;
  }
});
exports.html = void 0;
Object.defineProperty(exports, "isDirective", {
  enumerable: true,
  get: function () {
    return _directive.isDirective;
  }
});
Object.defineProperty(exports, "isIterable", {
  enumerable: true,
  get: function () {
    return _parts.isIterable;
  }
});
Object.defineProperty(exports, "isPrimitive", {
  enumerable: true,
  get: function () {
    return _parts.isPrimitive;
  }
});
Object.defineProperty(exports, "isTemplatePartActive", {
  enumerable: true,
  get: function () {
    return _template.isTemplatePartActive;
  }
});
Object.defineProperty(exports, "noChange", {
  enumerable: true,
  get: function () {
    return _part.noChange;
  }
});
Object.defineProperty(exports, "nothing", {
  enumerable: true,
  get: function () {
    return _part.nothing;
  }
});
Object.defineProperty(exports, "parts", {
  enumerable: true,
  get: function () {
    return _render.parts;
  }
});
Object.defineProperty(exports, "removeNodes", {
  enumerable: true,
  get: function () {
    return _dom.removeNodes;
  }
});
Object.defineProperty(exports, "render", {
  enumerable: true,
  get: function () {
    return _render.render;
  }
});
Object.defineProperty(exports, "reparentNodes", {
  enumerable: true,
  get: function () {
    return _dom.reparentNodes;
  }
});
exports.svg = void 0;
Object.defineProperty(exports, "templateCaches", {
  enumerable: true,
  get: function () {
    return _templateFactory.templateCaches;
  }
});
Object.defineProperty(exports, "templateFactory", {
  enumerable: true,
  get: function () {
    return _templateFactory.templateFactory;
  }
});
var _defaultTemplateProcessor = require("./lib/default-template-processor.js");
var _templateResult = require("./lib/template-result.js");
var _directive = require("./lib/directive.js");
var _dom = require("./lib/dom.js");
var _part = require("./lib/part.js");
var _parts = require("./lib/parts.js");
var _render = require("./lib/render.js");
var _templateFactory = require("./lib/template-factory.js");
var _templateInstance = require("./lib/template-instance.js");
var _template = require("./lib/template.js");
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
/**
 *
 * Main lit-html module.
 *
 * Main exports:
 *
 * -  [[html]]
 * -  [[svg]]
 * -  [[render]]
 *
 * @packageDocumentation
 */
/**
 * Do not remove this comment; it keeps typedoc from misplacing the module
 * docs.
 */

// TODO(justinfagnani): remove line when we get NodePart moving methods

// IMPORTANT: do not change the property name or the assignment expression.
// This line will be used in regexes to search for lit-html usage.
// TODO(justinfagnani): inject version number at build time
if (typeof window !== 'undefined') {
  (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.4.1');
}
/**
 * Interprets a template literal as an HTML template that can efficiently
 * render to and update a container.
 */
const html = (strings, ...values) => new _templateResult.TemplateResult(strings, values, 'html', _defaultTemplateProcessor.defaultTemplateProcessor);
/**
 * Interprets a template literal as an SVG template that can efficiently
 * render to and update a container.
 */
exports.html = html;
const svg = (strings, ...values) => new _templateResult.SVGTemplateResult(strings, values, 'svg', _defaultTemplateProcessor.defaultTemplateProcessor);
exports.svg = svg;
},{"./lib/default-template-processor.js":"../node_modules/lit-html/lib/default-template-processor.js","./lib/template-result.js":"../node_modules/lit-html/lib/template-result.js","./lib/directive.js":"../node_modules/lit-html/lib/directive.js","./lib/dom.js":"../node_modules/lit-html/lib/dom.js","./lib/part.js":"../node_modules/lit-html/lib/part.js","./lib/parts.js":"../node_modules/lit-html/lib/parts.js","./lib/render.js":"../node_modules/lit-html/lib/render.js","./lib/template-factory.js":"../node_modules/lit-html/lib/template-factory.js","./lib/template-instance.js":"../node_modules/lit-html/lib/template-instance.js","./lib/template.js":"../node_modules/lit-html/lib/template.js"}],"../node_modules/lit-html/lib/shady-render.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "TemplateResult", {
  enumerable: true,
  get: function () {
    return _litHtml.TemplateResult;
  }
});
Object.defineProperty(exports, "html", {
  enumerable: true,
  get: function () {
    return _litHtml.html;
  }
});
exports.shadyTemplateFactory = exports.render = void 0;
Object.defineProperty(exports, "svg", {
  enumerable: true,
  get: function () {
    return _litHtml.svg;
  }
});
var _dom = require("./dom.js");
var _modifyTemplate = require("./modify-template.js");
var _render = require("./render.js");
var _templateFactory = require("./template-factory.js");
var _templateInstance = require("./template-instance.js");
var _template = require("./template.js");
var _litHtml = require("../lit-html.js");
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
/**
 * Module to add shady DOM/shady CSS polyfill support to lit-html template
 * rendering. See the [[render]] method for details.
 *
 * @packageDocumentation
 */
/**
 * Do not remove this comment; it keeps typedoc from misplacing the module
 * docs.
 */

// Get a key to lookup in `templateCaches`.
const getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;
let compatibleShadyCSSVersion = true;
if (typeof window.ShadyCSS === 'undefined') {
  compatibleShadyCSSVersion = false;
} else if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {
  console.warn(`Incompatible ShadyCSS version detected. ` + `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` + `@webcomponents/shadycss@1.3.1.`);
  compatibleShadyCSSVersion = false;
}
/**
 * Template factory which scopes template DOM using ShadyCSS.
 * @param scopeName {string}
 */
const shadyTemplateFactory = scopeName => result => {
  const cacheKey = getTemplateCacheKey(result.type, scopeName);
  let templateCache = _templateFactory.templateCaches.get(cacheKey);
  if (templateCache === undefined) {
    templateCache = {
      stringsArray: new WeakMap(),
      keyString: new Map()
    };
    _templateFactory.templateCaches.set(cacheKey, templateCache);
  }
  let template = templateCache.stringsArray.get(result.strings);
  if (template !== undefined) {
    return template;
  }
  const key = result.strings.join(_template.marker);
  template = templateCache.keyString.get(key);
  if (template === undefined) {
    const element = result.getTemplateElement();
    if (compatibleShadyCSSVersion) {
      window.ShadyCSS.prepareTemplateDom(element, scopeName);
    }
    template = new _template.Template(result, element);
    templateCache.keyString.set(key, template);
  }
  templateCache.stringsArray.set(result.strings, template);
  return template;
};
exports.shadyTemplateFactory = shadyTemplateFactory;
const TEMPLATE_TYPES = ['html', 'svg'];
/**
 * Removes all style elements from Templates for the given scopeName.
 */
const removeStylesFromLitTemplates = scopeName => {
  TEMPLATE_TYPES.forEach(type => {
    const templates = _templateFactory.templateCaches.get(getTemplateCacheKey(type, scopeName));
    if (templates !== undefined) {
      templates.keyString.forEach(template => {
        const {
          element: {
            content
          }
        } = template;
        // IE 11 doesn't support the iterable param Set constructor
        const styles = new Set();
        Array.from(content.querySelectorAll('style')).forEach(s => {
          styles.add(s);
        });
        (0, _modifyTemplate.removeNodesFromTemplate)(template, styles);
      });
    }
  });
};
const shadyRenderSet = new Set();
/**
 * For the given scope name, ensures that ShadyCSS style scoping is performed.
 * This is done just once per scope name so the fragment and template cannot
 * be modified.
 * (1) extracts styles from the rendered fragment and hands them to ShadyCSS
 * to be scoped and appended to the document
 * (2) removes style elements from all lit-html Templates for this scope name.
 *
 * Note, <style> elements can only be placed into templates for the
 * initial rendering of the scope. If <style> elements are included in templates
 * dynamically rendered to the scope (after the first scope render), they will
 * not be scoped and the <style> will be left in the template and rendered
 * output.
 */
const prepareTemplateStyles = (scopeName, renderedDOM, template) => {
  shadyRenderSet.add(scopeName);
  // If `renderedDOM` is stamped from a Template, then we need to edit that
  // Template's underlying template element. Otherwise, we create one here
  // to give to ShadyCSS, which still requires one while scoping.
  const templateElement = !!template ? template.element : document.createElement('template');
  // Move styles out of rendered DOM and store.
  const styles = renderedDOM.querySelectorAll('style');
  const {
    length
  } = styles;
  // If there are no styles, skip unnecessary work
  if (length === 0) {
    // Ensure prepareTemplateStyles is called to support adding
    // styles via `prepareAdoptedCssText` since that requires that
    // `prepareTemplateStyles` is called.
    //
    // ShadyCSS will only update styles containing @apply in the template
    // given to `prepareTemplateStyles`. If no lit Template was given,
    // ShadyCSS will not be able to update uses of @apply in any relevant
    // template. However, this is not a problem because we only create the
    // template for the purpose of supporting `prepareAdoptedCssText`,
    // which doesn't support @apply at all.
    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);
    return;
  }
  const condensedStyle = document.createElement('style');
  // Collect styles into a single style. This helps us make sure ShadyCSS
  // manipulations will not prevent us from being able to fix up template
  // part indices.
  // NOTE: collecting styles is inefficient for browsers but ShadyCSS
  // currently does this anyway. When it does not, this should be changed.
  for (let i = 0; i < length; i++) {
    const style = styles[i];
    style.parentNode.removeChild(style);
    condensedStyle.textContent += style.textContent;
  }
  // Remove styles from nested templates in this scope.
  removeStylesFromLitTemplates(scopeName);
  // And then put the condensed style into the "root" template passed in as
  // `template`.
  const content = templateElement.content;
  if (!!template) {
    (0, _modifyTemplate.insertNodeIntoTemplate)(template, condensedStyle, content.firstChild);
  } else {
    content.insertBefore(condensedStyle, content.firstChild);
  }
  // Note, it's important that ShadyCSS gets the template that `lit-html`
  // will actually render so that it can update the style inside when
  // needed (e.g. @apply native Shadow DOM case).
  window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);
  const style = content.querySelector('style');
  if (window.ShadyCSS.nativeShadow && style !== null) {
    // When in native Shadow DOM, ensure the style created by ShadyCSS is
    // included in initially rendered output (`renderedDOM`).
    renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);
  } else if (!!template) {
    // When no style is left in the template, parts will be broken as a
    // result. To fix this, we put back the style node ShadyCSS removed
    // and then tell lit to remove that node from the template.
    // There can be no style in the template in 2 cases (1) when Shady DOM
    // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM
    // is in use ShadyCSS removes the style if it contains no content.
    // NOTE, ShadyCSS creates its own style so we can safely add/remove
    // `condensedStyle` here.
    content.insertBefore(condensedStyle, content.firstChild);
    const removes = new Set();
    removes.add(condensedStyle);
    (0, _modifyTemplate.removeNodesFromTemplate)(template, removes);
  }
};
/**
 * Extension to the standard `render` method which supports rendering
 * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)
 * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used
 * or when the webcomponentsjs
 * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.
 *
 * Adds a `scopeName` option which is used to scope element DOM and stylesheets
 * when native ShadowDOM is unavailable. The `scopeName` will be added to
 * the class attribute of all rendered DOM. In addition, any style elements will
 * be automatically re-written with this `scopeName` selector and moved out
 * of the rendered DOM and into the document `<head>`.
 *
 * It is common to use this render method in conjunction with a custom element
 * which renders a shadowRoot. When this is done, typically the element's
 * `localName` should be used as the `scopeName`.
 *
 * In addition to DOM scoping, ShadyCSS also supports a basic shim for css
 * custom properties (needed only on older browsers like IE11) and a shim for
 * a deprecated feature called `@apply` that supports applying a set of css
 * custom properties to a given location.
 *
 * Usage considerations:
 *
 * * Part values in `<style>` elements are only applied the first time a given
 * `scopeName` renders. Subsequent changes to parts in style elements will have
 * no effect. Because of this, parts in style elements should only be used for
 * values that will never change, for example parts that set scope-wide theme
 * values or parts which render shared style elements.
 *
 * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a
 * custom element's `constructor` is not supported. Instead rendering should
 * either done asynchronously, for example at microtask timing (for example
 * `Promise.resolve()`), or be deferred until the first time the element's
 * `connectedCallback` runs.
 *
 * Usage considerations when using shimmed custom properties or `@apply`:
 *
 * * Whenever any dynamic changes are made which affect
 * css custom properties, `ShadyCSS.styleElement(element)` must be called
 * to update the element. There are two cases when this is needed:
 * (1) the element is connected to a new parent, (2) a class is added to the
 * element that causes it to match different custom properties.
 * To address the first case when rendering a custom element, `styleElement`
 * should be called in the element's `connectedCallback`.
 *
 * * Shimmed custom properties may only be defined either for an entire
 * shadowRoot (for example, in a `:host` rule) or via a rule that directly
 * matches an element with a shadowRoot. In other words, instead of flowing from
 * parent to child as do native css custom properties, shimmed custom properties
 * flow only from shadowRoots to nested shadowRoots.
 *
 * * When using `@apply` mixing css shorthand property names with
 * non-shorthand names (for example `border` and `border-width`) is not
 * supported.
 */
const render = (result, container, options) => {
  if (!options || typeof options !== 'object' || !options.scopeName) {
    throw new Error('The `scopeName` option is required.');
  }
  const scopeName = options.scopeName;
  const hasRendered = _render.parts.has(container);
  const needsScoping = compatibleShadyCSSVersion && container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ && !!container.host;
  // Handle first render to a scope specially...
  const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);
  // On first scope render, render into a fragment; this cannot be a single
  // fragment that is reused since nested renders can occur synchronously.
  const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;
  (0, _render.render)(result, renderContainer, Object.assign({
    templateFactory: shadyTemplateFactory(scopeName)
  }, options));
  // When performing first scope render,
  // (1) We've rendered into a fragment so that there's a chance to
  // `prepareTemplateStyles` before sub-elements hit the DOM
  // (which might cause them to render based on a common pattern of
  // rendering in a custom element's `connectedCallback`);
  // (2) Scope the template with ShadyCSS one time only for this scope.
  // (3) Render the fragment into the container and make sure the
  // container knows its `part` is the one we just rendered. This ensures
  // DOM will be re-used on subsequent renders.
  if (firstScopeRender) {
    const part = _render.parts.get(renderContainer);
    _render.parts.delete(renderContainer);
    // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)
    // that should apply to `renderContainer` even if the rendered value is
    // not a TemplateInstance. However, it will only insert scoped styles
    // into the document if `prepareTemplateStyles` has already been called
    // for the given scope name.
    const template = part.value instanceof _templateInstance.TemplateInstance ? part.value.template : undefined;
    prepareTemplateStyles(scopeName, renderContainer, template);
    (0, _dom.removeNodes)(container, container.firstChild);
    container.appendChild(renderContainer);
    _render.parts.set(container, part);
  }
  // After elements have hit the DOM, update styling if this is the
  // initial render to this container.
  // This is needed whenever dynamic changes are made so it would be
  // safest to do every render; however, this would regress performance
  // so we leave it up to the user to call `ShadyCSS.styleElement`
  // for dynamic changes.
  if (!hasRendered && needsScoping) {
    window.ShadyCSS.styleElement(container.host);
  }
};
exports.render = render;
},{"./dom.js":"../node_modules/lit-html/lib/dom.js","./modify-template.js":"../node_modules/lit-html/lib/modify-template.js","./render.js":"../node_modules/lit-html/lib/render.js","./template-factory.js":"../node_modules/lit-html/lib/template-factory.js","./template-instance.js":"../node_modules/lit-html/lib/template-instance.js","./template.js":"../node_modules/lit-html/lib/template.js","../lit-html.js":"../node_modules/lit-html/lit-html.js"}],"../node_modules/lit-element/lib/updating-element.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.notEqual = exports.defaultConverter = exports.UpdatingElement = void 0;
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
var _a;
/**
 * Use this module if you want to create your own base class extending
 * [[UpdatingElement]].
 * @packageDocumentation
 */
/*
 * When using Closure Compiler, JSCompiler_renameProperty(property, object) is
 * replaced at compile time by the munged name for object[property]. We cannot
 * alias this function, so we have to use a small shim that has the same
 * behavior when not compiling.
 */
window.JSCompiler_renameProperty = (prop, _obj) => prop;
const defaultConverter = {
  toAttribute(value, type) {
    switch (type) {
      case Boolean:
        return value ? '' : null;
      case Object:
      case Array:
        // if the value is `null` or `undefined` pass this through
        // to allow removing/no change behavior.
        return value == null ? value : JSON.stringify(value);
    }
    return value;
  },
  fromAttribute(value, type) {
    switch (type) {
      case Boolean:
        return value !== null;
      case Number:
        return value === null ? null : Number(value);
      case Object:
      case Array:
        // Type assert to adhere to Bazel's "must type assert JSON parse" rule.
        return JSON.parse(value);
    }
    return value;
  }
};
/**
 * Change function that returns true if `value` is different from `oldValue`.
 * This method is used as the default for a property's `hasChanged` function.
 */
exports.defaultConverter = defaultConverter;
const notEqual = (value, old) => {
  // This ensures (old==NaN, value==NaN) always returns false
  return old !== value && (old === old || value === value);
};
exports.notEqual = notEqual;
const defaultPropertyDeclaration = {
  attribute: true,
  type: String,
  converter: defaultConverter,
  reflect: false,
  hasChanged: notEqual
};
const STATE_HAS_UPDATED = 1;
const STATE_UPDATE_REQUESTED = 1 << 2;
const STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;
const STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;
/**
 * The Closure JS Compiler doesn't currently have good support for static
 * property semantics where "this" is dynamic (e.g.
 * https://github.com/google/closure-compiler/issues/3177 and others) so we use
 * this hack to bypass any rewriting by the compiler.
 */
const finalized = 'finalized';
/**
 * Base element class which manages element properties and attributes. When
 * properties change, the `update` method is asynchronously called. This method
 * should be supplied by subclassers to render updates as desired.
 * @noInheritDoc
 */
class UpdatingElement extends HTMLElement {
  constructor() {
    super();
    this.initialize();
  }
  /**
   * Returns a list of attributes corresponding to the registered properties.
   * @nocollapse
   */
  static get observedAttributes() {
    // note: piggy backing on this to ensure we're finalized.
    this.finalize();
    const attributes = [];
    // Use forEach so this works even if for/of loops are compiled to for loops
    // expecting arrays
    this._classProperties.forEach((v, p) => {
      const attr = this._attributeNameForProperty(p, v);
      if (attr !== undefined) {
        this._attributeToPropertyMap.set(attr, p);
        attributes.push(attr);
      }
    });
    return attributes;
  }
  /**
   * Ensures the private `_classProperties` property metadata is created.
   * In addition to `finalize` this is also called in `createProperty` to
   * ensure the `@property` decorator can add property metadata.
   */
  /** @nocollapse */
  static _ensureClassProperties() {
    // ensure private storage for property declarations.
    if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {
      this._classProperties = new Map();
      // NOTE: Workaround IE11 not supporting Map constructor argument.
      const superProperties = Object.getPrototypeOf(this)._classProperties;
      if (superProperties !== undefined) {
        superProperties.forEach((v, k) => this._classProperties.set(k, v));
      }
    }
  }
  /**
   * Creates a property accessor on the element prototype if one does not exist
   * and stores a PropertyDeclaration for the property with the given options.
   * The property setter calls the property's `hasChanged` property option
   * or uses a strict identity check to determine whether or not to request
   * an update.
   *
   * This method may be overridden to customize properties; however,
   * when doing so, it's important to call `super.createProperty` to ensure
   * the property is setup correctly. This method calls
   * `getPropertyDescriptor` internally to get a descriptor to install.
   * To customize what properties do when they are get or set, override
   * `getPropertyDescriptor`. To customize the options for a property,
   * implement `createProperty` like this:
   *
   * static createProperty(name, options) {
   *   options = Object.assign(options, {myOption: true});
   *   super.createProperty(name, options);
   * }
   *
   * @nocollapse
   */
  static createProperty(name, options = defaultPropertyDeclaration) {
    // Note, since this can be called by the `@property` decorator which
    // is called before `finalize`, we ensure storage exists for property
    // metadata.
    this._ensureClassProperties();
    this._classProperties.set(name, options);
    // Do not generate an accessor if the prototype already has one, since
    // it would be lost otherwise and that would never be the user's intention;
    // Instead, we expect users to call `requestUpdate` themselves from
    // user-defined accessors. Note that if the super has an accessor we will
    // still overwrite it
    if (options.noAccessor || this.prototype.hasOwnProperty(name)) {
      return;
    }
    const key = typeof name === 'symbol' ? Symbol() : `__${name}`;
    const descriptor = this.getPropertyDescriptor(name, key, options);
    if (descriptor !== undefined) {
      Object.defineProperty(this.prototype, name, descriptor);
    }
  }
  /**
   * Returns a property descriptor to be defined on the given named property.
   * If no descriptor is returned, the property will not become an accessor.
   * For example,
   *
   *   class MyElement extends LitElement {
   *     static getPropertyDescriptor(name, key, options) {
   *       const defaultDescriptor =
   *           super.getPropertyDescriptor(name, key, options);
   *       const setter = defaultDescriptor.set;
   *       return {
   *         get: defaultDescriptor.get,
   *         set(value) {
   *           setter.call(this, value);
   *           // custom action.
   *         },
   *         configurable: true,
   *         enumerable: true
   *       }
   *     }
   *   }
   *
   * @nocollapse
   */
  static getPropertyDescriptor(name, key, options) {
    return {
      // tslint:disable-next-line:no-any no symbol in index
      get() {
        return this[key];
      },
      set(value) {
        const oldValue = this[name];
        this[key] = value;
        this.requestUpdateInternal(name, oldValue, options);
      },
      configurable: true,
      enumerable: true
    };
  }
  /**
   * Returns the property options associated with the given property.
   * These options are defined with a PropertyDeclaration via the `properties`
   * object or the `@property` decorator and are registered in
   * `createProperty(...)`.
   *
   * Note, this method should be considered "final" and not overridden. To
   * customize the options for a given property, override `createProperty`.
   *
   * @nocollapse
   * @final
   */
  static getPropertyOptions(name) {
    return this._classProperties && this._classProperties.get(name) || defaultPropertyDeclaration;
  }
  /**
   * Creates property accessors for registered properties and ensures
   * any superclasses are also finalized.
   * @nocollapse
   */
  static finalize() {
    // finalize any superclasses
    const superCtor = Object.getPrototypeOf(this);
    if (!superCtor.hasOwnProperty(finalized)) {
      superCtor.finalize();
    }
    this[finalized] = true;
    this._ensureClassProperties();
    // initialize Map populated in observedAttributes
    this._attributeToPropertyMap = new Map();
    // make any properties
    // Note, only process "own" properties since this element will inherit
    // any properties defined on the superClass, and finalization ensures
    // the entire prototype chain is finalized.
    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {
      const props = this.properties;
      // support symbols in properties (IE11 does not support this)
      const propKeys = [...Object.getOwnPropertyNames(props), ...(typeof Object.getOwnPropertySymbols === 'function' ? Object.getOwnPropertySymbols(props) : [])];
      // This for/of is ok because propKeys is an array
      for (const p of propKeys) {
        // note, use of `any` is due to TypeSript lack of support for symbol in
        // index types
        // tslint:disable-next-line:no-any no symbol in index
        this.createProperty(p, props[p]);
      }
    }
  }
  /**
   * Returns the property name for the given attribute `name`.
   * @nocollapse
   */
  static _attributeNameForProperty(name, options) {
    const attribute = options.attribute;
    return attribute === false ? undefined : typeof attribute === 'string' ? attribute : typeof name === 'string' ? name.toLowerCase() : undefined;
  }
  /**
   * Returns true if a property should request an update.
   * Called when a property value is set and uses the `hasChanged`
   * option for the property if present or a strict identity check.
   * @nocollapse
   */
  static _valueHasChanged(value, old, hasChanged = notEqual) {
    return hasChanged(value, old);
  }
  /**
   * Returns the property value for the given attribute value.
   * Called via the `attributeChangedCallback` and uses the property's
   * `converter` or `converter.fromAttribute` property option.
   * @nocollapse
   */
  static _propertyValueFromAttribute(value, options) {
    const type = options.type;
    const converter = options.converter || defaultConverter;
    const fromAttribute = typeof converter === 'function' ? converter : converter.fromAttribute;
    return fromAttribute ? fromAttribute(value, type) : value;
  }
  /**
   * Returns the attribute value for the given property value. If this
   * returns undefined, the property will *not* be reflected to an attribute.
   * If this returns null, the attribute will be removed, otherwise the
   * attribute will be set to the value.
   * This uses the property's `reflect` and `type.toAttribute` property options.
   * @nocollapse
   */
  static _propertyValueToAttribute(value, options) {
    if (options.reflect === undefined) {
      return;
    }
    const type = options.type;
    const converter = options.converter;
    const toAttribute = converter && converter.toAttribute || defaultConverter.toAttribute;
    return toAttribute(value, type);
  }
  /**
   * Performs element initialization. By default captures any pre-set values for
   * registered properties.
   */
  initialize() {
    this._updateState = 0;
    this._updatePromise = new Promise(res => this._enableUpdatingResolver = res);
    this._changedProperties = new Map();
    this._saveInstanceProperties();
    // ensures first update will be caught by an early access of
    // `updateComplete`
    this.requestUpdateInternal();
  }
  /**
   * Fixes any properties set on the instance before upgrade time.
   * Otherwise these would shadow the accessor and break these properties.
   * The properties are stored in a Map which is played back after the
   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome
   * (<=41), properties created for native platform properties like (`id` or
   * `name`) may not have default values set in the element constructor. On
   * these browsers native properties appear on instances and therefore their
   * default value will overwrite any element default (e.g. if the element sets
   * this.id = 'id' in the constructor, the 'id' will become '' since this is
   * the native platform default).
   */
  _saveInstanceProperties() {
    // Use forEach so this works even if for/of loops are compiled to for loops
    // expecting arrays
    this.constructor._classProperties.forEach((_v, p) => {
      if (this.hasOwnProperty(p)) {
        const value = this[p];
        delete this[p];
        if (!this._instanceProperties) {
          this._instanceProperties = new Map();
        }
        this._instanceProperties.set(p, value);
      }
    });
  }
  /**
   * Applies previously saved instance properties.
   */
  _applyInstanceProperties() {
    // Use forEach so this works even if for/of loops are compiled to for loops
    // expecting arrays
    // tslint:disable-next-line:no-any
    this._instanceProperties.forEach((v, p) => this[p] = v);
    this._instanceProperties = undefined;
  }
  connectedCallback() {
    // Ensure first connection completes an update. Updates cannot complete
    // before connection.
    this.enableUpdating();
  }
  enableUpdating() {
    if (this._enableUpdatingResolver !== undefined) {
      this._enableUpdatingResolver();
      this._enableUpdatingResolver = undefined;
    }
  }
  /**
   * Allows for `super.disconnectedCallback()` in extensions while
   * reserving the possibility of making non-breaking feature additions
   * when disconnecting at some point in the future.
   */
  disconnectedCallback() {}
  /**
   * Synchronizes property values when attributes change.
   */
  attributeChangedCallback(name, old, value) {
    if (old !== value) {
      this._attributeToProperty(name, value);
    }
  }
  _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {
    const ctor = this.constructor;
    const attr = ctor._attributeNameForProperty(name, options);
    if (attr !== undefined) {
      const attrValue = ctor._propertyValueToAttribute(value, options);
      // an undefined value does not change the attribute.
      if (attrValue === undefined) {
        return;
      }
      // Track if the property is being reflected to avoid
      // setting the property again via `attributeChangedCallback`. Note:
      // 1. this takes advantage of the fact that the callback is synchronous.
      // 2. will behave incorrectly if multiple attributes are in the reaction
      // stack at time of calling. However, since we process attributes
      // in `update` this should not be possible (or an extreme corner case
      // that we'd like to discover).
      // mark state reflecting
      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;
      if (attrValue == null) {
        this.removeAttribute(attr);
      } else {
        this.setAttribute(attr, attrValue);
      }
      // mark state not reflecting
      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;
    }
  }
  _attributeToProperty(name, value) {
    // Use tracking info to avoid deserializing attribute value if it was
    // just set from a property setter.
    if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {
      return;
    }
    const ctor = this.constructor;
    // Note, hint this as an `AttributeMap` so closure clearly understands
    // the type; it has issues with tracking types through statics
    // tslint:disable-next-line:no-unnecessary-type-assertion
    const propName = ctor._attributeToPropertyMap.get(name);
    if (propName !== undefined) {
      const options = ctor.getPropertyOptions(propName);
      // mark state reflecting
      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;
      this[propName] =
      // tslint:disable-next-line:no-any
      ctor._propertyValueFromAttribute(value, options);
      // mark state not reflecting
      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;
    }
  }
  /**
   * This protected version of `requestUpdate` does not access or return the
   * `updateComplete` promise. This promise can be overridden and is therefore
   * not free to access.
   */
  requestUpdateInternal(name, oldValue, options) {
    let shouldRequestUpdate = true;
    // If we have a property key, perform property update steps.
    if (name !== undefined) {
      const ctor = this.constructor;
      options = options || ctor.getPropertyOptions(name);
      if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {
        if (!this._changedProperties.has(name)) {
          this._changedProperties.set(name, oldValue);
        }
        // Add to reflecting properties set.
        // Note, it's important that every change has a chance to add the
        // property to `_reflectingProperties`. This ensures setting
        // attribute + property reflects correctly.
        if (options.reflect === true && !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {
          if (this._reflectingProperties === undefined) {
            this._reflectingProperties = new Map();
          }
          this._reflectingProperties.set(name, options);
        }
      } else {
        // Abort the request if the property should not be considered changed.
        shouldRequestUpdate = false;
      }
    }
    if (!this._hasRequestedUpdate && shouldRequestUpdate) {
      this._updatePromise = this._enqueueUpdate();
    }
  }
  /**
   * Requests an update which is processed asynchronously. This should
   * be called when an element should update based on some state not triggered
   * by setting a property. In this case, pass no arguments. It should also be
   * called when manually implementing a property setter. In this case, pass the
   * property `name` and `oldValue` to ensure that any configured property
   * options are honored. Returns the `updateComplete` Promise which is resolved
   * when the update completes.
   *
   * @param name {PropertyKey} (optional) name of requesting property
   * @param oldValue {any} (optional) old value of requesting property
   * @returns {Promise} A Promise that is resolved when the update completes.
   */
  requestUpdate(name, oldValue) {
    this.requestUpdateInternal(name, oldValue);
    return this.updateComplete;
  }
  /**
   * Sets up the element to asynchronously update.
   */
  async _enqueueUpdate() {
    this._updateState = this._updateState | STATE_UPDATE_REQUESTED;
    try {
      // Ensure any previous update has resolved before updating.
      // This `await` also ensures that property changes are batched.
      await this._updatePromise;
    } catch (e) {
      // Ignore any previous errors. We only care that the previous cycle is
      // done. Any error should have been handled in the previous update.
    }
    const result = this.performUpdate();
    // If `performUpdate` returns a Promise, we await it. This is done to
    // enable coordinating updates with a scheduler. Note, the result is
    // checked to avoid delaying an additional microtask unless we need to.
    if (result != null) {
      await result;
    }
    return !this._hasRequestedUpdate;
  }
  get _hasRequestedUpdate() {
    return this._updateState & STATE_UPDATE_REQUESTED;
  }
  get hasUpdated() {
    return this._updateState & STATE_HAS_UPDATED;
  }
  /**
   * Performs an element update. Note, if an exception is thrown during the
   * update, `firstUpdated` and `updated` will not be called.
   *
   * You can override this method to change the timing of updates. If this
   * method is overridden, `super.performUpdate()` must be called.
   *
   * For instance, to schedule updates to occur just before the next frame:
   *
   * ```
   * protected async performUpdate(): Promise<unknown> {
   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));
   *   super.performUpdate();
   * }
   * ```
   */
  performUpdate() {
    // Abort any update if one is not pending when this is called.
    // This can happen if `performUpdate` is called early to "flush"
    // the update.
    if (!this._hasRequestedUpdate) {
      return;
    }
    // Mixin instance properties once, if they exist.
    if (this._instanceProperties) {
      this._applyInstanceProperties();
    }
    let shouldUpdate = false;
    const changedProperties = this._changedProperties;
    try {
      shouldUpdate = this.shouldUpdate(changedProperties);
      if (shouldUpdate) {
        this.update(changedProperties);
      } else {
        this._markUpdated();
      }
    } catch (e) {
      // Prevent `firstUpdated` and `updated` from running when there's an
      // update exception.
      shouldUpdate = false;
      // Ensure element can accept additional updates after an exception.
      this._markUpdated();
      throw e;
    }
    if (shouldUpdate) {
      if (!(this._updateState & STATE_HAS_UPDATED)) {
        this._updateState = this._updateState | STATE_HAS_UPDATED;
        this.firstUpdated(changedProperties);
      }
      this.updated(changedProperties);
    }
  }
  _markUpdated() {
    this._changedProperties = new Map();
    this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;
  }
  /**
   * Returns a Promise that resolves when the element has completed updating.
   * The Promise value is a boolean that is `true` if the element completed the
   * update without triggering another update. The Promise result is `false` if
   * a property was set inside `updated()`. If the Promise is rejected, an
   * exception was thrown during the update.
   *
   * To await additional asynchronous work, override the `_getUpdateComplete`
   * method. For example, it is sometimes useful to await a rendered element
   * before fulfilling this Promise. To do this, first await
   * `super._getUpdateComplete()`, then any subsequent state.
   *
   * @returns {Promise} The Promise returns a boolean that indicates if the
   * update resolved without triggering another update.
   */
  get updateComplete() {
    return this._getUpdateComplete();
  }
  /**
   * Override point for the `updateComplete` promise.
   *
   * It is not safe to override the `updateComplete` getter directly due to a
   * limitation in TypeScript which means it is not possible to call a
   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target
   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).
   * This method should be overridden instead. For example:
   *
   *   class MyElement extends LitElement {
   *     async _getUpdateComplete() {
   *       await super._getUpdateComplete();
   *       await this._myChild.updateComplete;
   *     }
   *   }
   * @deprecated Override `getUpdateComplete()` instead for forward
   *     compatibility with `lit-element` 3.0 / `@lit/reactive-element`.
   */
  _getUpdateComplete() {
    return this.getUpdateComplete();
  }
  /**
   * Override point for the `updateComplete` promise.
   *
   * It is not safe to override the `updateComplete` getter directly due to a
   * limitation in TypeScript which means it is not possible to call a
   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target
   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).
   * This method should be overridden instead. For example:
   *
   *   class MyElement extends LitElement {
   *     async getUpdateComplete() {
   *       await super.getUpdateComplete();
   *       await this._myChild.updateComplete;
   *     }
   *   }
   */
  getUpdateComplete() {
    return this._updatePromise;
  }
  /**
   * Controls whether or not `update` should be called when the element requests
   * an update. By default, this method always returns `true`, but this can be
   * customized to control when to update.
   *
   * @param _changedProperties Map of changed properties with old values
   */
  shouldUpdate(_changedProperties) {
    return true;
  }
  /**
   * Updates the element. This method reflects property values to attributes.
   * It can be overridden to render and keep updated element DOM.
   * Setting properties inside this method will *not* trigger
   * another update.
   *
   * @param _changedProperties Map of changed properties with old values
   */
  update(_changedProperties) {
    if (this._reflectingProperties !== undefined && this._reflectingProperties.size > 0) {
      // Use forEach so this works even if for/of loops are compiled to for
      // loops expecting arrays
      this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));
      this._reflectingProperties = undefined;
    }
    this._markUpdated();
  }
  /**
   * Invoked whenever the element is updated. Implement to perform
   * post-updating tasks via DOM APIs, for example, focusing an element.
   *
   * Setting properties inside this method will trigger the element to update
   * again after this update cycle completes.
   *
   * @param _changedProperties Map of changed properties with old values
   */
  updated(_changedProperties) {}
  /**
   * Invoked when the element is first updated. Implement to perform one time
   * work on the element after update.
   *
   * Setting properties inside this method will trigger the element to update
   * again after this update cycle completes.
   *
   * @param _changedProperties Map of changed properties with old values
   */
  firstUpdated(_changedProperties) {}
}
exports.UpdatingElement = UpdatingElement;
_a = finalized;
/**
 * Marks class as having finished creating properties.
 */
UpdatingElement[_a] = true;
},{}],"../node_modules/lit-element/lib/decorators.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.customElement = void 0;
exports.eventOptions = eventOptions;
exports.internalProperty = internalProperty;
exports.property = property;
exports.query = query;
exports.queryAll = queryAll;
exports.queryAssignedNodes = queryAssignedNodes;
exports.queryAsync = queryAsync;
exports.state = void 0;
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
const legacyCustomElement = (tagName, clazz) => {
  window.customElements.define(tagName, clazz);
  // Cast as any because TS doesn't recognize the return type as being a
  // subtype of the decorated class when clazz is typed as
  // `Constructor<HTMLElement>` for some reason.
  // `Constructor<HTMLElement>` is helpful to make sure the decorator is
  // applied to elements however.
  // tslint:disable-next-line:no-any
  return clazz;
};
const standardCustomElement = (tagName, descriptor) => {
  const {
    kind,
    elements
  } = descriptor;
  return {
    kind,
    elements,
    // This callback is called once the class is otherwise fully defined
    finisher(clazz) {
      window.customElements.define(tagName, clazz);
    }
  };
};
/**
 * Class decorator factory that defines the decorated class as a custom element.
 *
 * ```
 * @customElement('my-element')
 * class MyElement {
 *   render() {
 *     return html``;
 *   }
 * }
 * ```
 * @category Decorator
 * @param tagName The name of the custom element to define.
 */
const customElement = tagName => classOrDescriptor => typeof classOrDescriptor === 'function' ? legacyCustomElement(tagName, classOrDescriptor) : standardCustomElement(tagName, classOrDescriptor);
exports.customElement = customElement;
const standardProperty = (options, element) => {
  // When decorating an accessor, pass it through and add property metadata.
  // Note, the `hasOwnProperty` check in `createProperty` ensures we don't
  // stomp over the user's accessor.
  if (element.kind === 'method' && element.descriptor && !('value' in element.descriptor)) {
    return Object.assign(Object.assign({}, element), {
      finisher(clazz) {
        clazz.createProperty(element.key, options);
      }
    });
  } else {
    // createProperty() takes care of defining the property, but we still
    // must return some kind of descriptor, so return a descriptor for an
    // unused prototype field. The finisher calls createProperty().
    return {
      kind: 'field',
      key: Symbol(),
      placement: 'own',
      descriptor: {},
      // When @babel/plugin-proposal-decorators implements initializers,
      // do this instead of the initializer below. See:
      // https://github.com/babel/babel/issues/9260 extras: [
      //   {
      //     kind: 'initializer',
      //     placement: 'own',
      //     initializer: descriptor.initializer,
      //   }
      // ],
      initializer() {
        if (typeof element.initializer === 'function') {
          this[element.key] = element.initializer.call(this);
        }
      },
      finisher(clazz) {
        clazz.createProperty(element.key, options);
      }
    };
  }
};
const legacyProperty = (options, proto, name) => {
  proto.constructor.createProperty(name, options);
};
/**
 * A property decorator which creates a LitElement property which reflects a
 * corresponding attribute value. A [[`PropertyDeclaration`]] may optionally be
 * supplied to configure property features.
 *
 * This decorator should only be used for public fields. Private or protected
 * fields should use the [[`internalProperty`]] decorator.
 *
 * @example
 * ```ts
 * class MyElement {
 *   @property({ type: Boolean })
 *   clicked = false;
 * }
 * ```
 * @category Decorator
 * @ExportDecoratedItems
 */
function property(options) {
  // tslint:disable-next-line:no-any decorator
  return (protoOrDescriptor, name) => name !== undefined ? legacyProperty(options, protoOrDescriptor, name) : standardProperty(options, protoOrDescriptor);
}
/**
 * Declares a private or protected property that still triggers updates to the
 * element when it changes.
 *
 * Properties declared this way must not be used from HTML or HTML templating
 * systems, they're solely for properties internal to the element. These
 * properties may be renamed by optimization tools like the Closure Compiler.
 * @category Decorator
 * @deprecated `internalProperty` has been renamed to `state` in lit-element
 *     3.0. Please update to `state` now to be compatible with 3.0.
 */
function internalProperty(options) {
  return property({
    attribute: false,
    hasChanged: options === null || options === void 0 ? void 0 : options.hasChanged
  });
}
/**
 * Declares a private or protected property that still triggers updates to the
 * element when it changes.
 *
 * Properties declared this way must not be used from HTML or HTML templating
 * systems, they're solely for properties internal to the element. These
 * properties may be renamed by optimization tools like the Closure Compiler.
 * @category Decorator
 */
const state = options => internalProperty(options);
/**
 * A property decorator that converts a class property into a getter that
 * executes a querySelector on the element's renderRoot.
 *
 * @param selector A DOMString containing one or more selectors to match.
 * @param cache An optional boolean which when true performs the DOM query only
 * once and caches the result.
 *
 * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector
 *
 * @example
 *
 * ```ts
 * class MyElement {
 *   @query('#first')
 *   first;
 *
 *   render() {
 *     return html`
 *       <div id="first"></div>
 *       <div id="second"></div>
 *     `;
 *   }
 * }
 * ```
 * @category Decorator
 */
exports.state = state;
function query(selector, cache) {
  return (protoOrDescriptor,
  // tslint:disable-next-line:no-any decorator
  name) => {
    const descriptor = {
      get() {
        return this.renderRoot.querySelector(selector);
      },
      enumerable: true,
      configurable: true
    };
    if (cache) {
      const prop = name !== undefined ? name : protoOrDescriptor.key;
      const key = typeof prop === 'symbol' ? Symbol() : `__${prop}`;
      descriptor.get = function () {
        if (this[key] === undefined) {
          this[key] = this.renderRoot.querySelector(selector);
        }
        return this[key];
      };
    }
    return name !== undefined ? legacyQuery(descriptor, protoOrDescriptor, name) : standardQuery(descriptor, protoOrDescriptor);
  };
}
// Note, in the future, we may extend this decorator to support the use case
// where the queried element may need to do work to become ready to interact
// with (e.g. load some implementation code). If so, we might elect to
// add a second argument defining a function that can be run to make the
// queried element loaded/updated/ready.
/**
 * A property decorator that converts a class property into a getter that
 * returns a promise that resolves to the result of a querySelector on the
 * element's renderRoot done after the element's `updateComplete` promise
 * resolves. When the queried property may change with element state, this
 * decorator can be used instead of requiring users to await the
 * `updateComplete` before accessing the property.
 *
 * @param selector A DOMString containing one or more selectors to match.
 *
 * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector
 *
 * @example
 * ```ts
 * class MyElement {
 *   @queryAsync('#first')
 *   first;
 *
 *   render() {
 *     return html`
 *       <div id="first"></div>
 *       <div id="second"></div>
 *     `;
 *   }
 * }
 *
 * // external usage
 * async doSomethingWithFirst() {
 *  (await aMyElement.first).doSomething();
 * }
 * ```
 * @category Decorator
 */
function queryAsync(selector) {
  return (protoOrDescriptor,
  // tslint:disable-next-line:no-any decorator
  name) => {
    const descriptor = {
      async get() {
        await this.updateComplete;
        return this.renderRoot.querySelector(selector);
      },
      enumerable: true,
      configurable: true
    };
    return name !== undefined ? legacyQuery(descriptor, protoOrDescriptor, name) : standardQuery(descriptor, protoOrDescriptor);
  };
}
/**
 * A property decorator that converts a class property into a getter
 * that executes a querySelectorAll on the element's renderRoot.
 *
 * @param selector A DOMString containing one or more selectors to match.
 *
 * See:
 * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll
 *
 * @example
 * ```ts
 * class MyElement {
 *   @queryAll('div')
 *   divs;
 *
 *   render() {
 *     return html`
 *       <div id="first"></div>
 *       <div id="second"></div>
 *     `;
 *   }
 * }
 * ```
 * @category Decorator
 */
function queryAll(selector) {
  return (protoOrDescriptor,
  // tslint:disable-next-line:no-any decorator
  name) => {
    const descriptor = {
      get() {
        return this.renderRoot.querySelectorAll(selector);
      },
      enumerable: true,
      configurable: true
    };
    return name !== undefined ? legacyQuery(descriptor, protoOrDescriptor, name) : standardQuery(descriptor, protoOrDescriptor);
  };
}
const legacyQuery = (descriptor, proto, name) => {
  Object.defineProperty(proto, name, descriptor);
};
const standardQuery = (descriptor, element) => ({
  kind: 'method',
  placement: 'prototype',
  key: element.key,
  descriptor
});
const standardEventOptions = (options, element) => {
  return Object.assign(Object.assign({}, element), {
    finisher(clazz) {
      Object.assign(clazz.prototype[element.key], options);
    }
  });
};
const legacyEventOptions =
// tslint:disable-next-line:no-any legacy decorator
(options, proto, name) => {
  Object.assign(proto[name], options);
};
/**
 * Adds event listener options to a method used as an event listener in a
 * lit-html template.
 *
 * @param options An object that specifies event listener options as accepted by
 * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.
 *
 * Current browsers support the `capture`, `passive`, and `once` options. See:
 * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters
 *
 * @example
 * ```ts
 * class MyElement {
 *   clicked = false;
 *
 *   render() {
 *     return html`
 *       <div @click=${this._onClick}`>
 *         <button></button>
 *       </div>
 *     `;
 *   }
 *
 *   @eventOptions({capture: true})
 *   _onClick(e) {
 *     this.clicked = true;
 *   }
 * }
 * ```
 * @category Decorator
 */
function eventOptions(options) {
  // Return value typed as any to prevent TypeScript from complaining that
  // standard decorator function signature does not match TypeScript decorator
  // signature
  // TODO(kschaaf): unclear why it was only failing on this decorator and not
  // the others
  return (protoOrDescriptor, name) => name !== undefined ? legacyEventOptions(options, protoOrDescriptor, name) : standardEventOptions(options, protoOrDescriptor);
}
// x-browser support for matches
// tslint:disable-next-line:no-any
const ElementProto = Element.prototype;
const legacyMatches = ElementProto.msMatchesSelector || ElementProto.webkitMatchesSelector;
/**
 * A property decorator that converts a class property into a getter that
 * returns the `assignedNodes` of the given named `slot`. Note, the type of
 * this property should be annotated as `NodeListOf<HTMLElement>`.
 *
 * @param slotName A string name of the slot.
 * @param flatten A boolean which when true flattens the assigned nodes,
 * meaning any assigned nodes that are slot elements are replaced with their
 * assigned nodes.
 * @param selector A string which filters the results to elements that match
 * the given css selector.
 *
 * * @example
 * ```ts
 * class MyElement {
 *   @queryAssignedNodes('list', true, '.item')
 *   listItems;
 *
 *   render() {
 *     return html`
 *       <slot name="list"></slot>
 *     `;
 *   }
 * }
 * ```
 * @category Decorator
 */
function queryAssignedNodes(slotName = '', flatten = false, selector = '') {
  return (protoOrDescriptor,
  // tslint:disable-next-line:no-any decorator
  name) => {
    const descriptor = {
      get() {
        const slotSelector = `slot${slotName ? `[name=${slotName}]` : ':not([name])'}`;
        const slot = this.renderRoot.querySelector(slotSelector);
        let nodes = slot && slot.assignedNodes({
          flatten
        });
        if (nodes && selector) {
          nodes = nodes.filter(node => node.nodeType === Node.ELEMENT_NODE && (
          // tslint:disable-next-line:no-any testing existence on older browsers
          node.matches ? node.matches(selector) : legacyMatches.call(node, selector)));
        }
        return nodes;
      },
      enumerable: true,
      configurable: true
    };
    return name !== undefined ? legacyQuery(descriptor, protoOrDescriptor, name) : standardQuery(descriptor, protoOrDescriptor);
  };
}
},{}],"../node_modules/lit-element/lib/css-tag.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.unsafeCSS = exports.supportsAdoptingStyleSheets = exports.css = exports.CSSResult = void 0;
/**
@license
Copyright (c) 2019 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
part of the polymer project is also subject to an additional IP rights grant
found at http://polymer.github.io/PATENTS.txt
*/
/**
 * Whether the current browser supports `adoptedStyleSheets`.
 */
const supportsAdoptingStyleSheets = window.ShadowRoot && (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) && 'adoptedStyleSheets' in Document.prototype && 'replace' in CSSStyleSheet.prototype;
exports.supportsAdoptingStyleSheets = supportsAdoptingStyleSheets;
const constructionToken = Symbol();
class CSSResult {
  constructor(cssText, safeToken) {
    if (safeToken !== constructionToken) {
      throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');
    }
    this.cssText = cssText;
  }
  // Note, this is a getter so that it's lazy. In practice, this means
  // stylesheets are not created until the first element instance is made.
  get styleSheet() {
    if (this._styleSheet === undefined) {
      // Note, if `supportsAdoptingStyleSheets` is true then we assume
      // CSSStyleSheet is constructable.
      if (supportsAdoptingStyleSheets) {
        this._styleSheet = new CSSStyleSheet();
        this._styleSheet.replaceSync(this.cssText);
      } else {
        this._styleSheet = null;
      }
    }
    return this._styleSheet;
  }
  toString() {
    return this.cssText;
  }
}
/**
 * Wrap a value for interpolation in a [[`css`]] tagged template literal.
 *
 * This is unsafe because untrusted CSS text can be used to phone home
 * or exfiltrate data to an attacker controlled site. Take care to only use
 * this with trusted input.
 */
exports.CSSResult = CSSResult;
const unsafeCSS = value => {
  return new CSSResult(String(value), constructionToken);
};
exports.unsafeCSS = unsafeCSS;
const textFromCSSResult = value => {
  if (value instanceof CSSResult) {
    return value.cssText;
  } else if (typeof value === 'number') {
    return value;
  } else {
    throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but
            take care to ensure page security.`);
  }
};
/**
 * Template tag which which can be used with LitElement's [[LitElement.styles |
 * `styles`]] property to set element styles. For security reasons, only literal
 * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]
 * may be used inside a template string part.
 */
const css = (strings, ...values) => {
  const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);
  return new CSSResult(cssText, constructionToken);
};
exports.css = css;
},{}],"../node_modules/lit-element/lit-element.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  LitElement: true,
  ReactiveElement: true,
  html: true,
  svg: true,
  TemplateResult: true,
  SVGTemplateResult: true
};
exports.LitElement = void 0;
Object.defineProperty(exports, "ReactiveElement", {
  enumerable: true,
  get: function () {
    return _updatingElement.UpdatingElement;
  }
});
Object.defineProperty(exports, "SVGTemplateResult", {
  enumerable: true,
  get: function () {
    return _litHtml.SVGTemplateResult;
  }
});
Object.defineProperty(exports, "TemplateResult", {
  enumerable: true,
  get: function () {
    return _litHtml.TemplateResult;
  }
});
Object.defineProperty(exports, "html", {
  enumerable: true,
  get: function () {
    return _litHtml.html;
  }
});
Object.defineProperty(exports, "svg", {
  enumerable: true,
  get: function () {
    return _litHtml.svg;
  }
});
var _shadyRender = require("lit-html/lib/shady-render.js");
var _updatingElement = require("./lib/updating-element.js");
Object.keys(_updatingElement).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _updatingElement[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _updatingElement[key];
    }
  });
});
var _decorators = require("./lib/decorators.js");
Object.keys(_decorators).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _decorators[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _decorators[key];
    }
  });
});
var _litHtml = require("lit-html/lit-html.js");
var _cssTag = require("./lib/css-tag.js");
Object.keys(_cssTag).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _cssTag[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cssTag[key];
    }
  });
});
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
/**
 * The main LitElement module, which defines the [[`LitElement`]] base class and
 * related APIs.
 *
 *  LitElement components can define a template and a set of observed
 * properties. Changing an observed property triggers a re-render of the
 * element.
 *
 *  Import [[`LitElement`]] and [[`html`]] from this module to create a
 * component:
 *
 *  ```js
 * import {LitElement, html} from 'lit-element';
 *
 * class MyElement extends LitElement {
 *
 *   // Declare observed properties
 *   static get properties() {
 *     return {
 *       adjective: {}
 *     }
 *   }
 *
 *   constructor() {
 *     this.adjective = 'awesome';
 *   }
 *
 *   // Define the element's template
 *   render() {
 *     return html`<p>your ${adjective} template here</p>`;
 *   }
 * }
 *
 * customElements.define('my-element', MyElement);
 * ```
 *
 * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.
 * The `UpdatingElement` class is provided for users that want to build
 * their own custom element base classes that don't use lit-html.
 *
 * @packageDocumentation
 */

// IMPORTANT: do not change the property name or the assignment expression.
// This line will be used in regexes to search for LitElement usage.
// TODO(justinfagnani): inject version number at build time
(window['litElementVersions'] || (window['litElementVersions'] = [])).push('2.5.1');
/**
 * Sentinal value used to avoid calling lit-html's render function when
 * subclasses do not implement `render`
 */
const renderNotImplemented = {};
/**
 * Base element class that manages element properties and attributes, and
 * renders a lit-html template.
 *
 * To define a component, subclass `LitElement` and implement a
 * `render` method to provide the component's template. Define properties
 * using the [[`properties`]] property or the [[`property`]] decorator.
 */
class LitElement extends _updatingElement.UpdatingElement {
  /**
   * Return the array of styles to apply to the element.
   * Override this method to integrate into a style management system.
   *
   * @nocollapse
   */
  static getStyles() {
    return this.styles;
  }
  /** @nocollapse */
  static _getUniqueStyles() {
    // Only gather styles once per class
    if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {
      return;
    }
    // Take care not to call `this.getStyles()` multiple times since this
    // generates new CSSResults each time.
    // TODO(sorvell): Since we do not cache CSSResults by input, any
    // shared styles will generate new stylesheet objects, which is wasteful.
    // This should be addressed when a browser ships constructable
    // stylesheets.
    const userStyles = this.getStyles();
    if (Array.isArray(userStyles)) {
      // De-duplicate styles preserving the _last_ instance in the set.
      // This is a performance optimization to avoid duplicated styles that can
      // occur especially when composing via subclassing.
      // The last item is kept to try to preserve the cascade order with the
      // assumption that it's most important that last added styles override
      // previous styles.
      const addStyles = (styles, set) => styles.reduceRight((set, s) =>
      // Note: On IE set.add() does not return the set
      Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);
      // Array.from does not work on Set in IE, otherwise return
      // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()
      const set = addStyles(userStyles, new Set());
      const styles = [];
      set.forEach(v => styles.unshift(v));
      this._styles = styles;
    } else {
      this._styles = userStyles === undefined ? [] : [userStyles];
    }
    // Ensure that there are no invalid CSSStyleSheet instances here. They are
    // invalid in two conditions.
    // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but
    //     this is impossible to check except via .replaceSync or use
    // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is
    //     false)
    this._styles = this._styles.map(s => {
      if (s instanceof CSSStyleSheet && !_cssTag.supportsAdoptingStyleSheets) {
        // Flatten the cssText from the passed constructible stylesheet (or
        // undetectable non-constructible stylesheet). The user might have
        // expected to update their stylesheets over time, but the alternative
        // is a crash.
        const cssText = Array.prototype.slice.call(s.cssRules).reduce((css, rule) => css + rule.cssText, '');
        return (0, _cssTag.unsafeCSS)(cssText);
      }
      return s;
    });
  }
  /**
   * Performs element initialization. By default this calls
   * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and
   * captures any pre-set values for registered properties.
   */
  initialize() {
    super.initialize();
    this.constructor._getUniqueStyles();
    this.renderRoot = this.createRenderRoot();
    // Note, if renderRoot is not a shadowRoot, styles would/could apply to the
    // element's getRootNode(). While this could be done, we're choosing not to
    // support this now since it would require different logic around de-duping.
    if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {
      this.adoptStyles();
    }
  }
  /**
   * Returns the node into which the element should render and by default
   * creates and returns an open shadowRoot. Implement to customize where the
   * element's DOM is rendered. For example, to render into the element's
   * childNodes, return `this`.
   * @returns {Element|DocumentFragment} Returns a node into which to render.
   */
  createRenderRoot() {
    return this.attachShadow(this.constructor.shadowRootOptions);
  }
  /**
   * Applies styling to the element shadowRoot using the [[`styles`]]
   * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where
   * available and will fallback otherwise. When Shadow DOM is polyfilled,
   * ShadyCSS scopes styles and adds them to the document. When Shadow DOM
   * is available but `adoptedStyleSheets` is not, styles are appended to the
   * end of the `shadowRoot` to [mimic spec
   * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).
   */
  adoptStyles() {
    const styles = this.constructor._styles;
    if (styles.length === 0) {
      return;
    }
    // There are three separate cases here based on Shadow DOM support.
    // (1) shadowRoot polyfilled: use ShadyCSS
    // (2) shadowRoot.adoptedStyleSheets available: use it
    // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after
    // rendering
    if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {
      window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map(s => s.cssText), this.localName);
    } else if (_cssTag.supportsAdoptingStyleSheets) {
      this.renderRoot.adoptedStyleSheets = styles.map(s => s instanceof CSSStyleSheet ? s : s.styleSheet);
    } else {
      // This must be done after rendering so the actual style insertion is done
      // in `update`.
      this._needsShimAdoptedStyleSheets = true;
    }
  }
  connectedCallback() {
    super.connectedCallback();
    // Note, first update/render handles styleElement so we only call this if
    // connected after first update.
    if (this.hasUpdated && window.ShadyCSS !== undefined) {
      window.ShadyCSS.styleElement(this);
    }
  }
  /**
   * Updates the element. This method reflects property values to attributes
   * and calls `render` to render DOM via lit-html. Setting properties inside
   * this method will *not* trigger another update.
   * @param _changedProperties Map of changed properties with old values
   */
  update(changedProperties) {
    // Setting properties in `render` should not trigger an update. Since
    // updates are allowed after super.update, it's important to call `render`
    // before that.
    const templateResult = this.render();
    super.update(changedProperties);
    // If render is not implemented by the component, don't call lit-html render
    if (templateResult !== renderNotImplemented) {
      this.constructor.render(templateResult, this.renderRoot, {
        scopeName: this.localName,
        eventContext: this
      });
    }
    // When native Shadow DOM is used but adoptedStyles are not supported,
    // insert styling after rendering to ensure adoptedStyles have highest
    // priority.
    if (this._needsShimAdoptedStyleSheets) {
      this._needsShimAdoptedStyleSheets = false;
      this.constructor._styles.forEach(s => {
        const style = document.createElement('style');
        style.textContent = s.cssText;
        this.renderRoot.appendChild(style);
      });
    }
  }
  /**
   * Invoked on each update to perform rendering tasks. This method may return
   * any value renderable by lit-html's `NodePart` - typically a
   * `TemplateResult`. Setting properties inside this method will *not* trigger
   * the element to update.
   */
  render() {
    return renderNotImplemented;
  }
}
/**
 * Ensure this class is marked as `finalized` as an optimization ensuring
 * it will not needlessly try to `finalize`.
 *
 * Note this property name is a string to prevent breaking Closure JS Compiler
 * optimizations. See updating-element.ts for more information.
 */
exports.LitElement = LitElement;
LitElement['finalized'] = true;
/**
 * Reference to the underlying library method used to render the element's
 * DOM. By default, points to the `render` method from lit-html's shady-render
 * module.
 *
 * **Most users will never need to touch this property.**
 *
 * This  property should not be confused with the `render` instance method,
 * which should be overridden to define a template for the element.
 *
 * Advanced users creating a new base class based on LitElement can override
 * this property to point to a custom render method with a signature that
 * matches [shady-render's `render`
 * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).
 *
 * @nocollapse
 */
LitElement.render = _shadyRender.render;
/** @nocollapse */
LitElement.shadowRootOptions = {
  mode: 'open'
};
},{"lit-html/lib/shady-render.js":"../node_modules/lit-html/lib/shady-render.js","./lib/updating-element.js":"../node_modules/lit-element/lib/updating-element.js","./lib/decorators.js":"../node_modules/lit-element/lib/decorators.js","lit-html/lit-html.js":"../node_modules/lit-html/lit-html.js","./lib/css-tag.js":"../node_modules/lit-element/lib/css-tag.js"}],"elements/app.ts":[function(require,module,exports) {
"use strict";

var _templateObject, _templateObject2;
function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
    d;
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = this && this.__metadata || function (k, v) {
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var _a, _b;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.App = void 0;
var lit_element_1 = require("lit-element");
var App = /*#__PURE__*/function (_lit_element_1$LitEle) {
  _inherits(App, _lit_element_1$LitEle);
  var _super = _createSuper(App);
  function App() {
    _classCallCheck(this, App);
    return _super.apply(this, arguments);
  }
  _createClass(App, [{
    key: "injectCanvas",
    value: function injectCanvas(canvas) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        var dom;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return this.canvasContainer;
            case 2:
              dom = _context.sent;
              dom.append(canvas);
            case 4:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
    }
  }, {
    key: "visible",
    get: function get() {
      return this.style.visibility !== 'hidden';
    }
  }, {
    key: "hide",
    value: function hide() {
      this.style.visibility = 'hidden';
      this.style.cursor = "inherit";
    }
  }, {
    key: "show",
    value: function show() {
      this.style.visibility = 'inherit';
      this.style.cursor = "none";
    }
  }, {
    key: "render",
    value: function render() {
      return lit_element_1.html(_templateObject || (_templateObject = _taggedTemplateLiteral(["<div class=\"canvas-container\"></div>"])));
    }
  }]);
  return App;
}(lit_element_1.LitElement);
App.styles = lit_element_1.css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n    :host {\n      display: block;\n      width: 100%;\n      height: 100%;\n      position: fixed;\n      top: 0;\n      z-index: ", ";\n      left: 0;\n      visibility: inherit;\n    }\n  "])), Number.MAX_SAFE_INTEGER);
__decorate([lit_element_1.queryAsync('.canvas-container'), __metadata("design:type", typeof (_a = typeof Promise !== "undefined" && Promise) === "function" ? _a : Object)], App.prototype, "canvasContainer", void 0);
__decorate([lit_element_1.query('canvas'), __metadata("design:type", typeof (_b = typeof HTMLCanvasElement !== "undefined" && HTMLCanvasElement) === "function" ? _b : Object)], App.prototype, "canvas", void 0);
App = __decorate([lit_element_1.customElement('ac-root')], App);
exports.App = App;
},{"lit-element":"../node_modules/lit-element/lit-element.js"}],"../node_modules/lit-html/directives/unsafe-html.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.unsafeHTML = void 0;
var _parts = require("../lib/parts.js");
var _litHtml = require("../lit-html.js");
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */

// For each part, remember the value that was last rendered to the part by the
// unsafeHTML directive, and the DocumentFragment that was last set as a value.
// The DocumentFragment is used as a unique key to check if the last value
// rendered to the part was with unsafeHTML. If not, we'll always re-render the
// value passed to unsafeHTML.
const previousValues = new WeakMap();
/**
 * Renders the result as HTML, rather than text.
 *
 * Note, this is unsafe to use with any user-provided input that hasn't been
 * sanitized or escaped, as it may lead to cross-site-scripting
 * vulnerabilities.
 */
const unsafeHTML = (0, _litHtml.directive)(value => part => {
  if (!(part instanceof _litHtml.NodePart)) {
    throw new Error('unsafeHTML can only be used in text bindings');
  }
  const previousValue = previousValues.get(part);
  if (previousValue !== undefined && (0, _parts.isPrimitive)(value) && value === previousValue.value && part.value === previousValue.fragment) {
    return;
  }
  const template = document.createElement('template');
  template.innerHTML = value; // innerHTML casts to string internally
  const fragment = document.importNode(template.content, true);
  part.setValue(fragment);
  previousValues.set(part, {
    value,
    fragment
  });
});
exports.unsafeHTML = unsafeHTML;
},{"../lib/parts.js":"../node_modules/lit-html/lib/parts.js","../lit-html.js":"../node_modules/lit-html/lit-html.js"}],"../node_modules/nearest-color/nearestColor.js":[function(require,module,exports) {
(function(context) {

  /**
   * Defines an available color.
   *
   * @typedef {Object} ColorSpec
   * @property {string=} name A name for the color, e.g., 'red'
   * @property {string} source The hex-based color string, e.g., '#FF0'
   * @property {RGB} rgb The {@link RGB} color values
   */

  /**
   * Describes a matched color.
   *
   * @typedef {Object} ColorMatch
   * @property {string} name The name of the matched color, e.g., 'red'
   * @property {string} value The hex-based color string, e.g., '#FF0'
   * @property {RGB} rgb The {@link RGB} color values.
   */

  /**
   * Provides the RGB breakdown of a color.
   *
   * @typedef {Object} RGB
   * @property {number} r The red component, from 0 to 255
   * @property {number} g The green component, from 0 to 255
   * @property {number} b The blue component, from 0 to 255
   */

  /**
   * Gets the nearest color, from the given list of {@link ColorSpec} objects
   * (which defaults to {@link nearestColor.DEFAULT_COLORS}).
   *
   * Probably you wouldn't call this method directly. Instead you'd get a custom
   * color matcher by calling {@link nearestColor.from}.
   *
   * @public
   * @param {RGB|string} needle Either an {@link RGB} color or a hex-based
   *     string representing one, e.g., '#FF0'
   * @param {Array.<ColorSpec>=} colors An optional list of available colors
   *     (defaults to {@link nearestColor.DEFAULT_COLORS})
   * @return {ColorMatch|string} If the colors in the provided list had names,
   *     then a {@link ColorMatch} object with the name and (hex) value of the
   *     nearest color from the list. Otherwise, simply the hex value.
   *
   * @example
   * nearestColor({ r: 200, g: 50, b: 50 }); // => '#f00'
   * nearestColor('#f11');                   // => '#f00'
   * nearestColor('#f88');                   // => '#f80'
   * nearestColor('#ffe');                   // => '#ff0'
   * nearestColor('#efe');                   // => '#ff0'
   * nearestColor('#abc');                   // => '#808'
   * nearestColor('red');                    // => '#f00'
   * nearestColor('foo');                    // => throws
   */
  function nearestColor(needle, colors) {
    needle = parseColor(needle);

    if (!needle) {
      return null;
    }

    var distanceSq,
        minDistanceSq = Infinity,
        rgb,
        value;

    colors || (colors = nearestColor.DEFAULT_COLORS);

    for (var i = 0; i < colors.length; ++i) {
      rgb = colors[i].rgb;

      distanceSq = (
        Math.pow(needle.r - rgb.r, 2) +
        Math.pow(needle.g - rgb.g, 2) +
        Math.pow(needle.b - rgb.b, 2)
      );

      if (distanceSq < minDistanceSq) {
        minDistanceSq = distanceSq;
        value = colors[i];
      }
    }

    if (value.name) {
      return {
        name: value.name,
        value: value.source,
        rgb: value.rgb,
        distance: Math.sqrt(minDistanceSq)
      };
    }

    return value.source;
  }

  /**
   * Provides a matcher to find the nearest color based on the provided list of
   * available colors.
   *
   * @public
   * @param {Array.<string>|Object} availableColors An array of hex-based color
   *     strings, or an object mapping color *names* to hex values.
   * @return {function(string):ColorMatch|string} A function with the same
   *     behavior as {@link nearestColor}, but with the list of colors
   *     predefined.
   *
   * @example
   * var colors = {
   *   'maroon': '#800',
   *   'light yellow': { r: 255, g: 255, b: 51 },
   *   'pale blue': '#def',
   *   'white': 'fff'
   * };
   *
   * var bgColors = [
   *   '#eee',
   *   '#444'
   * ];
   *
   * var invalidColors = {
   *   'invalid': 'foo'
   * };
   *
   * var getColor = nearestColor.from(colors);
   * var getBGColor = getColor.from(bgColors);
   * var getAnyColor = nearestColor.from(colors).or(bgColors);
   *
   * getColor('ffe');
   * // => { name: 'white', value: 'fff', rgb: { r: 255, g: 255, b: 255 }, distance: 17}
   *
   * getColor('#f00');
   * // => { name: 'maroon', value: '#800', rgb: { r: 136, g: 0, b: 0 }, distance: 119}
   *
   * getColor('#ff0');
   * // => { name: 'light yellow', value: '#ffff33', rgb: { r: 255, g: 255, b: 51 }, distance: 51}
   *
   * getBGColor('#fff'); // => '#eee'
   * getBGColor('#000'); // => '#444'
   *
   * getAnyColor('#f00');
   * // => { name: 'maroon', value: '#800', rgb: { r: 136, g: 0, b: 0 }, distance: 119}
   *
   * getAnyColor('#888'); // => '#444'
   *
   * nearestColor.from(invalidColors); // => throws
   */
  nearestColor.from = function from(availableColors) {
    var colors = mapColors(availableColors),
        nearestColorBase = nearestColor;

    var matcher = function nearestColor(hex) {
      return nearestColorBase(hex, colors);
    };

    // Keep the 'from' method, to support changing the list of available colors
    // multiple times without needing to keep a reference to the original
    // nearestColor function.
    matcher.from = from;

    // Also provide a way to combine multiple color lists.
    matcher.or = function or(alternateColors) {
      var extendedColors = colors.concat(mapColors(alternateColors));
      return nearestColor.from(extendedColors);
    };

    return matcher;
  };

  /**
   * Given either an array or object of colors, returns an array of
   * {@link ColorSpec} objects (with {@link RGB} values).
   *
   * @private
   * @param {Array.<string>|Object} colors An array of hex-based color strings, or
   *     an object mapping color *names* to hex values.
   * @return {Array.<ColorSpec>} An array of {@link ColorSpec} objects
   *     representing the same colors passed in.
   */
  function mapColors(colors) {
    if (colors instanceof Array) {
      return colors.map(function(color) {
        return createColorSpec(color);
      });
    }

    return Object.keys(colors).map(function(name) {
      return createColorSpec(colors[name], name);
    });
  };

  /**
   * Parses a color from a string.
   *
   * @private
   * @param {RGB|string} source
   * @return {RGB}
   *
   * @example
   * parseColor({ r: 3, g: 22, b: 111 }); // => { r: 3, g: 22, b: 111 }
   * parseColor('#f00');                  // => { r: 255, g: 0, b: 0 }
   * parseColor('#04fbc8');               // => { r: 4, g: 251, b: 200 }
   * parseColor('#FF0');                  // => { r: 255, g: 255, b: 0 }
   * parseColor('rgb(3, 10, 100)');       // => { r: 3, g: 10, b: 100 }
   * parseColor('rgb(50%, 0%, 50%)');     // => { r: 128, g: 0, b: 128 }
   * parseColor('aqua');                  // => { r: 0, g: 255, b: 255 }
   * parseColor('fff');                   // => { r: 255, g: 255, b: 255 }
   * parseColor('foo');                   // => throws
   */
  function parseColor(source) {
    var red, green, blue;

    if (typeof source === 'object') {
      return source;
    }

    if (source in nearestColor.STANDARD_COLORS) {
      return parseColor(nearestColor.STANDARD_COLORS[source]);
    }

    var hexMatch = source.match(/^#?((?:[0-9a-f]{3}){1,2})$/i);
    if (hexMatch) {
      hexMatch = hexMatch[1];

      if (hexMatch.length === 3) {
        hexMatch = [
          hexMatch.charAt(0) + hexMatch.charAt(0),
          hexMatch.charAt(1) + hexMatch.charAt(1),
          hexMatch.charAt(2) + hexMatch.charAt(2)
        ];

      } else {
        hexMatch = [
          hexMatch.substring(0, 2),
          hexMatch.substring(2, 4),
          hexMatch.substring(4, 6)
        ];
      }

      red = parseInt(hexMatch[0], 16);
      green = parseInt(hexMatch[1], 16);
      blue = parseInt(hexMatch[2], 16);

      return { r: red, g: green, b: blue };
    }

    var rgbMatch = source.match(/^rgb\(\s*(\d{1,3}%?),\s*(\d{1,3}%?),\s*(\d{1,3}%?)\s*\)$/i);
    if (rgbMatch) {
      red = parseComponentValue(rgbMatch[1]);
      green = parseComponentValue(rgbMatch[2]);
      blue = parseComponentValue(rgbMatch[3]);

      return { r: red, g: green, b: blue };
    }

    throw Error('"' + source + '" is not a valid color');
  }

  /**
   * Creates a {@link ColorSpec} from either a string or an {@link RGB}.
   *
   * @private
   * @param {string|RGB} input
   * @param {string=} name
   * @return {ColorSpec}
   *
   * @example
   * createColorSpec('#800'); // => {
   *   source: '#800',
   *   rgb: { r: 136, g: 0, b: 0 }
   * }
   *
   * createColorSpec('#800', 'maroon'); // => {
   *   name: 'maroon',
   *   source: '#800',
   *   rgb: { r: 136, g: 0, b: 0 }
   * }
   */
  function createColorSpec(input, name) {
    var color = {};

    if (name) {
      color.name = name;
    }

    if (typeof input === 'string') {
      color.source = input;
      color.rgb = parseColor(input);

    } else if (typeof input === 'object') {
      // This is for if/when we're concatenating lists of colors.
      if (input.source) {
        return createColorSpec(input.source, input.name);
      }

      color.rgb = input;
      color.source = rgbToHex(input);
    }

    return color;
  }

  /**
   * Parses a value between 0-255 from a string.
   *
   * @private
   * @param {string} string
   * @return {number}
   *
   * @example
   * parseComponentValue('100');  // => 100
   * parseComponentValue('100%'); // => 255
   * parseComponentValue('50%');  // => 128
   */
  function parseComponentValue(string) {
    if (string.charAt(string.length - 1) === '%') {
      return Math.round(parseInt(string, 10) * 255 / 100);
    }

    return Number(string);
  }

  /**
   * Converts an {@link RGB} color to its hex representation.
   *
   * @private
   * @param {RGB} rgb
   * @return {string}
   *
   * @example
   * rgbToHex({ r: 255, g: 128, b: 0 }); // => '#ff8000'
   */
  function rgbToHex(rgb) {
    return '#' + leadingZero(rgb.r.toString(16)) +
      leadingZero(rgb.g.toString(16)) + leadingZero(rgb.b.toString(16));
  }

  /**
   * Puts a 0 in front of a numeric string if it's only one digit. Otherwise
   * nothing (just returns the value passed in).
   *
   * @private
   * @param {string} value
   * @return
   *
   * @example
   * leadingZero('1');  // => '01'
   * leadingZero('12'); // => '12'
   */
  function leadingZero(value) {
    if (value.length === 1) {
      value = '0' + value;
    }
    return value;
  }

  /**
   * A map from the names of standard CSS colors to their hex values.
   */
  nearestColor.STANDARD_COLORS = {
    aqua: '#0ff',
    black: '#000',
    blue: '#00f',
    fuchsia: '#f0f',
    gray: '#808080',
    green: '#008000',
    lime: '#0f0',
    maroon: '#800000',
    navy: '#000080',
    olive: '#808000',
    orange: '#ffa500',
    purple: '#800080',
    red: '#f00',
    silver: '#c0c0c0',
    teal: '#008080',
    white: '#fff',
    yellow: '#ff0'
  };

  /**
   * Default colors. Comprises the colors of the rainbow (good ol' ROY G. BIV).
   * This list will be used for calls to {@nearestColor} that don't specify a list
   * of available colors to match.
   */
  nearestColor.DEFAULT_COLORS = mapColors([
    '#f00', // r
    '#f80', // o
    '#ff0', // y
    '#0f0', // g
    '#00f', // b
    '#008', // i
    '#808'  // v
  ]);

  nearestColor.VERSION = '0.4.4';

  if (typeof module === 'object' && module && module.exports) {
    module.exports = nearestColor;
  } else {
    context.nearestColor = nearestColor;
  }

}(this));

},{}],"elements/snackbar.ts":[function(require,module,exports) {
"use strict";

var _templateObject, _templateObject2;
function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});
var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
    d;
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  __setModuleDefault(result, mod);
  return result;
};
var __metadata = this && this.__metadata || function (k, v) {
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Snackbar = exports.snackbarFactory = void 0;
var lit_element_1 = require("lit-element");
var unsafe_html_js_1 = require("lit-html/directives/unsafe-html.js");
var nearestColour = __importStar(require("nearest-color"));
var DURATION = 2000;
var colours = {
  black: '#000',
  white: '#fff',
  slate: {
    50: '#f8fafc',
    100: '#f1f5f9',
    200: '#e2e8f0',
    300: '#cbd5e1',
    400: '#94a3b8',
    500: '#64748b',
    600: '#475569',
    700: '#334155',
    800: '#1e293b',
    900: '#0f172a'
  },
  gray: {
    50: '#f9fafb',
    100: '#f3f4f6',
    200: '#e5e7eb',
    300: '#d1d5db',
    400: '#9ca3af',
    500: '#6b7280',
    600: '#4b5563',
    700: '#374151',
    800: '#1f2937',
    900: '#111827'
  },
  zinc: {
    50: '#fafafa',
    100: '#f4f4f5',
    200: '#e4e4e7',
    300: '#d4d4d8',
    400: '#a1a1aa',
    500: '#71717a',
    600: '#52525b',
    700: '#3f3f46',
    800: '#27272a',
    900: '#18181b'
  },
  neutral: {
    50: '#fafafa',
    100: '#f5f5f5',
    200: '#e5e5e5',
    300: '#d4d4d4',
    400: '#a3a3a3',
    500: '#737373',
    600: '#525252',
    700: '#404040',
    800: '#262626',
    900: '#171717'
  },
  stone: {
    50: '#fafaf9',
    100: '#f5f5f4',
    200: '#e7e5e4',
    300: '#d6d3d1',
    400: '#a8a29e',
    500: '#78716c',
    600: '#57534e',
    700: '#44403c',
    800: '#292524',
    900: '#1c1917'
  },
  red: {
    50: '#fef2f2',
    100: '#fee2e2',
    200: '#fecaca',
    300: '#fca5a5',
    400: '#f87171',
    500: '#ef4444',
    600: '#dc2626',
    700: '#b91c1c',
    800: '#991b1b',
    900: '#7f1d1d'
  },
  orange: {
    50: '#fff7ed',
    100: '#ffedd5',
    200: '#fed7aa',
    300: '#fdba74',
    400: '#fb923c',
    500: '#f97316',
    600: '#ea580c',
    700: '#c2410c',
    800: '#9a3412',
    900: '#7c2d12'
  },
  amber: {
    50: '#fffbeb',
    100: '#fef3c7',
    200: '#fde68a',
    300: '#fcd34d',
    400: '#fbbf24',
    500: '#f59e0b',
    600: '#d97706',
    700: '#b45309',
    800: '#92400e',
    900: '#78350f'
  },
  yellow: {
    50: '#fefce8',
    100: '#fef9c3',
    200: '#fef08a',
    300: '#fde047',
    400: '#facc15',
    500: '#eab308',
    600: '#ca8a04',
    700: '#a16207',
    800: '#854d0e',
    900: '#713f12'
  },
  lime: {
    50: '#f7fee7',
    100: '#ecfccb',
    200: '#d9f99d',
    300: '#bef264',
    400: '#a3e635',
    500: '#84cc16',
    600: '#65a30d',
    700: '#4d7c0f',
    800: '#3f6212',
    900: '#365314'
  },
  green: {
    50: '#f0fdf4',
    100: '#dcfce7',
    200: '#bbf7d0',
    300: '#86efac',
    400: '#4ade80',
    500: '#22c55e',
    600: '#16a34a',
    700: '#15803d',
    800: '#166534',
    900: '#14532d'
  },
  emerald: {
    50: '#ecfdf5',
    100: '#d1fae5',
    200: '#a7f3d0',
    300: '#6ee7b7',
    400: '#34d399',
    500: '#10b981',
    600: '#059669',
    700: '#047857',
    800: '#065f46',
    900: '#064e3b'
  },
  teal: {
    50: '#f0fdfa',
    100: '#ccfbf1',
    200: '#99f6e4',
    300: '#5eead4',
    400: '#2dd4bf',
    500: '#14b8a6',
    600: '#0d9488',
    700: '#0f766e',
    800: '#115e59',
    900: '#134e4a'
  },
  cyan: {
    50: '#ecfeff',
    100: '#cffafe',
    200: '#a5f3fc',
    300: '#67e8f9',
    400: '#22d3ee',
    500: '#06b6d4',
    600: '#0891b2',
    700: '#0e7490',
    800: '#155e75',
    900: '#164e63'
  },
  sky: {
    50: '#f0f9ff',
    100: '#e0f2fe',
    200: '#bae6fd',
    300: '#7dd3fc',
    400: '#38bdf8',
    500: '#0ea5e9',
    600: '#0284c7',
    700: '#0369a1',
    800: '#075985',
    900: '#0c4a6e'
  },
  blue: {
    50: '#eff6ff',
    100: '#dbeafe',
    200: '#bfdbfe',
    300: '#93c5fd',
    400: '#60a5fa',
    500: '#3b82f6',
    600: '#2563eb',
    700: '#1d4ed8',
    800: '#1e40af',
    900: '#1e3a8a'
  },
  indigo: {
    50: '#eef2ff',
    100: '#e0e7ff',
    200: '#c7d2fe',
    300: '#a5b4fc',
    400: '#818cf8',
    500: '#6366f1',
    600: '#4f46e5',
    700: '#4338ca',
    800: '#3730a3',
    900: '#312e81'
  },
  violet: {
    50: '#f5f3ff',
    100: '#ede9fe',
    200: '#ddd6fe',
    300: '#c4b5fd',
    400: '#a78bfa',
    500: '#8b5cf6',
    600: '#7c3aed',
    700: '#6d28d9',
    800: '#5b21b6',
    900: '#4c1d95'
  },
  purple: {
    50: '#faf5ff',
    100: '#f3e8ff',
    200: '#e9d5ff',
    300: '#d8b4fe',
    400: '#c084fc',
    500: '#a855f7',
    600: '#9333ea',
    700: '#7e22ce',
    800: '#6b21a8',
    900: '#581c87'
  },
  fuchsia: {
    50: '#fdf4ff',
    100: '#fae8ff',
    200: '#f5d0fe',
    300: '#f0abfc',
    400: '#e879f9',
    500: '#d946ef',
    600: '#c026d3',
    700: '#a21caf',
    800: '#86198f',
    900: '#701a75'
  },
  pink: {
    50: '#fdf2f8',
    100: '#fce7f3',
    200: '#fbcfe8',
    300: '#f9a8d4',
    400: '#f472b6',
    500: '#ec4899',
    600: '#db2777',
    700: '#be185d',
    800: '#9d174d',
    900: '#831843'
  },
  rose: {
    50: '#fff1f2',
    100: '#ffe4e6',
    200: '#fecdd3',
    300: '#fda4af',
    400: '#fb7185',
    500: '#f43f5e',
    600: '#e11d48',
    700: '#be123c',
    800: '#9f1239',
    900: '#881337'
  }
};
var tailwindColours = {};
for (var coloursKey in colours) {
  if (typeof colours[coloursKey] === 'string') {
    tailwindColours[coloursKey] = colours[coloursKey];
  } else {
    for (var nestedKey in colours[coloursKey]) {
      tailwindColours["".concat(coloursKey, "-").concat(nestedKey)] = colours[coloursKey][nestedKey];
    }
  }
}
exports.snackbarFactory = function (wrapper) {
  var dom = document.createElement('ac-snackbar');
  wrapper.shadowRoot.append(dom);
  return dom;
};
var Snackbar = /*#__PURE__*/function (_lit_element_1$LitEle) {
  _inherits(Snackbar, _lit_element_1$LitEle);
  var _super = _createSuper(Snackbar);
  function Snackbar() {
    var _this;
    _classCallCheck(this, Snackbar);
    _this = _super.apply(this, arguments);
    _this.html = '';
    _this._timerId = null;
    return _this;
  }
  _createClass(Snackbar, [{
    key: "notifyColorCopy",
    value: function notifyColorCopy(color) {
      var getNearestTailwindColour = nearestColour.from(tailwindColours);
      var nearestTailwindColour = getNearestTailwindColour(color);
      this.openHtml("\n      <ac-color-spot color='".concat(color, "'></ac-color-spot>\n      <div>\n      ").concat(nearestTailwindColour['name'], " copied!\n      </div>\n      "));
    }
  }, {
    key: "openHtml",
    value: function openHtml(html) {
      var _this2 = this;
      window.clearTimeout(this._timerId);
      this.html = html;
      this.classList.add('visible');
      this._timerId = window.setTimeout(function () {
        _this2.classList.remove('visible');
      }, DURATION);
    }
  }, {
    key: "render",
    value: function render() {
      return lit_element_1.html(_templateObject || (_templateObject = _taggedTemplateLiteral([" <div class=\"content\">", "</div> "])), unsafe_html_js_1.unsafeHTML(this.html));
    }
  }]);
  return Snackbar;
}(lit_element_1.LitElement);
Snackbar.styles = lit_element_1.css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n    :host {\n      position: fixed;\n      top: 10px;\n      right: 10px;\n      background: #323232;\n      padding: 6px 16px;\n      border-radius: 4px;\n      z-index: ", ";\n      box-sizing: border-box;\n      height: 48px;\n      color: white;\n      opacity: 0;\n      transition: opacity 0.15s;\n      pointer-events: none;\n    }\n\n    :host(.visible) {\n      opacity: 1;\n    }\n\n    .content {\n      display: flex;\n      align-items: center;\n      height: 100%;\n    }\n  "])), Number.MAX_SAFE_INTEGER);
__decorate([lit_element_1.internalProperty(), __metadata("design:type", Object)], Snackbar.prototype, "html", void 0);
Snackbar = __decorate([lit_element_1.customElement('ac-snackbar')], Snackbar);
exports.Snackbar = Snackbar;
},{"lit-element":"../node_modules/lit-element/lit-element.js","lit-html/directives/unsafe-html.js":"../node_modules/lit-html/directives/unsafe-html.js","nearest-color":"../node_modules/nearest-color/nearestColor.js"}],"../node_modules/lit-html/directives/style-map.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.styleMap = void 0;
var _litHtml = require("../lit-html.js");
/**
 * @license
 * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */

/**
 * Stores the StyleInfo object applied to a given AttributePart.
 * Used to unset existing values when a new StyleInfo object is applied.
 */
const previousStylePropertyCache = new WeakMap();
/**
 * A directive that applies CSS properties to an element.
 *
 * `styleMap` can only be used in the `style` attribute and must be the only
 * expression in the attribute. It takes the property names in the `styleInfo`
 * object and adds the property values as CSS properties. Property names with
 * dashes (`-`) are assumed to be valid CSS property names and set on the
 * element's style object using `setProperty()`. Names without dashes are
 * assumed to be camelCased JavaScript property names and set on the element's
 * style object using property assignment, allowing the style object to
 * translate JavaScript-style names to CSS property names.
 *
 * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':
 * '0'})` sets the `background-color`, `border-top` and `--size` properties.
 *
 * @param styleInfo {StyleInfo}
 */
const styleMap = (0, _litHtml.directive)(styleInfo => part => {
  if (!(part instanceof _litHtml.AttributePart) || part instanceof _litHtml.PropertyPart || part.committer.name !== 'style' || part.committer.parts.length > 1) {
    throw new Error('The `styleMap` directive must be used in the style attribute ' + 'and must be the only part in the attribute.');
  }
  const {
    committer
  } = part;
  const {
    style
  } = committer.element;
  let previousStyleProperties = previousStylePropertyCache.get(part);
  if (previousStyleProperties === undefined) {
    // Write static styles once
    style.cssText = committer.strings.join(' ');
    previousStylePropertyCache.set(part, previousStyleProperties = new Set());
  }
  // Remove old properties that no longer exist in styleInfo
  // We use forEach() instead of for-of so that re don't require down-level
  // iteration.
  previousStyleProperties.forEach(name => {
    if (!(name in styleInfo)) {
      previousStyleProperties.delete(name);
      if (name.indexOf('-') === -1) {
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        style[name] = null;
      } else {
        style.removeProperty(name);
      }
    }
  });
  // Add or update properties
  for (const name in styleInfo) {
    previousStyleProperties.add(name);
    if (name.indexOf('-') === -1) {
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      style[name] = styleInfo[name];
    } else {
      style.setProperty(name, styleInfo[name]);
    }
  }
});
exports.styleMap = styleMap;
},{"../lit-html.js":"../node_modules/lit-html/lit-html.js"}],"elements/color-spot.ts":[function(require,module,exports) {
"use strict";

var _templateObject, _templateObject2;
function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
    d;
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = this && this.__metadata || function (k, v) {
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
var lit_element_1 = require("lit-element");
var style_map_1 = require("lit-html/directives/style-map");
var ColorSpot = /*#__PURE__*/function (_lit_element_1$LitEle) {
  _inherits(ColorSpot, _lit_element_1$LitEle);
  var _super = _createSuper(ColorSpot);
  function ColorSpot() {
    var _this;
    _classCallCheck(this, ColorSpot);
    _this = _super.apply(this, arguments);
    _this.color = '#000000';
    return _this;
  }
  _createClass(ColorSpot, [{
    key: "spotStyles",
    get: function get() {
      return style_map_1.styleMap({
        backgroundColor: this.color
      });
    }
  }, {
    key: "render",
    value: function render() {
      return lit_element_1.html(_templateObject || (_templateObject = _taggedTemplateLiteral(["<div class=\"spot\" style=", "></div>"])), this.spotStyles);
    }
  }]);
  return ColorSpot;
}(lit_element_1.LitElement);
ColorSpot.styles = lit_element_1.css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n    .spot {\n      box-sizing: border-box;\n      display: block;\n      border-radius: 3px;\n      width: 20px;\n      height: 20px;\n      margin-right: 6px;\n    }\n  "])));
__decorate([lit_element_1.property(), __metadata("design:type", Object)], ColorSpot.prototype, "color", void 0);
ColorSpot = __decorate([lit_element_1.customElement('ac-color-spot')], ColorSpot);
},{"lit-element":"../node_modules/lit-element/lit-element.js","lit-html/directives/style-map":"../node_modules/lit-html/directives/style-map.js"}],"elements/index.ts":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
__exportStar(require("./app"), exports);
__exportStar(require("./snackbar"), exports);
__exportStar(require("./color-spot"), exports);
},{"./app":"elements/app.ts","./snackbar":"elements/snackbar.ts","./color-spot":"elements/color-spot.ts"}],"core/app-manager.ts":[function(require,module,exports) {
"use strict";

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
    d;
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = this && this.__metadata || function (k, v) {
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AppManager = void 0;
var colorins_1 = require("colorins");
var inversify_1 = require("inversify");
require("reflect-metadata");
var common_1 = require("~/common");
var elements_1 = require("~/elements");
var AppManager = /*#__PURE__*/function () {
  function AppManager(app, inspector, snackbar, messageService) {
    var _this = this;
    _classCallCheck(this, AppManager);
    this.app = app;
    this.inspector = inspector;
    this.snackbar = snackbar;
    this.messageService = messageService;
    /**
     * Sync inspector's image with captured tab.
     */
    this.updateImage = function (detail) {
      var imgSrc = detail.imgSrc,
        width = detail.width,
        height = detail.height;
      var img = new Image(width, height);
      img.src = imgSrc;
      _this.inspector.loadImage(img);
      _this.app.show();
    };
    this.toggleInspector = function () {
      var nextValue = !_this.app.visible;
      if (nextValue) {
        _this.requestCapture();
        _this.app.show();
      } else {
        _this.app.hide();
      }
      return nextValue;
    };
    this.app.hide();
    this.handleViewportChange();
    this.handleMessage();
    this.handleColorCopy();
    this.app.hide();
  }
  _createClass(AppManager, [{
    key: "handleMessage",
    value: function handleMessage() {
      this.messageService.on('toggleInspector', this.toggleInspector);
    }
    /**
     * Keep capturing current tab image when viewport changed.
     */
  }, {
    key: "handleViewportChange",
    value: function handleViewportChange() {
      var _this2 = this;
      var timerId;
      var debounceSend = function debounceSend() {
        if (!_this2.app.visible) {
          return;
        }
        window.clearTimeout(timerId);
        _this2.app.hide();
        timerId = window.setTimeout(function () {
          _this2.requestCapture();
        }, 200);
      };
      window.addEventListener('scroll', debounceSend);
      window.addEventListener('resize', debounceSend);
    }
  }, {
    key: "requestCapture",
    value: function requestCapture() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        var detail;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return this.messageService.send('requestCapture');
            case 2:
              detail = _context.sent;
              this.updateImage(detail);
            case 4:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
    }
  }, {
    key: "handleColorCopy",
    value: function handleColorCopy() {
      var _this3 = this;
      this.inspector.onCopy = function (color) {
        _this3.snackbar.notifyColorCopy(color);
      };
    }
  }]);
  return AppManager;
}();
AppManager = __decorate([inversify_1.injectable(), __metadata("design:paramtypes", [typeof (_a = typeof elements_1.App !== "undefined" && elements_1.App) === "function" ? _a : Object, typeof (_b = typeof colorins_1.Inspector !== "undefined" && colorins_1.Inspector) === "function" ? _b : Object, typeof (_c = typeof elements_1.Snackbar !== "undefined" && elements_1.Snackbar) === "function" ? _c : Object, typeof (_d = typeof common_1.MessageService !== "undefined" && common_1.MessageService) === "function" ? _d : Object])], AppManager);
exports.AppManager = AppManager;
},{"colorins":"../node_modules/colorins/dist/module/index.js","inversify":"../node_modules/inversify/lib/inversify.js","reflect-metadata":"../node_modules/reflect-metadata/Reflect.js","~/common":"common/index.ts","~/elements":"elements/index.ts"}],"core/index.ts":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
__exportStar(require("./app-manager"), exports);
},{"./app-manager":"core/app-manager.ts"}],"content.ts":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.afterInjected = void 0;
require("@webcomponents/webcomponentsjs/webcomponents-bundle");
var colorins_1 = require("colorins");
require("regenerator-runtime/runtime");
var core_1 = require("./core");
var common_1 = require("~/common");
var elements_1 = require("~/elements");
var dom = document.createElement('ac-root');
document.body.insertAdjacentElement('afterbegin', dom);
var canvas = document.createElement('canvas');
var afterInjected = dom.injectCanvas(canvas).then(function () {
  common_1.container.bind(elements_1.App).toConstantValue(dom);
  common_1.container.bind(core_1.AppManager).toSelf();
  common_1.container.bind(colorins_1.Inspector).toConstantValue(colorins_1.inspectorFactory(canvas));
  common_1.container.bind(elements_1.Snackbar).toConstantValue(elements_1.snackbarFactory(dom));
  return common_1.container.resolve(core_1.AppManager);
});
exports.afterInjected = afterInjected;
},{"@webcomponents/webcomponentsjs/webcomponents-bundle":"../node_modules/@webcomponents/webcomponentsjs/webcomponents-bundle.js","colorins":"../node_modules/colorins/dist/module/index.js","regenerator-runtime/runtime":"../node_modules/regenerator-runtime/runtime.js","./core":"core/index.ts","~/common":"common/index.ts","~/elements":"elements/index.ts"}],"../node_modules/parcel-bundler/src/builtins/hmr-runtime.js":[function(require,module,exports) {
var global = arguments[3];
var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;
function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || function () {});
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = null;
}
module.bundle.Module = Module;
var checkedAssets, assetsToAccept;
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = "localhost" || location.hostname;
  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';
  var ws = new WebSocket(protocol + '://' + hostname + ':' + "60379" + '/');
  ws.onmessage = function (event) {
    checkedAssets = {};
    assetsToAccept = [];
    var data = JSON.parse(event.data);
    if (data.type === 'update') {
      var handled = false;
      data.assets.forEach(function (asset) {
        if (!asset.isNew) {
          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);
          if (didAccept) {
            handled = true;
          }
        }
      });

      // Enable HMR for CSS by default.
      handled = handled || data.assets.every(function (asset) {
        return asset.type === 'css' && asset.generated.js;
      });
      if (handled) {
        console.clear();
        data.assets.forEach(function (asset) {
          hmrApply(global.parcelRequire, asset);
        });
        assetsToAccept.forEach(function (v) {
          hmrAcceptRun(v[0], v[1]);
        });
      } else if (location.reload) {
        // `location` global exists in a web worker context but lacks `.reload()` function.
        location.reload();
      }
    }
    if (data.type === 'reload') {
      ws.close();
      ws.onclose = function () {
        location.reload();
      };
    }
    if (data.type === 'error-resolved') {
      console.log('[parcel] ✨ Error resolved');
      removeErrorOverlay();
    }
    if (data.type === 'error') {
      console.error('[parcel] 🚨  ' + data.error.message + '\n' + data.error.stack);
      removeErrorOverlay();
      var overlay = createErrorOverlay(data);
      document.body.appendChild(overlay);
    }
  };
}
function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);
  if (overlay) {
    overlay.remove();
  }
}
function createErrorOverlay(data) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID;

  // html encode message and stack trace
  var message = document.createElement('div');
  var stackTrace = document.createElement('pre');
  message.innerText = data.error.message;
  stackTrace.innerText = data.error.stack;
  overlay.innerHTML = '<div style="background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;">' + '<span style="background: red; padding: 2px 4px; border-radius: 2px;">ERROR</span>' + '<span style="top: 2px; margin-left: 5px; position: relative;">🚨</span>' + '<div style="font-size: 18px; font-weight: bold; margin-top: 20px;">' + message.innerHTML + '</div>' + '<pre>' + stackTrace.innerHTML + '</pre>' + '</div>';
  return overlay;
}
function getParents(bundle, id) {
  var modules = bundle.modules;
  if (!modules) {
    return [];
  }
  var parents = [];
  var k, d, dep;
  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];
      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push(k);
      }
    }
  }
  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }
  return parents;
}
function hmrApply(bundle, asset) {
  var modules = bundle.modules;
  if (!modules) {
    return;
  }
  if (modules[asset.id] || !bundle.parent) {
    var fn = new Function('require', 'module', 'exports', asset.generated.js);
    asset.isNew = !modules[asset.id];
    modules[asset.id] = [fn, asset.deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}
function hmrAcceptCheck(bundle, id) {
  var modules = bundle.modules;
  if (!modules) {
    return;
  }
  if (!modules[id] && bundle.parent) {
    return hmrAcceptCheck(bundle.parent, id);
  }
  if (checkedAssets[id]) {
    return;
  }
  checkedAssets[id] = true;
  var cached = bundle.cache[id];
  assetsToAccept.push([bundle, id]);
  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    return true;
  }
  return getParents(global.parcelRequire, id).some(function (id) {
    return hmrAcceptCheck(global.parcelRequire, id);
  });
}
function hmrAcceptRun(bundle, id) {
  var cached = bundle.cache[id];
  bundle.hotData = {};
  if (cached) {
    cached.hot.data = bundle.hotData;
  }
  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }
  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];
  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      cb();
    });
    return true;
  }
}
},{}]},{},["../node_modules/parcel-bundler/src/builtins/hmr-runtime.js","content.ts"], null)